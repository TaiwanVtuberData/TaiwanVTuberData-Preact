{"version":3,"sources":["webpack:///./utils/transform/GrowthTransform.ts","webpack:///./style/CompactTableStyle.ts","webpack:///./tableTypes/NameColumn.tsx","webpack:///./tableTypes/_7DaysGrowthColumn.tsx","webpack:///./tableTypes/GroupColumn.tsx","webpack:///./tableTypes/_30DaysGrowthColumn.tsx","webpack:///./components/ProfileImagePopup/style.module.css","webpack:///./components/ProfileImagePopup/index.tsx","webpack:///./utils/NumberUtils.ts","webpack:///./utils/sort/GrowthSort.ts","webpack:///./tableTypes/NationalityColumn.tsx","webpack:///./components/SearchBar/style.module.css","webpack:///./components/SearchBar/index.tsx","webpack:///./style/ActivityRowStyles.ts","webpack:///./utils/DefaultDataTableProps.ts","webpack:///./utils/NationalityUtils.tsx","webpack:///./tableTypes/YouTubeSubscriberColumn.tsx","webpack:///./routes/GrowingVTubers/index.tsx","webpack:///./components/ToolTip/style.module.css","webpack:///./components/ToolTip/index.tsx","webpack:///./tableTypes/PopularVideoColumn.tsx","webpack:///./utils/transform/BasicTransform.ts","webpack:///./style/DataTableStyle.module.css","webpack:///./components/QuestionMarkToolTip/style.module.css","webpack:///./components/QuestionMarkToolTip/index.tsx"],"names":["growthDataToDisplayData","e","subCount","percentage","undefined","diff","VTuberGrowthToDisplay","VTuberBasicToDisplay","YouTubeSubscriber","YouTube","subscriber","_7DaysGrowth","count","_30DaysGrowth","CompactTableStyle","headCells","style","paddingLeft","paddingRight","cells","NameColumn","name","id","cell","row","VTuberId","imgUrl","_7DaysGrowthColumn","tableTranslation","GrowthDisplayDataToString","GroupColumn","group","class","tableStyle","groupLink","href","GetRoute","type","_30DaysGrowthColumn","ProfileImagePopup","props","ProfileImage","PrependSign","value","valueToPercentString","toFixed","recordType","noRecord","atLeast","_7DaysGrowthSort","rowA","rowB","aCount","bCount","_30DaysGrowthSort","NationalityColumn","selector","nationality","SearchBar","placeholder","placeholderText","filterText","onChange","onFilter","onClick","onClear","ActivityRowStyles","when","activity","backgroundColor","cursor","color","DefaultDataTableProps","columns","data","conditionalRowStyles","GetCurrentNationalitySpan","nationalityModifier","getNationalityModifierState","YouTubeSubscriberColumn","GrowingVTubersPage","document","title","dictionary","header","growingVTubers","width","sortable","table","right","sortFunction","PopularVideoColumn","useState","setData","filterName","setFilterName","filterGroup","setFilterGroup","resetPaginationToggle","setResetPaginationToggle","filteredData","filter","item","toLowerCase","includes","searchBarComponent","useMemo","searchBarGroup","searchByDisplayName","target","searchByGroup","pending","setPending","getVTubers","Api","then","res","VTubers","map","sort","a","b","useEffect","fontSize","text","customStyles","fixedHeader","pagination","paginationComponentOptions","paginationOptions","progressComponent","progressPending","subHeader","subHeaderComponent","ToolTip","children","popularVideo","YouTubeId","TwitchId","Twitch","TwitchFollower","follower","QuestionMarkToolTip"],"mappings":"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","file":"route-GrowingVTubers.chunk.3c7fc.js","sourcesContent":["import { VTuberGrowthData } from '../../types/ApiData/VTuberGrowthData';\nimport { GrowthData } from '../../types/Common/GrowthData';\nimport {\n  GrowthDisplayData,\n  VTuberGrowthDisplayData,\n} from '../../types/TableDisplayData/VTuberGrowthDisplayData';\nimport { VTuberBasicToDisplay } from './BasicTransform';\n\nconst growthDataToDisplayData = (\n  e: GrowthData,\n  subCount?: number\n): GrowthDisplayData => ({\n  ...e,\n  percentage: subCount !== undefined && subCount !== 0 ? e.diff / subCount : 0,\n});\n\nexport const VTuberGrowthToDisplay = (\n  e: VTuberGrowthData\n): VTuberGrowthDisplayData => ({\n  ...VTuberBasicToDisplay(e),\n  YouTubeSubscriber: e.YouTube.subscriber,\n  _7DaysGrowth: growthDataToDisplayData(\n    e.YouTube._7DaysGrowth,\n    e.YouTube.subscriber.count\n  ),\n  _30DaysGrowth: growthDataToDisplayData(\n    e.YouTube._30DaysGrowth,\n    e.YouTube.subscriber.count\n  ),\n});\n","import { TableStyles } from 'react-data-table-component';\n\nexport const CompactTableStyle: TableStyles = {\n  headCells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for head cells\n      paddingRight: '5px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for data cells\n      paddingRight: '5px',\n    },\n  },\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ProfileImagePopup from '../components/ProfileImagePopup';\n\nexport interface NameColumnRowData {\n  id: string;\n  imgUrl?: string;\n  name: string;\n}\n\nexport const NameColumn = <\n  RowData extends NameColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.displayName\">Name</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <ProfileImagePopup\n        VTuberId={row.id}\n        imgUrl={row.imgUrl}\n        name={row.name}\n      />\n    ),\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GrowthDisplayData } from '../types/TableDisplayData/VTuberGrowthDisplayData';\nimport { GrowthDisplayDataToString } from '../utils/NumberUtils';\n\nexport interface Days7GrowthColumnRowData {\n  _7DaysGrowth: GrowthDisplayData;\n}\n\nexport const _7DaysGrowthColumn = <\n  RowData extends Days7GrowthColumnRowData\n>(tableTranslation: {\n  noRecord: string;\n  atLeast: string;\n}): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table._7DaysGrowth\">7 Days Growth (Percent)</Text>,\n    cell: (row: RowData): string =>\n      GrowthDisplayDataToString(row._7DaysGrowth, tableTranslation),\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GetRoute } from '../utils/TypeSafeRouting';\nimport tableStyle from '../style/DataTableStyle.module.css';\n\nexport interface GroupColumnRowData {\n  group?: string;\n}\n\nexport const GroupColumn = <\n  RowData extends GroupColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.group\">Group</Text>,\n    cell: (row: RowData): h.JSX.Element | null =>\n      row.group !== undefined ? (\n        <a\n          class={tableStyle.groupLink}\n          href={GetRoute({ type: 'group', name: row.group })}\n        >\n          {row.group}\n        </a>\n      ) : null,\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GrowthDisplayData } from '../types/TableDisplayData/VTuberGrowthDisplayData';\nimport { GrowthDisplayDataToString } from '../utils/NumberUtils';\n\nexport interface Days30GrowthColumnRowData {\n  _30DaysGrowth: GrowthDisplayData;\n}\n\nexport const _30DaysGrowthColumn = <\n  RowData extends Days30GrowthColumnRowData\n>(tableTranslation: {\n  noRecord: string;\n  atLeast: string;\n}): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table._30DaysGrowth\">30 Days Growth (Percent)</Text>,\n    cell: (row: RowData): string =>\n      GrowthDisplayDataToString(row._30DaysGrowth, tableTranslation),\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__vr1DG\",\"profileImageFlex\":\"profileImageFlex__4VERG\",\"nameFlex\":\"nameFlex__WFOO9\"};","import { FunctionalComponent, h } from 'preact';\nimport ProfileImage from '../ProfileImage';\nimport style from './style.module.css';\n\nexport interface ProfileImagePopupProps {\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n}\n\nconst ProfileImagePopup: FunctionalComponent<ProfileImagePopupProps> = (\n  props: ProfileImagePopupProps\n): h.JSX.Element => {\n  return (\n    <div class={style.container}>\n      <div class={style.profileImageFlex}>\n        <ProfileImage VTuberId={props.VTuberId} imgUrl={props.imgUrl} />\n      </div>\n      <span class={style.nameFlex}>{props.name}</span>\n    </div>\n  );\n};\n\nexport default ProfileImagePopup;\n","import { GrowthRecordType } from '../types/Common/GrowthData';\n\nexport const PrependSign = (value: number): string => {\n  if (value > 0) return `+${value}`;\n  if (value < 0) return `${value}`;\n\n  return '0';\n};\n\nconst valueToPercentString = (value: number): string =>\n  (value * 100).toFixed(2);\n\nexport const GrowthDisplayDataToString = (\n  e: { diff: number; recordType: GrowthRecordType; percentage?: number },\n  tableTranslation: { noRecord: string; atLeast: string }\n): string => {\n  if (e.percentage) {\n    switch (e.recordType) {\n      case 'none':\n        return tableTranslation.noRecord;\n      case 'partial':\n        return `${tableTranslation.atLeast} ${PrependSign(\n          e.diff\n        )} (${valueToPercentString(e.percentage as number)}%)`;\n      case 'full':\n        return `${PrependSign(e.diff)} (${valueToPercentString(\n          e.percentage\n        )}%)`;\n    }\n  }\n\n  switch (e.recordType) {\n    case 'none':\n      return tableTranslation.noRecord;\n    case 'partial':\n      return `${tableTranslation.atLeast} ${PrependSign(e.diff)}`;\n    case 'full':\n      return `${PrependSign(e.diff)}`;\n  }\n};\n","import { ColumnSortFunction } from 'react-data-table-component/dist/src/DataTable/types';\nimport { GrowthDisplayData } from '../../types/TableDisplayData/VTuberGrowthDisplayData';\n\n// TODO: how do I inject field name _7DaysGrowth using template?\nexport const _7DaysGrowthSort: ColumnSortFunction<{\n  _7DaysGrowth: GrowthDisplayData;\n}> = (rowA, rowB) => {\n  const aCount = rowA._7DaysGrowth.percentage;\n  const bCount = rowB._7DaysGrowth.percentage;\n\n  if (aCount > bCount) return 1;\n\n  if (bCount > aCount) return -1;\n\n  return 0;\n};\n\nexport const _30DaysGrowthSort: ColumnSortFunction<{\n  _30DaysGrowth: GrowthDisplayData;\n}> = (rowA, rowB) => {\n  const aCount = rowA._30DaysGrowth.percentage;\n  const bCount = rowB._30DaysGrowth.percentage;\n\n  if (aCount > bCount) return 1;\n\n  if (bCount > aCount) return -1;\n\n  return 0;\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\n\nexport interface NationalityColumnRowData {\n  nationality?: string;\n}\n\nexport const NationalityColumn = <\n  RowData extends NationalityColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.nationality\">Nationality</Text>,\n    selector: (row: RowData): string => row.nationality ?? '',\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__1lsi6\",\"textField\":\"textField__bDpXR\",\"button\":\"button__maFzS\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface SearchBarProps {\n  placeholderText?: string;\n  filterText: string;\n  onFilter: (e: unknown) => unknown;\n  onClear: () => unknown;\n}\n\nconst SearchBar: FunctionalComponent<SearchBarProps> = (\n  props: SearchBarProps\n): h.JSX.Element => (\n  <div class={style.container}>\n    <input\n      type=\"text\"\n      class={style.textField}\n      placeholder={props.placeholderText}\n      value={props.filterText}\n      onChange={props.onFilter}\n    />\n\n    <button type=\"button\" class={style.button} onClick={props.onClear}>\n      X\n    </button>\n  </div>\n);\n\nexport default SearchBar;\n","import { Activity } from '../types/Common/Activity';\n\nconst ActivityRowStyles = [\n  {\n    when: (row: { activity: Activity }): boolean =>\n      row.activity === 'preparing',\n    style: {\n      backgroundColor: 'rgba(141, 209, 157, 0.9)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity }): boolean => row.activity === 'graduate',\n    style: {\n      backgroundColor: 'rgba(123, 123, 123, 0.9)',\n      color: 'white',\n      '&:hover': {\n        cursor: 'not-allowed',\n      },\n    },\n  },\n];\n\nexport default ActivityRowStyles;\n","import { TableProps } from 'react-data-table-component';\nimport ActivityRowStyles from '../style/ActivityRowStyles';\nimport { Activity } from '../types/Common/Activity';\n\n// columns and data are empty, user should fill them when using DefaultDataTableProps\nconst DefaultDataTableProps = <\n  T extends { activity: Activity }\n>(): TableProps<T> => ({\n  columns: [],\n  data: [],\n  conditionalRowStyles: ActivityRowStyles,\n});\n\nexport default DefaultDataTableProps;\n","import { Fragment, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { getNationalityModifierState } from '../global/DisplayNationality';\nimport { NationalityModifier } from '../types/Common/NationalityModifier';\n\nexport const GetCurrentNationalitySpan = (): JSX.Element | null => {\n  const nationalityModifier: NationalityModifier =\n    getNationalityModifierState();\n\n  switch (nationalityModifier) {\n    case 'TW':\n    case 'HK':\n    case 'MY':\n      return (\n        <>\n          {' '}\n          (<Text id=\"text.onlyShowing\">only showing </Text>\n          <Text id={`nationalityTitle.${nationalityModifier}`}>\n            placeholder\n          </Text>{' '}\n          VTuber)\n        </>\n      );\n    case 'all':\n    default:\n      return null;\n  }\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { HasCountType } from '../types/Common/CountType';\n\nexport interface YouTubeSubscriberColumnRowData {\n  YouTubeSubscriber: HasCountType;\n}\n\nexport const YouTubeSubscriberColumn = <\n  RowData extends YouTubeSubscriberColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.YouTubeSubscriberCount\">YouTube Subscribers</Text>,\n    selector: (row: RowData): number => row.YouTubeSubscriber.count,\n  };\n};\n","import * as Api from '../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useMemo, useEffect } from 'preact/hooks';\nimport DataTable, { TableColumn } from 'react-data-table-component';\nimport QuestionMarkToolTip from '../../components/QuestionMarkToolTip';\nimport SearchBar from '../../components/SearchBar';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport { CompactTableStyle } from '../../style/CompactTableStyle';\nimport { GroupColumn } from '../../tableTypes/GroupColumn';\nimport { NameColumn } from '../../tableTypes/NameColumn';\nimport { NationalityColumn } from '../../tableTypes/NationalityColumn';\nimport { PopularVideoColumn } from '../../tableTypes/PopularVideoColumn';\nimport { YouTubeSubscriberColumn } from '../../tableTypes/YouTubeSubscriberColumn';\nimport { _30DaysGrowthColumn } from '../../tableTypes/_30DaysGrowthColumn';\nimport { _7DaysGrowthColumn } from '../../tableTypes/_7DaysGrowthColumn';\nimport { VTuberGrowthDisplayData } from '../../types/TableDisplayData/VTuberGrowthDisplayData';\nimport DefaultDataTableProps from '../../utils/DefaultDataTableProps';\nimport { GetCurrentNationalitySpan } from '../../utils/NationalityUtils';\nimport { VTuberGrowthToDisplay } from '../../utils/transform/GrowthTransform';\nimport tableStyle from '../../style/DataTableStyle.module.css';\nimport {\n  _30DaysGrowthSort,\n  _7DaysGrowthSort,\n} from '../../utils/sort/GrowthSort';\nimport ActivityRowStyles from '../../style/ActivityRowStyles';\n\nexport interface GrowingVTubersPageProps {\n  dictionary: Dictionary;\n}\n\nconst GrowingVTubersPage: FunctionalComponent<GrowingVTubersPageProps> = (\n  props: GrowingVTubersPageProps\n) => {\n  document.title = `${props.dictionary.header.growingVTubers} | ${props.dictionary.header.title}`;\n\n  const columns: Array<TableColumn<VTuberGrowthDisplayData>> = [\n    {\n      ...NameColumn(),\n      width: '200px',\n    },\n    {\n      ...YouTubeSubscriberColumn(),\n      sortable: true,\n    },\n    {\n      ..._7DaysGrowthColumn(props.dictionary.table),\n      right: true,\n      sortable: true,\n      sortFunction: _7DaysGrowthSort,\n    },\n    {\n      ..._30DaysGrowthColumn(props.dictionary.table),\n      right: true,\n      sortable: true,\n      sortFunction: _30DaysGrowthSort,\n    },\n    {\n      ...PopularVideoColumn(),\n      width: '100px',\n    },\n    {\n      ...GroupColumn(),\n      width: '100px',\n    },\n    {\n      ...NationalityColumn(),\n      width: '100px',\n    },\n  ];\n\n  // search filter\n  const [data, setData] = useState<Array<VTuberGrowthDisplayData>>([]);\n  const [filterName, setFilterName] = useState<string>('');\n  const [filterGroup, setFilterGroup] = useState<string>('');\n  const [resetPaginationToggle, setResetPaginationToggle] =\n    useState<boolean>(false);\n  const filteredData = data\n    .filter(\n      (item) =>\n        item.name && item.name.toLowerCase().includes(filterName.toLowerCase())\n    )\n    .filter((item) => {\n      if (filterGroup === '') return true;\n      if (item.group === undefined) return false;\n      return item.group.toLowerCase().includes(filterGroup.toLowerCase());\n    });\n\n  const searchBarComponent = useMemo(() => {\n    const handleClearName = (): void => {\n      if (filterName) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterName('');\n      }\n    };\n\n    const handleClearGroup = (): void => {\n      if (filterGroup) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterGroup('');\n      }\n    };\n\n    return (\n      <div class={tableStyle.searchBarGroup}>\n        <SearchBar\n          placeholderText={props.dictionary.table.searchByDisplayName}\n          onFilter={(e: any): void => setFilterName(e.target.value)}\n          onClear={handleClearName}\n          filterText={filterName}\n        />\n        <SearchBar\n          placeholderText={props.dictionary.table.searchByGroup}\n          onFilter={(e: any): void => setFilterGroup(e.target.value)}\n          onClear={handleClearGroup}\n          filterText={filterGroup}\n        />\n      </div>\n    );\n  }, [filterName, filterGroup, resetPaginationToggle, props.dictionary]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getGrowingVTubers('100').then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .map((e) => VTuberGrowthToDisplay(e))\n          .sort((a, b) => b._7DaysGrowth.percentage - a._7DaysGrowth.percentage)\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h1>\n        <Text id=\"header.growingVTubers\">Growing VTubers</Text>\n        {GetCurrentNationalitySpan()}\n        <QuestionMarkToolTip\n          width=\"300px\"\n          fontSize=\"13px\"\n          text={<Text id=\"toolTip.growingVTubers\">tooltip text</Text>}\n        />\n      </h1>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={filteredData}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        fixedHeader\n        pagination\n        paginationComponentOptions={props.dictionary.table.paginationOptions}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n        subHeader\n        subHeaderComponent={searchBarComponent}\n      />\n    </>\n  );\n};\n\nexport default GrowingVTubersPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"tooltip__vtGmz\",\"tooltipText\":\"tooltipText__pA-zc\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface ToolTipProps {\n  text: string | React.ReactNode;\n  children: React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst ToolTip: FunctionalComponent<ToolTipProps> = (\n  props: ToolTipProps\n): h.JSX.Element => {\n  return (\n    <div class={style.tooltip}>\n      {props.children}\n      <span\n        class={style.tooltipText}\n        style={{ width: props.width, fontSize: props.fontSize }}\n      >\n        {props.text}\n      </span>\n    </div>\n  );\n};\n\nexport default ToolTip;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ShowVideoButton from '../components/ShowVideoButton';\nimport { VideoInfo } from '../types/Common/VideoInfo';\n\nexport interface PopularVideoColumnRowData {\n  popularVideo?: VideoInfo;\n}\n\nexport const PopularVideoColumn = <\n  RowData extends PopularVideoColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularVideo\">Popular Video</Text>,\n    cell: (row: RowData): JSX.Element | null =>\n      row.popularVideo !== undefined ? (\n        <ShowVideoButton popularVideo={row.popularVideo} />\n      ) : null,\n  };\n};\n","import { VTuberData } from '../../types/ApiData/VTuberData';\nimport { VTuberDisplayData } from '../../types/TableDisplayData/VTuberDisplayData';\n\nexport const VTuberBasicToDisplay = (e: VTuberData): VTuberDisplayData => ({\n  id: e.id,\n  activity: e.activity,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  YouTubeId: e.YouTube?.id,\n  YouTubeSubscriber: e.YouTube?.subscriber,\n  TwitchId: e.Twitch?.id,\n  TwitchFollower: e.Twitch?.follower,\n  popularVideo: e.popularVideo,\n  group: e.group,\n  nationality: e.nationality,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"groupLink\":\"x4dKXRdnDI9qgFfe4BsDUQ==\",\"searchBarGroup\":\"R1T8+hwxvBovrVdGHizUFw==\"};","// extracted by mini-css-extract-plugin\nexport default {\"questionMark\":\"questionMark__RT3wD\"};","import { FunctionalComponent, h } from 'preact';\nimport ToolTip from '../ToolTip';\nimport style from './style.module.css';\n\nexport interface QuestionMarkToolTip {\n  text: string | React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst QuestionMarkToolTip: FunctionalComponent<QuestionMarkToolTip> = (\n  props: QuestionMarkToolTip\n): h.JSX.Element => {\n  return (\n    <ToolTip text={props.text} width={props.width} fontSize={props.fontSize}>\n      <img class={style.questionMark} />\n    </ToolTip>\n  );\n};\n\nexport default QuestionMarkToolTip;\n"],"sourceRoot":""}