{"version":3,"sources":["webpack:///./style/CompactTableStyle.ts","webpack:///./tableTypes/NameColumn.tsx","webpack:///./routes/VTubersViewCount/index.tsx","webpack:///./tableTypes/GroupColumn.tsx","webpack:///./components/ProfileImagePopup/style.module.css","webpack:///./components/ProfileImagePopup/index.tsx","webpack:///./utils/NumberUtils.ts","webpack:///./components/DropDownList/style.module.css","webpack:///./components/DropDownList/index.tsx","webpack:///./tableTypes/NationalityColumn.tsx","webpack:///./utils/FilterModelHelper.ts","webpack:///./components/SearchBar/style.module.css","webpack:///./components/SearchBar/index.tsx","webpack:///./style/ActivityRowStyles.ts","webpack:///./utils/DefaultDataTableProps.ts","webpack:///./utils/NationalityUtils.tsx","webpack:///./components/FilterWindow/style.module.css","webpack:///./components/FilterWindow/index.tsx","webpack:///./utils/StringUtils.ts","webpack:///./utils/transform/ViewCountTransform.ts","webpack:///./tableTypes/RankingColumn.tsx","webpack:///./tableTypes/PopularVideoColumn.tsx","webpack:///./style/DataTableStyle.module.css"],"names":["CompactTableStyle","headCells","style","paddingLeft","paddingRight","cells","NameColumn","name","h","Text","id","cell","row","ProfileImagePopup","VTuberId","imgUrl","VTubersViewCountPage","props","document","title","dictionary","header","VTubersViewCount","columns","_objectSpread","RankingColumn","sortable","width","selector","totalViewCount","compact","GrowthDisplayDataToString","_7DaysGrowth","table","right","_30DaysGrowth","PopularVideoColumn","GroupColumn","NationalityColumn","data","setData","useState","filterModel","setFilterModel","YouTubeId","TwitchId","group","nationality","filteredData","filter","e","filterFunction","searchBarComponent","useMemo","optionValue","option","value","fieldPlaceHolderMappings","Map","searchByDisplayName","searchByYouTubeId","searchByTwitchId","searchByGroup","searchByNationality","class","tableStyle","searchBarGroup","DropDownList","tipText","sortingMethod","modifier","onChange","GoToPage","type","sortOrder","target","FilterWindow","openSearchText","text","openSearch","closeSearchText","closeSearch","pending","setPending","_7DaysDescendingSort","rowA","rowB","YouTube","diff","_30DaysDescendingSort","getVTubers","async","Api","sortBy","count","then","res","VTubers","map","sort","GetSortingMethod","index","VTuberViewCountToDisplay","useEffect","Fragment","GetCurrentNationalitySpan","DataTable","_extends","DefaultDataTableProps","conditionalRowStyles","ActivityRowStyles","customStyles","fixedHeader","pagination","paginationComponentOptions","paginationOptions","progressComponent","progressPending","subHeader","subHeaderComponent","undefined","href","GetRoute","ProfileImage","clickBehavior","PrependSign","valueToPercentString","toFixed","tableTranslation","percentage","recordType","noRecord","atLeast","tryParseInteger","str","defaultValue","parsedVal","parseInt","isNaN","dropDownStyle","dropDown","key","_row$nationality","targetModel","Object","entries","entry","toLowerCase","includes","some","SearchBar","_props$filterText","placeholder","placeholderText","filterText","onFilter","onClick","onClear","when","activity","backgroundColor","cursor","debutInfo","hasDebutInfo","isRecentlyDebut","color","nationalityModifier","getNationalityModifierState","isOpened","setIsOpened","setFilter","createSearchBar","keyTyped","handleOnFilterChange","nullableString","trimmed","trim","trimOrNullOnEmpty","handleOnChange","get","fields","keys","ToggleButton","ranking","_e$Twitch","Twitch","popularVideo","wrap","ShowVideoButton"],"mappings":"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","file":"route-VTubersViewCount.chunk.8f7b5.esm.js","sourcesContent":["import { TableStyles } from 'react-data-table-component';\n\nexport const CompactTableStyle: TableStyles = {\n  headCells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for head cells\n      paddingRight: '5px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for data cells\n      paddingRight: '5px',\n    },\n  },\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ProfileImagePopup from '../components/ProfileImagePopup';\n\nexport interface NameColumnRowData {\n  id: string;\n  imgUrl?: string;\n  name: string;\n}\n\nexport const NameColumn = <\n  RowData extends NameColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.displayName\">Name</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <ProfileImagePopup\n        VTuberId={row.id}\n        imgUrl={row.imgUrl}\n        name={row.name}\n      />\n    ),\n  };\n};\n","import * as Api from '../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useMemo, useEffect } from 'preact/hooks';\nimport DataTable, { TableColumn } from 'react-data-table-component';\nimport DropDownList from '../../components/DropDownList';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport { CompactTableStyle } from '../../style/CompactTableStyle';\nimport { GroupColumn } from '../../tableTypes/GroupColumn';\nimport { NameColumn } from '../../tableTypes/NameColumn';\nimport { NationalityColumn } from '../../tableTypes/NationalityColumn';\nimport { PopularVideoColumn } from '../../tableTypes/PopularVideoColumn';\nimport { RankingColumn } from '../../tableTypes/RankingColumn';\nimport { GrowthData } from '../../types/Common/GrowthData';\nimport { YouTubeViewCountGrowthData } from '../../types/Common/YouTube/YouTubeViewCountGrowthData';\nimport { VTuberViewCountGrowthDisplayData } from '../../types/TableDisplayData/VTuberViewCountGrowthDisplayData';\nimport DefaultDataTableProps from '../../utils/DefaultDataTableProps';\nimport { GetCurrentNationalitySpan } from '../../utils/NationalityUtils';\nimport { GrowthDisplayDataToString } from '../../utils/NumberUtils';\nimport { VTuberViewCountToDisplay } from '../../utils/transform/ViewCountTransform';\nimport { GoToPage } from '../../utils/TypeSafeRouting';\nimport tableStyle from '../../style/DataTableStyle.module.css';\nimport { DayRangeSortOrder } from '../../types/ApiTypes';\nimport ActivityRowStyles from '../../style/ActivityRowStyles';\nimport { VTuberViewCountGrowthDisplayDataFilterModel } from '../../types/FilterType/VTuberViewCountGrowthDisplayDataFilterModel';\nimport FilterWindow from '../../components/FilterWindow';\nimport { filterFunction } from '../../utils/FilterModelHelper';\n\nexport interface VTubersViewCountPageProps {\n  dictionary: Dictionary;\n  modifier: DayRangeSortOrder;\n}\n\nconst VTubersViewCountPage: FunctionalComponent<VTubersViewCountPageProps> = (\n  props: VTubersViewCountPageProps\n) => {\n  document.title = `${props.dictionary.header.VTubersViewCount} | ${props.dictionary.header.title}`;\n\n  const columns: Array<TableColumn<VTuberViewCountGrowthDisplayData>> = [\n    {\n      ...RankingColumn(),\n      sortable: true,\n      width: '40px',\n    },\n    {\n      ...NameColumn(),\n      width: '200px',\n    },\n    {\n      name: (\n        <Text id=\"table.YouTubeTotalViewCount\">YouTube Total View Count</Text>\n      ),\n      selector: (row: { totalViewCount: number }): number => row.totalViewCount,\n      compact: true,\n      sortable: true,\n    },\n    {\n      name: <Text id=\"table._7DaysViewCountGrowth\">7 Days Growth</Text>,\n      cell: (row: { _7DaysGrowth: GrowthData }): string =>\n        GrowthDisplayDataToString(row._7DaysGrowth, props.dictionary.table),\n      compact: true,\n      right: true,\n    },\n    {\n      name: <Text id=\"table._30DaysViewCountGrowth\">30 Days Growth</Text>,\n      cell: (row: { _30DaysGrowth: GrowthData }): string =>\n        GrowthDisplayDataToString(row._30DaysGrowth, props.dictionary.table),\n      compact: true,\n      right: true,\n    },\n    {\n      ...PopularVideoColumn(),\n      width: '100px',\n    },\n    {\n      ...GroupColumn(),\n      width: '150px',\n    },\n    {\n      ...NationalityColumn(),\n      width: '125px',\n    },\n  ];\n\n  // search filter\n  const [data, setData] = useState<Array<VTuberViewCountGrowthDisplayData>>([]);\n  const [filterModel, setFilterModel] =\n    useState<VTuberViewCountGrowthDisplayDataFilterModel>({\n      name: null,\n      YouTubeId: null,\n      TwitchId: null,\n      group: null,\n      nationality: null,\n    });\n  const filteredData = data.filter((e) => filterFunction(e, filterModel));\n\n  const searchBarComponent = useMemo(() => {\n    const optionValue: Array<{\n      option: h.JSX.Element;\n      value: DayRangeSortOrder;\n    }> = [\n      {\n        option: <Text id=\"table._7DaysViewCountGrowth\">7 Days Growth</Text>,\n        value: '7-days',\n      },\n      {\n        option: <Text id=\"table._30DaysViewCountGrowth\">30 Days Growth</Text>,\n        value: '30-days',\n      },\n    ];\n\n    const handleFilterWindow = (\n      filterModel: VTuberViewCountGrowthDisplayDataFilterModel\n    ): void => {\n      setFilterModel(filterModel);\n    };\n\n    const fieldPlaceHolderMappings: Map<string, string> = new Map<\n      string,\n      string\n    >([\n      ['name', props.dictionary.table.searchByDisplayName],\n      ['YouTubeId', props.dictionary.table.searchByYouTubeId],\n      ['TwitchId', props.dictionary.table.searchByTwitchId],\n      ['group', props.dictionary.table.searchByGroup],\n      ['nationality', props.dictionary.table.searchByNationality],\n    ]);\n\n    return (\n      <div class={tableStyle.searchBarGroup}>\n        <DropDownList\n          tipText={props.dictionary.table.sortingMethod}\n          value={props.modifier}\n          optionValue={optionValue}\n          onChange={(e: any) =>\n            GoToPage({\n              type: 'vtubers-view-count',\n              sortOrder: e.target.value,\n            })\n          }\n        />\n        <FilterWindow\n          filterModel={filterModel}\n          fieldPlaceHolderMappings={fieldPlaceHolderMappings}\n          openSearchText={props.dictionary.text.openSearch}\n          closeSearchText={props.dictionary.text.closeSearch}\n          onChange={handleFilterWindow}\n        />\n      </div>\n    );\n  }, [filterModel, props.modifier, props.dictionary]);\n\n  const [pending, setPending] = useState(true);\n\n  const _7DaysDescendingSort = <\n    T extends { YouTube: YouTubeViewCountGrowthData }\n  >(\n    rowA: T,\n    rowB: T\n  ): number => {\n    return rowB.YouTube._7DaysGrowth.diff - rowA.YouTube._7DaysGrowth.diff;\n  };\n\n  const _30DaysDescendingSort = <\n    T extends { YouTube: YouTubeViewCountGrowthData }\n  >(\n    rowA: T,\n    rowB: T\n  ): number => {\n    return rowB.YouTube._30DaysGrowth.diff - rowA.YouTube._30DaysGrowth.diff;\n  };\n\n  const GetSortingMethod = (sortBy: DayRangeSortOrder) => {\n    switch (sortBy) {\n      case '7-days':\n        return _7DaysDescendingSort;\n      case '30-days':\n        return _30DaysDescendingSort;\n    }\n  };\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getVTubersViewCountChange({\n      sortBy: props.modifier,\n      count: '100',\n    }).then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .map((e) => e)\n          .sort(GetSortingMethod(props.modifier))\n          .map((e, index) => VTuberViewCountToDisplay(e, index + 1))\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h1>\n        <Text id=\"header.VTubersViewCount\">VTubers View Count Change</Text>\n        {GetCurrentNationalitySpan()}\n      </h1>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={filteredData}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        fixedHeader\n        pagination\n        paginationComponentOptions={props.dictionary.table.paginationOptions}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n        subHeader\n        subHeaderComponent={searchBarComponent}\n      />\n    </>\n  );\n};\n\nexport default VTubersViewCountPage;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GetRoute } from '../utils/TypeSafeRouting';\n\nexport interface GroupColumnRowData {\n  group?: string;\n}\n\nexport const GroupColumn = <\n  RowData extends GroupColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.group\">Group</Text>,\n    cell: (row: RowData): h.JSX.Element | null =>\n      row.group !== undefined ? (\n        <a href={GetRoute({ type: 'group', name: row.group })}>{row.group}</a>\n      ) : null,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__vr1DG\",\"profileImageFlex\":\"profileImageFlex__4VERG\",\"nameFlex\":\"nameFlex__WFOO9\"};","import { FunctionalComponent, h } from 'preact';\nimport ProfileImage from '../ProfileImage';\nimport style from './style.module.css';\n\nexport interface ProfileImagePopupProps {\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n}\n\nconst ProfileImagePopup: FunctionalComponent<ProfileImagePopupProps> = (\n  props: ProfileImagePopupProps\n): h.JSX.Element => {\n  return (\n    <div class={style.container}>\n      <div class={style.profileImageFlex}>\n        <ProfileImage\n          VTuberId={props.VTuberId}\n          imgUrl={props.imgUrl}\n          clickBehavior=\"popup\"\n        />\n      </div>\n      <span class={style.nameFlex}>{props.name}</span>\n    </div>\n  );\n};\n\nexport default ProfileImagePopup;\n","import { GrowthRecordType } from '../types/Common/GrowthData';\n\nexport const PrependSign = (value: number): string => {\n  if (value > 0) return `+${value}`;\n  if (value < 0) return `${value}`;\n\n  return '0';\n};\n\nconst valueToPercentString = (value: number): string =>\n  (value * 100).toFixed(2);\n\nexport const GrowthDisplayDataToString = (\n  e: { diff: number; recordType: GrowthRecordType; percentage?: number },\n  tableTranslation: { noRecord: string; atLeast: string }\n): string => {\n  if (e.percentage) {\n    switch (e.recordType) {\n      case 'none':\n        return tableTranslation.noRecord;\n      case 'partial':\n        return `${tableTranslation.atLeast} ${PrependSign(\n          e.diff\n        )} (${valueToPercentString(e.percentage as number)}%)`;\n      case 'full':\n        return `${PrependSign(e.diff)} (${valueToPercentString(\n          e.percentage\n        )}%)`;\n    }\n  }\n\n  switch (e.recordType) {\n    case 'none':\n      return tableTranslation.noRecord;\n    case 'partial':\n      return `${tableTranslation.atLeast} ${PrependSign(e.diff)}`;\n    case 'full':\n      return `${PrependSign(e.diff)}`;\n  }\n};\n\nexport const tryParseInteger = (\n  str: string | undefined,\n  defaultValue: number\n): number => {\n  if (str !== undefined) {\n    const parsedVal = parseInt(str, 10);\n    if (isNaN(parsedVal) === false) {\n      return parsedVal;\n    }\n  }\n\n  return defaultValue;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tipText\":\"tipText__4DHD3\"};","import { h } from 'preact';\nimport style from './style.module.css';\nimport dropDownStyle from '../../style/DropDownStyle.module.css';\n\nexport interface DropDownListProps<ValueType> {\n  tipText?: string;\n  optionValue?: Array<{ option: any; value: ValueType }>;\n  value?: ValueType;\n  onChange?: (e: unknown) => unknown;\n}\n\nfunction DropDownList<ValueType extends string | number>(\n  props: DropDownListProps<ValueType>\n): h.JSX.Element {\n  return (\n    <div>\n      <span class={style.tipText}>{props.tipText}</span>\n      <select\n        class={dropDownStyle.dropDown}\n        value={props.value}\n        onChange={props.onChange}\n      >\n        {props.optionValue !== undefined\n          ? props.optionValue.map((e) => (\n              <option key={e.value} value={e.value}>\n                {e.option}\n              </option>\n            ))\n          : null}\n      </select>\n    </div>\n  );\n}\n\nexport default DropDownList;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\n\nexport interface NationalityColumnRowData {\n  nationality?: string;\n}\n\nexport const NationalityColumn = <\n  RowData extends NationalityColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.nationality\">Nationality</Text>,\n    selector: (row: RowData): string => row.nationality ?? '',\n  };\n};\n","export function filterFunction<\n  TargetType extends object,\n  FilterModel extends object\n>(targetModel: TargetType, filterModel: FilterModel): boolean {\n  const result = Object.entries(filterModel).map((entry) => {\n    const keyTyped = entry[0] as keyof typeof targetModel;\n    const target = targetModel[keyTyped] as string | undefined | null;\n\n    const filter = entry[1] as string | null;\n\n    // if there is no filter applied\n    if (filter === null) {\n      return true;\n    }\n\n    // if target doesn't exist\n    if (target === null || target === undefined || target === '') {\n      return false;\n    }\n\n    return target.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  const someFilterNotMatch = result.some((e) => e === false);\n\n  return !someFilterNotMatch;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__1lsi6\",\"textField\":\"textField__bDpXR\",\"button\":\"button__maFzS\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface SearchBarProps {\n  placeholderText?: string;\n  filterText: string | null;\n  onFilter: (e: unknown) => unknown;\n  onClear: () => unknown;\n}\n\nconst SearchBar: FunctionalComponent<SearchBarProps> = (\n  props: SearchBarProps\n): h.JSX.Element => (\n  <div class={style.container}>\n    <input\n      type=\"text\"\n      class={style.textField}\n      placeholder={props.placeholderText}\n      value={props.filterText ?? ''}\n      onChange={props.onFilter}\n    />\n\n    <button type=\"button\" class={style.button} onClick={props.onClear}>\n      X\n    </button>\n  </div>\n);\n\nexport default SearchBar;\n","import { Activity } from '../types/Common/Activity';\nimport { DebutInfo } from '../types/DebutInfo';\n\nconst ActivityRowStyles = [\n  {\n    when: (row: { activity: Activity }): boolean =>\n      row.activity === 'preparing',\n    style: {\n      backgroundColor: 'rgba(141, 209, 157, 0.9)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity; debutInfo?: DebutInfo }): boolean =>\n      row.activity === 'active' &&\n      row.debutInfo !== undefined &&\n      row.debutInfo.hasDebutInfo === true &&\n      row.debutInfo.isRecentlyDebut === true,\n    style: {\n      backgroundColor: 'rgba(156, 205, 196, 0.5)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity }): boolean => row.activity === 'graduate',\n    style: {\n      backgroundColor: 'rgba(123, 123, 123, 0.9)',\n      color: 'white',\n      '&:hover': {\n        cursor: 'not-allowed',\n      },\n    },\n  },\n];\n\nexport default ActivityRowStyles;\n","import { TableProps } from 'react-data-table-component';\nimport ActivityRowStyles from '../style/ActivityRowStyles';\nimport { Activity } from '../types/Common/Activity';\n\n// columns and data are empty, user should fill them when using DefaultDataTableProps\nconst DefaultDataTableProps = <\n  T extends { activity: Activity }\n>(): TableProps<T> => ({\n  columns: [],\n  data: [],\n  conditionalRowStyles: ActivityRowStyles,\n});\n\nexport default DefaultDataTableProps;\n","import { Fragment, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { getNationalityModifierState } from '../global/DisplayNationality';\nimport { NationalityModifier } from '../types/Common/NationalityModifier';\n\nexport const GetCurrentNationalitySpan = (): JSX.Element | null => {\n  const nationalityModifier: NationalityModifier =\n    getNationalityModifierState();\n\n  switch (nationalityModifier) {\n    case 'TW':\n    case 'HK':\n    case 'MY':\n      return (\n        <>\n          {' '}\n          (<Text id=\"text.onlyShowing\">only showing </Text>\n          <Text id={`nationalityTitle.${nationalityModifier}`}>\n            placeholder\n          </Text>{' '}\n          VTuber)\n        </>\n      );\n    case 'all':\n    default:\n      return null;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"floating\":\"floating__uhu4Y\",\"floatingHidden\":\"floatingHidden__mvSUQ\",\"floatingShowing\":\"floatingShowing__nwzm5\"};","import { h } from 'preact';\nimport { useState } from 'preact/hooks';\nimport { trimOrNullOnEmpty } from '../../utils/StringUtils';\nimport SearchBar from '../SearchBar';\nimport style from './style.module.css';\n\nexport interface FilterWindowProps<FilterModel extends object> {\n  filterModel: FilterModel;\n  fieldPlaceHolderMappings: Map<string, string>;\n  openSearchText: string;\n  closeSearchText: string;\n  onChange?: (e: FilterModel) => void;\n}\n\nfunction FilterWindow<FilterModel extends object>(\n  props: FilterWindowProps<FilterModel>\n): JSX.Element {\n  const [isOpened, setIsOpened] = useState<boolean>(false);\n  const [filter, setFilter] = useState<FilterModel>(props.filterModel);\n\n  function handleOnChange(e: FilterModel): void {\n    if (props.onChange != null) {\n      props.onChange(e);\n    }\n  }\n\n  const createSearchBar = (key: string): JSX.Element => {\n    {\n      const keyTyped = key as keyof typeof filter;\n\n      const handleOnFilterChange = (e: string | null): void => {\n        const nullableString: string | null = trimOrNullOnEmpty(e);\n\n        setFilter({ ...filter, [keyTyped]: nullableString });\n        handleOnChange({ ...filter, [keyTyped]: nullableString });\n      };\n\n      return (\n        <SearchBar\n          key={key}\n          placeholderText={props.fieldPlaceHolderMappings.get(\n            keyTyped as string\n          )}\n          filterText={filter[keyTyped] as string | null}\n          onFilter={(e: any): void => handleOnFilterChange(e.target.value)}\n          onClear={(): void => handleOnFilterChange(null)}\n        />\n      );\n    }\n  };\n\n  const fields: Array<JSX.Element> = Object.keys(props.filterModel).map((key) =>\n    createSearchBar(key)\n  );\n\n  const ToggleButton = (): JSX.Element => (\n    <input\n      type=\"button\"\n      value={isOpened === true ? props.closeSearchText : props.openSearchText}\n      onClick={(): void => setIsOpened(!isOpened)}\n    />\n  );\n\n  const toggleFloatingClass = (): string => {\n    if (isOpened) return `${style.floating} ${style.floatingShowing}`;\n    else return `${style.floating} ${style.floatingHidden}`;\n  };\n\n  return (\n    <div>\n      <ToggleButton />\n      {isOpened === true ? (\n        <div class={toggleFloatingClass()}>{fields}</div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default FilterWindow;\n","export function trimOrNullOnEmpty(\n  value: string | null | undefined\n): string | null {\n  if (value === null || value === undefined) return null;\n\n  const trimmed = value.trim();\n\n  if (trimmed === '') return null;\n\n  return trimmed;\n}\n","import { VTuberViewCountGrowthData } from '../../types/ApiData/VTuberViewCountChangeData';\nimport { VTuberViewCountGrowthDisplayData } from '../../types/TableDisplayData/VTuberViewCountGrowthDisplayData';\n\nexport const VTuberViewCountToDisplay = (\n  e: VTuberViewCountGrowthData,\n  ranking: number\n): VTuberViewCountGrowthDisplayData => ({\n  id: e.id,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  YouTubeId: e.YouTube.id,\n  TwitchId: e.Twitch?.id,\n  totalViewCount: e.YouTube.totalViewCount,\n  _7DaysGrowth: e.YouTube._7DaysGrowth,\n  _30DaysGrowth: e.YouTube._30DaysGrowth,\n  popularVideo: e.popularVideo,\n  group: e.group,\n  nationality: e.nationality,\n  activity: e.activity,\n  ranking: ranking,\n});\n","import { TableColumn } from 'react-data-table-component';\n\nexport interface RankingColumnRowData {\n  ranking: number;\n}\n\nexport const RankingColumn = <\n  RowData extends RankingColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: '#',\n    selector: (row: RowData): number => row.ranking,\n    wrap: false,\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ShowVideoButton from '../components/ShowVideoButton';\nimport { VideoInfo } from '../types/Common/VideoInfo';\n\nexport interface PopularVideoColumnRowData {\n  popularVideo?: VideoInfo;\n}\n\nexport const PopularVideoColumn = <\n  RowData extends PopularVideoColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularVideo\">Popular Video</Text>,\n    cell: (row: RowData): JSX.Element | null =>\n      row.popularVideo !== undefined ? (\n        <ShowVideoButton popularVideo={row.popularVideo} />\n      ) : null,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchBarGroup\":\"R1T8+hwxvBovrVdGHizUFw==\"};"],"sourceRoot":""}