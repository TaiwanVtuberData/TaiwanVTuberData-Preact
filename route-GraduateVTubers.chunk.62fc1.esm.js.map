{"version":3,"sources":["webpack:///./tableTypes/GraduateDateColumn.tsx","webpack:///./utils/transform/DebutStringToDebutInfo.ts","webpack:///./utils/sort/SubscriberCountSort.ts","webpack:///./global/TodayDate.ts","webpack:///./tableTypes/NameColumn.tsx","webpack:///./tableTypes/GroupColumn.tsx","webpack:///./components/YouTubeTwitchCount/style.module.css","webpack:///./components/YouTubeTwitchCount/index.tsx","webpack:///./utils/transform/GraduateTransform.ts","webpack:///./routes/GraduateVTubers/index.tsx","webpack:///./components/ProfileImagePopup/style.module.css","webpack:///./components/ProfileImagePopup/index.tsx","webpack:///./utils/NumberUtils.ts","webpack:///./tableTypes/YouTubeTwitchCountColumn.tsx","webpack:///./tableTypes/NationalityColumn.tsx","webpack:///./utils/FilterModelHelper.ts","webpack:///./components/SearchBar/style.module.css","webpack:///./components/SearchBar/index.tsx","webpack:///./style/ActivityRowStyles.ts","webpack:///./utils/DefaultDataTableProps.ts","webpack:///./utils/NationalityUtils.tsx","webpack:///./style/IsTodayRowStyles.ts","webpack:///./components/FilterWindow/style.module.css","webpack:///./components/FilterWindow/index.tsx","webpack:///./utils/StringUtils.ts","webpack:///./components/ToolTip/style.module.css","webpack:///./components/ToolTip/index.tsx","webpack:///./utils/CountTypeUtils.ts","webpack:///./tableTypes/PopularVideoColumn.tsx","webpack:///./utils/transform/BasicTransform.ts","webpack:///./style/DataTableStyle.module.css","webpack:///./components/QuestionMarkToolTip/style.module.css","webpack:///./components/QuestionMarkToolTip/index.tsx"],"names":["GraduateDateColumn","name","id","selector","row","graduateDate","maybeDebutStringToDebutInfo","debutString","hasDebutInfo","debutStringToDebutInfo","debutDate","isToday","TODAY_DATE_STRING","isRecentlyDebut","dateDiffInDays","dateStringToDate","TIMEZONE_DIFF_IN_HOUR","TODAY_DATE","YouTubeSubscriberCountDescendingSort","rowA","rowB","aExist","undefined","YouTubeSubscriber","bExist","CountTypeCompare","TwitchFollowerCountDescendingSort","TwitchFollower","YouTubeSubscriberCountPlusTwitchFollowerCountAscendingSort","aCount","GetCount","bCount","YouTubeSubscriberCountPlusTwitchFollowerCountDescendingSort","SubscriberCountDescendingSort","sortMethod","tryParseInteger","process","getDateAfterTimezoneAdjustment","Date","getISODateString","NameColumn","cell","VTuberId","imgUrl","GroupColumn","group","href","GetRoute","type","YouTubeTwitchCount","props","YouTubeSpan","YouTubeCount","class","style","CountFragment","countType","TwitchSpan","TwitchCount","VTuberGraduateToDisplay","e","VTuberBasicToDisplay","GraduateVTubersPage","document","title","dictionary","header","graduateVTubers","columns","sortable","YouTubeTwitchCountColumn","sortFunction","PopularVideoColumn","NationalityColumn","data","setData","useState","filterModel","setFilterModel","YouTubeId","TwitchId","nationality","filteredData","filter","filterFunction","searchBarComponent","useMemo","fieldPlaceHolderMappings","Map","table","searchByDisplayName","searchByYouTubeId","searchByTwitchId","searchByGroup","searchByNationality","searchByDate","tableStyle","searchBarGroup","openSearchText","text","openSearch","closeSearchText","closeSearch","onChange","pending","setPending","useEffect","async","Api","then","res","VTubers","map","sort","a","b","localeCompare","getVTubers","GetCurrentNationalitySpan","width","fontSize","DefaultDataTableProps","conditionalRowStyles","ActivityRowStyles","concat","IsTodayRowStyle","fixedHeader","pagination","paginationComponentOptions","paginationOptions","progressComponent","progressPending","subHeader","subHeaderComponent","ProfileImagePopup","ProfileImage","clickBehavior","PrependSign","value","valueToPercentString","toFixed","GrowthDisplayDataToString","tableTranslation","percentage","recordType","noRecord","atLeast","diff","str","defaultValue","parsedVal","parseInt","isNaN","targetModel","Object","entries","entry","target","toLowerCase","includes","some","SearchBar","placeholder","placeholderText","filterText","onFilter","onClick","onClear","when","activity","backgroundColor","cursor","debutInfo","color","nationalityModifier","getNationalityModifierState","FilterWindow","isOpened","setIsOpened","setFilter","createSearchBar","key","keyTyped","handleOnFilterChange","nullableString","trimmed","trim","trimOrNullOnEmpty","handleOnChange","get","fields","keys","ToolTip","children","tag","count","popularVideo","YouTube","subscriber","Twitch","follower","QuestionMarkToolTip"],"mappings":"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","file":"route-GraduateVTubers.chunk.62fc1.esm.js","sourcesContent":["import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\n\nexport interface GraduateDateColumnRowData {\n  graduateDate: string;\n}\n\nexport const GraduateDateColumn = <\n  RowData extends GraduateDateColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.graduateDate\">Graduation Date</Text>,\n    selector: (row: { graduateDate: string }): string => row.graduateDate,\n  };\n};\n","import {\n  TIMEZONE_DIFF_IN_HOUR,\n  TODAY_DATE,\n  TODAY_DATE_STRING,\n} from '../../global/TodayDate';\nimport { DebutInfo, HasDebutInfo } from '../../types/DebutInfo';\nimport { dateDiffInDays, dateStringToDate } from '../DateTimeUtils';\n\nexport const maybeDebutStringToDebutInfo = (\n  debutString?: string\n): DebutInfo => {\n  if (debutString === null || debutString === undefined)\n    return { hasDebutInfo: false };\n\n  return debutStringToDebutInfo(debutString);\n};\n\nexport const debutStringToDebutInfo = (debutString: string): HasDebutInfo => {\n  return {\n    hasDebutInfo: true,\n    debutDate: debutString,\n    isToday: debutString === TODAY_DATE_STRING,\n    isRecentlyDebut:\n      dateDiffInDays(\n        dateStringToDate(debutString, TIMEZONE_DIFF_IN_HOUR),\n        TODAY_DATE\n      ) < 30,\n  };\n};\n","import { CountType } from '../../types/Common/CountType';\nimport { CountTypeCompare, GetCount } from '../CountTypeUtils';\n\nexport type SortMethod = 'YouTube+Twitch' | 'YouTube' | 'Twitch';\n\nconst YouTubeSubscriberCountDescendingSort = <\n  T extends { YouTubeSubscriber?: CountType }\n>(\n  rowA: T,\n  rowB: T\n): number => {\n  const aExist: boolean = rowA.YouTubeSubscriber !== undefined;\n  const bExist: boolean = rowB.YouTubeSubscriber !== undefined;\n\n  if (!aExist && !bExist) return 0;\n\n  if (!bExist) return -1;\n\n  if (!aExist) return 1;\n\n  // This line does nothing but to stop TypeScript from\n  // whining about YouTubeSubscriber might be undefined\n  if (!(rowA.YouTubeSubscriber && rowB.YouTubeSubscriber)) return 0;\n\n  return CountTypeCompare(rowA.YouTubeSubscriber, rowB.YouTubeSubscriber) * -1;\n};\n\nconst TwitchFollowerCountDescendingSort = <\n  T extends { TwitchFollower?: CountType }\n>(\n  rowA: T,\n  rowB: T\n): number => {\n  const aExist: boolean = rowA.TwitchFollower !== undefined;\n  const bExist: boolean = rowB.TwitchFollower !== undefined;\n\n  if (!aExist && !bExist) return 0;\n\n  if (!bExist) return -1;\n\n  if (!aExist) return 1;\n\n  // This line does nothing but to stop TypeScript from\n  // whining about TwitchFollower might be undefined\n  if (!(rowA.TwitchFollower && rowB.TwitchFollower)) return 0;\n\n  return CountTypeCompare(rowA.TwitchFollower, rowB.TwitchFollower) * -1;\n};\n\nexport const YouTubeSubscriberCountPlusTwitchFollowerCountAscendingSort = <\n  T extends { YouTubeSubscriber?: CountType; TwitchFollower?: CountType }\n>(\n  rowA: T,\n  rowB: T\n): number => {\n  const aCount =\n    (GetCount(rowA.YouTubeSubscriber) ?? 0) +\n    (GetCount(rowA.TwitchFollower) ?? 0);\n  const bCount =\n    (GetCount(rowB.YouTubeSubscriber) ?? 0) +\n    (GetCount(rowB.TwitchFollower) ?? 0);\n\n  if (aCount > bCount) return 1;\n\n  if (bCount > aCount) return -1;\n\n  return 0;\n};\n\n// TODO: Merge the logic of descending and ascending functions\nexport const YouTubeSubscriberCountPlusTwitchFollowerCountDescendingSort = <\n  T extends { YouTubeSubscriber?: CountType; TwitchFollower?: CountType }\n>(\n  rowA: T,\n  rowB: T\n): number =>\n  YouTubeSubscriberCountPlusTwitchFollowerCountAscendingSort(rowA, rowB) * -1;\n\nexport const SubscriberCountDescendingSort = (sortMethod: SortMethod) => {\n  switch (sortMethod) {\n    case 'YouTube+Twitch':\n      return YouTubeSubscriberCountPlusTwitchFollowerCountDescendingSort;\n    case 'YouTube':\n      return YouTubeSubscriberCountDescendingSort;\n    case 'Twitch':\n      return TwitchFollowerCountDescendingSort;\n  }\n};\n","import {\n  getDateAfterTimezoneAdjustment,\n  getISODateString,\n} from '../utils/DateTimeUtils';\nimport { tryParseInteger } from '../utils/NumberUtils';\n\nconst DEFAULT_TIMEZONE_DIFF_IN_HOUR = 8;\n\nexport const TIMEZONE_DIFF_IN_HOUR: number = tryParseInteger(\n  process.env.TIMEZONE_DIFF_IN_HOUR,\n  DEFAULT_TIMEZONE_DIFF_IN_HOUR\n);\n\nexport const TODAY_DATE: Date = getDateAfterTimezoneAdjustment(\n  new Date(),\n  TIMEZONE_DIFF_IN_HOUR\n);\n\nexport const TODAY_DATE_STRING: string = getISODateString(\n  TODAY_DATE,\n  TIMEZONE_DIFF_IN_HOUR\n);\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ProfileImagePopup from '../components/ProfileImagePopup';\n\nexport interface NameColumnRowData {\n  id: string;\n  imgUrl?: string;\n  name: string;\n}\n\nexport const NameColumn = <\n  RowData extends NameColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.displayName\">Name</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <ProfileImagePopup\n        VTuberId={row.id}\n        imgUrl={row.imgUrl}\n        name={row.name}\n      />\n    ),\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GetRoute } from '../utils/TypeSafeRouting';\n\nexport interface GroupColumnRowData {\n  group?: string;\n}\n\nexport const GroupColumn = <\n  RowData extends GroupColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.group\">Group</Text>,\n    cell: (row: RowData): h.JSX.Element | null =>\n      row.group !== undefined ? (\n        <a href={GetRoute({ type: 'group', name: row.group })}>{row.group}</a>\n      ) : null,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"noWrap\":\"noWrap__BzT1O\",\"YouTubeRed\":\"YouTubeRed__1JOkf\",\"TwitchPurple\":\"TwitchPurple__qQQlw\"};","import { Fragment, FunctionalComponent, h } from 'preact';\nimport { CountType } from '../../types/Common/CountType';\nimport CountFragment from '../CountFragment';\nimport style from './style.module.css';\n\nexport interface YouTubeTwitchCountProps {\n  YouTubeCount?: CountType;\n  TwitchCount?: CountType;\n}\n\nconst YouTubeTwitchCount: FunctionalComponent<YouTubeTwitchCountProps> = (\n  props: YouTubeTwitchCountProps\n): h.JSX.Element => {\n  const YouTubeSpan = (YouTubeCount: CountType): h.JSX.Element => {\n    return (\n      <span class={`${style.noWrap} ${style.YouTubeRed}`}>\n        <CountFragment countType={YouTubeCount} />\n      </span>\n    );\n  };\n\n  const TwitchSpan = (TwitchCount: CountType): h.JSX.Element => {\n    return (\n      <span class={`${style.noWrap} ${style.TwitchPurple}`}>\n        <CountFragment countType={TwitchCount} />\n      </span>\n    );\n  };\n\n  const CountSpan = (props: YouTubeTwitchCountProps): h.JSX.Element | null => {\n    if (props.YouTubeCount && props.TwitchCount) {\n      return (\n        <>\n          {YouTubeSpan(props.YouTubeCount)}\n          {/* extra white space. will be rendered as \" + \" */}\n          <span class={style.noWrap}>&nbsp;+&nbsp;</span>\n          {TwitchSpan(props.TwitchCount)}\n        </>\n      );\n    }\n\n    if (props.YouTubeCount) {\n      return <>{YouTubeSpan(props.YouTubeCount)}</>;\n    }\n\n    if (props.TwitchCount) {\n      return <>{TwitchSpan(props.TwitchCount)}</>;\n    }\n\n    return null;\n  };\n\n  return (\n    <Fragment>\n      <CountSpan {...props} />\n    </Fragment>\n  );\n};\n\nexport default YouTubeTwitchCount;\n","import { TODAY_DATE_STRING } from '../../global/TodayDate';\nimport { VTuberGraduateData } from '../../types/ApiData/VTuberGraduateData';\nimport { VTuberGraduateDisplayData } from '../../types/TableDisplayData/VTuberGraduateDisplayData';\nimport { VTuberBasicToDisplay } from './BasicTransform';\n\nexport const VTuberGraduateToDisplay = (\n  e: VTuberGraduateData\n): VTuberGraduateDisplayData => ({\n  ...VTuberBasicToDisplay(e),\n  graduateDate: e.graduateDate,\n  isToday: e.graduateDate === TODAY_DATE_STRING,\n});\n","import * as Api from '../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useMemo, useEffect } from 'preact/hooks';\nimport DataTable, { TableColumn } from 'react-data-table-component';\nimport QuestionMarkToolTip from '../../components/QuestionMarkToolTip';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport ActivityRowStyles from '../../style/ActivityRowStyles';\nimport IsTodayRowStyle from '../../style/IsTodayRowStyles';\nimport { GraduateDateColumn } from '../../tableTypes/GraduateDateColumn';\nimport { GroupColumn } from '../../tableTypes/GroupColumn';\nimport { NameColumn } from '../../tableTypes/NameColumn';\nimport { NationalityColumn } from '../../tableTypes/NationalityColumn';\nimport { PopularVideoColumn } from '../../tableTypes/PopularVideoColumn';\nimport { YouTubeTwitchCountColumn } from '../../tableTypes/YouTubeTwitchCountColumn';\nimport { VTuberGraduateDisplayData } from '../../types/TableDisplayData/VTuberGraduateDisplayData';\nimport DefaultDataTableProps from '../../utils/DefaultDataTableProps';\nimport { GetCurrentNationalitySpan } from '../../utils/NationalityUtils';\nimport { YouTubeSubscriberCountPlusTwitchFollowerCountAscendingSort } from '../../utils/sort/SubscriberCountSort';\nimport { VTuberGraduateToDisplay } from '../../utils/transform/GraduateTransform';\nimport tableStyle from '../../style/DataTableStyle.module.css';\nimport { VTuberGraduateDisplayDataFilterModel } from '../../types/FilterType/VTuberGraduateDisplayDataFilterModel';\nimport { filterFunction } from '../../utils/FilterModelHelper';\nimport FilterWindow from '../../components/FilterWindow';\n\nexport interface GraduateVTubersPageProps {\n  dictionary: Dictionary;\n}\n\nconst GraduateVTubersPage: FunctionalComponent<GraduateVTubersPageProps> = (\n  props: GraduateVTubersPageProps\n) => {\n  document.title = `${props.dictionary.header.graduateVTubers} | ${props.dictionary.header.title}`;\n  const columns: Array<TableColumn<VTuberGraduateDisplayData>> = [\n    {\n      ...GraduateDateColumn(),\n      sortable: true,\n    },\n    NameColumn(),\n    {\n      ...YouTubeTwitchCountColumn(),\n      sortable: true,\n      sortFunction: YouTubeSubscriberCountPlusTwitchFollowerCountAscendingSort,\n    },\n    PopularVideoColumn(),\n    GroupColumn(),\n    NationalityColumn(),\n  ];\n\n  // search filter\n  const [data, setData] = useState<Array<VTuberGraduateDisplayData>>([]);\n  const [filterModel, setFilterModel] =\n    useState<VTuberGraduateDisplayDataFilterModel>({\n      name: null,\n      YouTubeId: null,\n      TwitchId: null,\n      group: null,\n      nationality: null,\n      graduateDate: null,\n    });\n  const filteredData = data.filter((e) => filterFunction(e, filterModel));\n\n  const searchBarComponent = useMemo(() => {\n    const handleFilterWindow = (\n      filterModel: VTuberGraduateDisplayDataFilterModel\n    ): void => {\n      setFilterModel(filterModel);\n    };\n\n    const fieldPlaceHolderMappings: Map<string, string> = new Map<\n      string,\n      string\n    >([\n      ['name', props.dictionary.table.searchByDisplayName],\n      ['YouTubeId', props.dictionary.table.searchByYouTubeId],\n      ['TwitchId', props.dictionary.table.searchByTwitchId],\n      ['group', props.dictionary.table.searchByGroup],\n      ['nationality', props.dictionary.table.searchByNationality],\n      ['graduateDate', props.dictionary.table.searchByDate],\n    ]);\n\n    return (\n      <div class={tableStyle.searchBarGroup}>\n        <FilterWindow\n          filterModel={filterModel}\n          fieldPlaceHolderMappings={fieldPlaceHolderMappings}\n          openSearchText={props.dictionary.text.openSearch}\n          closeSearchText={props.dictionary.text.closeSearch}\n          onChange={handleFilterWindow}\n        />\n      </div>\n    );\n  }, [filterModel, props.dictionary]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getGraduateVTubers('recent').then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .sort((a, b) => b.graduateDate.localeCompare(a.graduateDate))\n          .map((e) => VTuberGraduateToDisplay(e))\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h1>\n        <Text id=\"header.graduateVTubers\">Graduate VTubers</Text>\n        {GetCurrentNationalitySpan()}\n        <QuestionMarkToolTip\n          width=\"300px\"\n          fontSize=\"13px\"\n          text={<Text id=\"toolTip.graduateVTubers\">tooltip text</Text>}\n        />\n      </h1>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={filteredData}\n        // Typescript does not accept concat two array of different types\n        conditionalRowStyles={ActivityRowStyles.concat(\n          IsTodayRowStyle as Array<any>\n        )}\n        fixedHeader\n        pagination\n        paginationComponentOptions={props.dictionary.table.paginationOptions}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n        subHeader\n        subHeaderComponent={searchBarComponent}\n      />\n    </>\n  );\n};\n\nexport default GraduateVTubersPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__vr1DG\",\"profileImageFlex\":\"profileImageFlex__4VERG\",\"nameFlex\":\"nameFlex__WFOO9\"};","import { FunctionalComponent, h } from 'preact';\nimport ProfileImage from '../ProfileImage';\nimport style from './style.module.css';\n\nexport interface ProfileImagePopupProps {\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n}\n\nconst ProfileImagePopup: FunctionalComponent<ProfileImagePopupProps> = (\n  props: ProfileImagePopupProps\n): h.JSX.Element => {\n  return (\n    <div class={style.container}>\n      <div class={style.profileImageFlex}>\n        <ProfileImage\n          VTuberId={props.VTuberId}\n          imgUrl={props.imgUrl}\n          clickBehavior=\"popup\"\n        />\n      </div>\n      <span class={style.nameFlex}>{props.name}</span>\n    </div>\n  );\n};\n\nexport default ProfileImagePopup;\n","import { GrowthRecordType } from '../types/Common/GrowthData';\n\nexport const PrependSign = (value: number): string => {\n  if (value > 0) return `+${value}`;\n  if (value < 0) return `${value}`;\n\n  return '0';\n};\n\nconst valueToPercentString = (value: number): string =>\n  (value * 100).toFixed(2);\n\nexport const GrowthDisplayDataToString = (\n  e: { diff: number; recordType: GrowthRecordType; percentage?: number },\n  tableTranslation: { noRecord: string; atLeast: string }\n): string => {\n  if (e.percentage) {\n    switch (e.recordType) {\n      case 'none':\n        return tableTranslation.noRecord;\n      case 'partial':\n        return `${tableTranslation.atLeast} ${PrependSign(\n          e.diff\n        )} (${valueToPercentString(e.percentage as number)}%)`;\n      case 'full':\n        return `${PrependSign(e.diff)} (${valueToPercentString(\n          e.percentage\n        )}%)`;\n    }\n  }\n\n  switch (e.recordType) {\n    case 'none':\n      return tableTranslation.noRecord;\n    case 'partial':\n      return `${tableTranslation.atLeast} ${PrependSign(e.diff)}`;\n    case 'full':\n      return `${PrependSign(e.diff)}`;\n  }\n};\n\nexport const tryParseInteger = (\n  str: string | undefined,\n  defaultValue: number\n): number => {\n  if (str !== undefined) {\n    const parsedVal = parseInt(str, 10);\n    if (isNaN(parsedVal) === false) {\n      return parsedVal;\n    }\n  }\n\n  return defaultValue;\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport YouTubeTwitchCount from '../components/YouTubeTwitchCount';\nimport { CountType } from '../types/Common/CountType';\n\nexport interface YouTubeTwitchCountColumnRowData {\n  YouTubeSubscriber?: CountType;\n  TwitchFollower?: CountType;\n}\n\nexport const YouTubeTwitchCountColumn = <\n  RowData extends YouTubeTwitchCountColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: (\n      <Text id=\"table.YouTubeTwitchCount\">\n        YouTube Subscribers + Twitch Followers\n      </Text>\n    ),\n    cell: (row: RowData): JSX.Element => (\n      <YouTubeTwitchCount\n        YouTubeCount={row.YouTubeSubscriber}\n        TwitchCount={row.TwitchFollower}\n      />\n    ),\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\n\nexport interface NationalityColumnRowData {\n  nationality?: string;\n}\n\nexport const NationalityColumn = <\n  RowData extends NationalityColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.nationality\">Nationality</Text>,\n    selector: (row: RowData): string => row.nationality ?? '',\n  };\n};\n","export function filterFunction<\n  TargetType extends object,\n  FilterModel extends object\n>(targetModel: TargetType, filterModel: FilterModel): boolean {\n  const result = Object.entries(filterModel).map((entry) => {\n    const keyTyped = entry[0] as keyof typeof targetModel;\n    const target = targetModel[keyTyped] as string | undefined | null;\n\n    const filter = entry[1] as string | null;\n\n    // if there is no filter applied\n    if (filter === null) {\n      return true;\n    }\n\n    // if target doesn't exist\n    if (target === null || target === undefined || target === '') {\n      return false;\n    }\n\n    return target.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  const someFilterNotMatch = result.some((e) => e === false);\n\n  return !someFilterNotMatch;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__1lsi6\",\"textField\":\"textField__bDpXR\",\"button\":\"button__maFzS\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface SearchBarProps {\n  placeholderText?: string;\n  filterText: string | null;\n  onFilter: (e: unknown) => unknown;\n  onClear: () => unknown;\n}\n\nconst SearchBar: FunctionalComponent<SearchBarProps> = (\n  props: SearchBarProps\n): h.JSX.Element => (\n  <div class={style.container}>\n    <input\n      type=\"text\"\n      class={style.textField}\n      placeholder={props.placeholderText}\n      value={props.filterText ?? ''}\n      onChange={props.onFilter}\n    />\n\n    <button type=\"button\" class={style.button} onClick={props.onClear}>\n      X\n    </button>\n  </div>\n);\n\nexport default SearchBar;\n","import { Activity } from '../types/Common/Activity';\nimport { DebutInfo } from '../types/DebutInfo';\n\nconst ActivityRowStyles = [\n  {\n    when: (row: { activity: Activity }): boolean =>\n      row.activity === 'preparing',\n    style: {\n      backgroundColor: 'rgba(141, 209, 157, 0.9)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity; debutInfo?: DebutInfo }): boolean =>\n      row.activity === 'active' &&\n      row.debutInfo !== undefined &&\n      row.debutInfo.hasDebutInfo === true &&\n      row.debutInfo.isRecentlyDebut === true,\n    style: {\n      backgroundColor: 'rgba(156, 205, 196, 0.5)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity }): boolean => row.activity === 'graduate',\n    style: {\n      backgroundColor: 'rgba(123, 123, 123, 0.9)',\n      color: 'white',\n      '&:hover': {\n        cursor: 'not-allowed',\n      },\n    },\n  },\n];\n\nexport default ActivityRowStyles;\n","import { TableProps } from 'react-data-table-component';\nimport ActivityRowStyles from '../style/ActivityRowStyles';\nimport { Activity } from '../types/Common/Activity';\n\n// columns and data are empty, user should fill them when using DefaultDataTableProps\nconst DefaultDataTableProps = <\n  T extends { activity: Activity }\n>(): TableProps<T> => ({\n  columns: [],\n  data: [],\n  conditionalRowStyles: ActivityRowStyles,\n});\n\nexport default DefaultDataTableProps;\n","import { Fragment, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { getNationalityModifierState } from '../global/DisplayNationality';\nimport { NationalityModifier } from '../types/Common/NationalityModifier';\n\nexport const GetCurrentNationalitySpan = (): JSX.Element | null => {\n  const nationalityModifier: NationalityModifier =\n    getNationalityModifierState();\n\n  switch (nationalityModifier) {\n    case 'TW':\n    case 'HK':\n    case 'MY':\n      return (\n        <>\n          {' '}\n          (<Text id=\"text.onlyShowing\">only showing </Text>\n          <Text id={`nationalityTitle.${nationalityModifier}`}>\n            placeholder\n          </Text>{' '}\n          VTuber)\n        </>\n      );\n    case 'all':\n    default:\n      return null;\n  }\n};\n","import { DebutInfo } from '../types/DebutInfo';\n\nconst IsTodayRowStyle = [\n  {\n    when: (row: { debutInfo: DebutInfo }): boolean =>\n      row.debutInfo.hasDebutInfo === true && row.debutInfo.isToday,\n    style: {\n      color: 'mediumblue',\n    },\n  },\n];\n\nexport default IsTodayRowStyle;\n","// extracted by mini-css-extract-plugin\nexport default {\"floating\":\"floating__uhu4Y\",\"floatingHidden\":\"floatingHidden__mvSUQ\",\"floatingShowing\":\"floatingShowing__nwzm5\"};","import { h } from 'preact';\nimport { useState } from 'preact/hooks';\nimport { trimOrNullOnEmpty } from '../../utils/StringUtils';\nimport SearchBar from '../SearchBar';\nimport style from './style.module.css';\n\nexport interface FilterWindowProps<FilterModel extends object> {\n  filterModel: FilterModel;\n  fieldPlaceHolderMappings: Map<string, string>;\n  openSearchText: string;\n  closeSearchText: string;\n  onChange?: (e: FilterModel) => void;\n}\n\nfunction FilterWindow<FilterModel extends object>(\n  props: FilterWindowProps<FilterModel>\n): JSX.Element {\n  const [isOpened, setIsOpened] = useState<boolean>(false);\n  const [filter, setFilter] = useState<FilterModel>(props.filterModel);\n\n  function handleOnChange(e: FilterModel): void {\n    if (props.onChange != null) {\n      props.onChange(e);\n    }\n  }\n\n  const createSearchBar = (key: string): JSX.Element => {\n    {\n      const keyTyped = key as keyof typeof filter;\n\n      const handleOnFilterChange = (e: string | null): void => {\n        const nullableString: string | null = trimOrNullOnEmpty(e);\n\n        setFilter({ ...filter, [keyTyped]: nullableString });\n        handleOnChange({ ...filter, [keyTyped]: nullableString });\n      };\n\n      return (\n        <SearchBar\n          key={key}\n          placeholderText={props.fieldPlaceHolderMappings.get(\n            keyTyped as string\n          )}\n          filterText={filter[keyTyped] as string | null}\n          onFilter={(e: any): void => handleOnFilterChange(e.target.value)}\n          onClear={(): void => handleOnFilterChange(null)}\n        />\n      );\n    }\n  };\n\n  const fields: Array<JSX.Element> = Object.keys(props.filterModel).map((key) =>\n    createSearchBar(key)\n  );\n\n  const ToggleButton = (): JSX.Element => (\n    <input\n      type=\"button\"\n      value={isOpened === true ? props.closeSearchText : props.openSearchText}\n      onClick={(): void => setIsOpened(!isOpened)}\n    />\n  );\n\n  const toggleFloatingClass = (): string => {\n    if (isOpened) return `${style.floating} ${style.floatingShowing}`;\n    else return `${style.floating} ${style.floatingHidden}`;\n  };\n\n  return (\n    <div>\n      <ToggleButton />\n      {isOpened === true ? (\n        <div class={toggleFloatingClass()}>{fields}</div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default FilterWindow;\n","export function trimOrNullOnEmpty(\n  value: string | null | undefined\n): string | null {\n  if (value === null || value === undefined) return null;\n\n  const trimmed = value.trim();\n\n  if (trimmed === '') return null;\n\n  return trimmed;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"tooltip__vtGmz\",\"tooltipText\":\"tooltipText__pA-zc\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface ToolTipProps {\n  text: string | React.ReactNode;\n  children: React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst ToolTip: FunctionalComponent<ToolTipProps> = (\n  props: ToolTipProps\n): h.JSX.Element => {\n  return (\n    <div class={style.tooltip}>\n      {props.children}\n      <span\n        class={style.tooltipText}\n        style={{ width: props.width, fontSize: props.fontSize }}\n      >\n        {props.text}\n      </span>\n    </div>\n  );\n};\n\nexport default ToolTip;\n","/* eslint-disable no-fallthrough */\nimport { CountType } from '../types/Common/CountType';\n\nexport const GetCount = (countType?: CountType): number | null => {\n  if (countType === undefined) return null;\n\n  switch (countType.tag) {\n    case 'has':\n      return countType.count;\n    case 'hidden':\n    case 'no':\n      return null;\n  }\n};\n\n// Sort order: no < hidden < 100 < 300\nexport const CountTypeCompare = (a: CountType, b: CountType): number => {\n  switch (a.tag) {\n    case 'has': {\n      switch (b.tag) {\n        case 'has':\n          return a.count - b.count;\n        case 'hidden':\n          return 1;\n        case 'no':\n          return 1;\n      }\n    }\n\n    case 'hidden': {\n      switch (b.tag) {\n        case 'has':\n          return -1;\n        case 'hidden':\n          return 0;\n        case 'no':\n          return 1;\n      }\n    }\n\n    case 'no': {\n      switch (b.tag) {\n        case 'has':\n          return -1;\n        case 'hidden':\n          return -1;\n        case 'no':\n          return 0;\n      }\n    }\n  }\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ShowVideoButton from '../components/ShowVideoButton';\nimport { VideoInfo } from '../types/Common/VideoInfo';\n\nexport interface PopularVideoColumnRowData {\n  popularVideo?: VideoInfo;\n}\n\nexport const PopularVideoColumn = <\n  RowData extends PopularVideoColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularVideo\">Popular Video</Text>,\n    cell: (row: RowData): JSX.Element | null =>\n      row.popularVideo !== undefined ? (\n        <ShowVideoButton popularVideo={row.popularVideo} />\n      ) : null,\n  };\n};\n","import { VTuberData } from '../../types/ApiData/VTuberData';\nimport { VTuberDisplayData } from '../../types/TableDisplayData/VTuberDisplayData';\nimport { maybeDebutStringToDebutInfo } from './DebutStringToDebutInfo';\n\nexport const VTuberBasicToDisplay = (e: VTuberData): VTuberDisplayData => ({\n  id: e.id,\n  activity: e.activity,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  YouTubeId: e.YouTube?.id,\n  YouTubeSubscriber: e.YouTube?.subscriber,\n  TwitchId: e.Twitch?.id,\n  TwitchFollower: e.Twitch?.follower,\n  popularVideo: e.popularVideo,\n  group: e.group,\n  nationality: e.nationality,\n  debutInfo: maybeDebutStringToDebutInfo(e.debutDate),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"searchBarGroup\":\"R1T8+hwxvBovrVdGHizUFw==\"};","// extracted by mini-css-extract-plugin\nexport default {\"questionMark\":\"questionMark__RT3wD\"};","import { FunctionalComponent, h } from 'preact';\nimport ToolTip from '../ToolTip';\nimport style from './style.module.css';\n\nexport interface QuestionMarkToolTip {\n  text: string | React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst QuestionMarkToolTip: FunctionalComponent<QuestionMarkToolTip> = (\n  props: QuestionMarkToolTip\n): h.JSX.Element => {\n  return (\n    <ToolTip text={props.text} width={props.width} fontSize={props.fontSize}>\n      <img class={style.questionMark} />\n    </ToolTip>\n  );\n};\n\nexport default QuestionMarkToolTip;\n"],"sourceRoot":""}