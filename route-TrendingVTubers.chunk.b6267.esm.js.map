{"version":3,"sources":["webpack:///./utils/transform/DebutStringToDebutInfo.ts","webpack:///./style/CompactTableStyle.ts","webpack:///./utils/sort/SubscriberCountSort.ts","webpack:///./global/TodayDate.ts","webpack:///./tableTypes/NameColumn.tsx","webpack:///./tableTypes/GroupColumn.tsx","webpack:///./components/YouTubeTwitchCount/style.module.css","webpack:///./components/YouTubeTwitchCount/index.tsx","webpack:///./components/ProfileImagePopup/style.module.css","webpack:///./components/ProfileImagePopup/index.tsx","webpack:///./utils/NumberUtils.ts","webpack:///./tableTypes/PopularityColumn.tsx","webpack:///./components/DropDownList/style.module.css","webpack:///./components/DropDownList/index.tsx","webpack:///./tableTypes/YouTubeTwitchCountColumn.tsx","webpack:///./tableTypes/NationalityColumn.tsx","webpack:///./utils/FilterModelHelper.ts","webpack:///./components/SearchBar/style.module.css","webpack:///./components/SearchBar/index.tsx","webpack:///./style/ActivityRowStyles.ts","webpack:///./utils/DefaultDataTableProps.ts","webpack:///./utils/NationalityUtils.tsx","webpack:///./utils/sort/PopularityCountSort.ts","webpack:///./routes/TrendingVTubers/index.tsx","webpack:///./components/FilterWindow/style.module.css","webpack:///./components/FilterWindow/index.tsx","webpack:///./utils/StringUtils.ts","webpack:///./utils/transform/PopularityTransform.ts","webpack:///./tableTypes/RankingColumn.tsx","webpack:///./components/ToolTip/style.module.css","webpack:///./components/ToolTip/index.tsx","webpack:///./utils/CountTypeUtils.ts","webpack:///./tableTypes/PopularVideoColumn.tsx","webpack:///./utils/transform/BasicTransform.ts","webpack:///./style/DataTableStyle.module.css","webpack:///./components/QuestionMarkToolTip/style.module.css","webpack:///./components/QuestionMarkToolTip/index.tsx"],"names":["maybeDebutStringToDebutInfo","debutString","hasDebutInfo","debutStringToDebutInfo","debutDate","isToday","TODAY_DATE_STRING","isRecentlyDebut","dateDiffInDays","dateStringToDate","TIMEZONE_DIFF_IN_HOUR","TODAY_DATE","CompactTableStyle","headCells","style","paddingLeft","paddingRight","cells","YouTubeSubscriberCountDescendingSort","rowA","rowB","aExist","undefined","YouTubeSubscriber","bExist","CountTypeCompare","TwitchFollowerCountDescendingSort","TwitchFollower","YouTubeSubscriberCountPlusTwitchFollowerCountAscendingSort","_GetCount","_GetCount2","_GetCount3","_GetCount4","aCount","GetCount","bCount","YouTubeSubscriberCountPlusTwitchFollowerCountDescendingSort","SubscriberCountDescendingSort","sortMethod","tryParseInteger","process","getDateAfterTimezoneAdjustment","Date","getISODateString","NameColumn","name","h","Text","id","cell","row","ProfileImagePopup","VTuberId","imgUrl","GroupColumn","group","href","GetRoute","type","YouTubeTwitchCount","props","YouTubeSpan","YouTubeCount","class","CountFragment","countType","TwitchSpan","TwitchCount","Fragment","ProfileImage","clickBehavior","PrependSign","value","valueToPercentString","toFixed","GrowthDisplayDataToString","e","tableTranslation","percentage","recordType","noRecord","atLeast","diff","str","defaultValue","parsedVal","parseInt","isNaN","numberToCountType","popularity","tag","count","PopularityColumn","YouTubePopularity","TwitchPopularity","omit","ENFORCE_YOUTUBE_COMPLIANCE","DropDownList","tipText","dropDownStyle","dropDown","onChange","optionValue","map","key","option","YouTubeTwitchCountColumn","NationalityColumn","selector","_row$nationality","nationality","filterFunction","targetModel","filterModel","Object","entries","entry","target","filter","toLowerCase","includes","some","SearchBar","_props$filterText","placeholder","placeholderText","filterText","onFilter","onClick","onClear","ActivityRowStyles","when","activity","backgroundColor","cursor","debutInfo","color","DefaultDataTableProps","columns","data","conditionalRowStyles","GetCurrentNationalitySpan","nationalityModifier","getNationalityModifierState","PopularityCountAscendingSort","_rowA$YouTubePopulari","_rowA$TwitchPopularit","_rowB$YouTubePopulari","_rowB$TwitchPopularit","PopularityCountDescendingSort","TrendingVTubersPage","document","title","dictionary","header","trendingVTubers","_objectSpread","RankingColumn","sortable","width","sortFunction","PopularVideoColumn","setData","useState","setFilterModel","YouTubeId","TwitchId","filteredData","searchBarComponent","useMemo","fieldPlaceHolderMappings","Map","table","searchByDisplayName","searchByYouTubeId","searchByTwitchId","searchByGroup","searchByNationality","tableStyle","searchBarGroup","sortingMethod","modifier","GoToPage","sortOrder","FilterWindow","openSearchText","text","openSearch","closeSearchText","closeSearch","pending","setPending","useEffect","async","Api","sortBy","then","res","VTubers","index","VTuberPopularityToDisplay","sort","ranking","getVTubers","QuestionMarkToolTip","fontSize","DataTable","_extends","customStyles","fixedHeader","pagination","paginationComponentOptions","paginationOptions","progressComponent","progressPending","subHeader","subHeaderComponent","isOpened","setIsOpened","setFilter","createSearchBar","keyTyped","handleOnFilterChange","nullableString","trimmed","trim","trimOrNullOnEmpty","handleOnChange","get","fields","keys","ToggleButton","_e$YouTube","_e$Twitch","VTuberBasicToDisplay","YouTube","Twitch","wrap","ToolTip","children","a","b","popularVideo","ShowVideoButton","_e$YouTube2","_e$Twitch2","subscriber","follower"],"mappings":"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","file":"route-TrendingVTubers.chunk.b6267.esm.js","sourcesContent":["import {\n  TIMEZONE_DIFF_IN_HOUR,\n  TODAY_DATE,\n  TODAY_DATE_STRING,\n} from '../../global/TodayDate';\nimport { DebutInfo, HasDebutInfo } from '../../types/DebutInfo';\nimport { dateDiffInDays, dateStringToDate } from '../DateTimeUtils';\n\nexport const maybeDebutStringToDebutInfo = (\n  debutString?: string\n): DebutInfo => {\n  if (debutString === null || debutString === undefined)\n    return { hasDebutInfo: false };\n\n  return debutStringToDebutInfo(debutString);\n};\n\nexport const debutStringToDebutInfo = (debutString: string): HasDebutInfo => {\n  return {\n    hasDebutInfo: true,\n    debutDate: debutString,\n    isToday: debutString === TODAY_DATE_STRING,\n    isRecentlyDebut:\n      dateDiffInDays(\n        dateStringToDate(debutString, TIMEZONE_DIFF_IN_HOUR),\n        TODAY_DATE\n      ) < 30,\n  };\n};\n","import { TableStyles } from 'react-data-table-component';\n\nexport const CompactTableStyle: TableStyles = {\n  headCells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for head cells\n      paddingRight: '5px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for data cells\n      paddingRight: '5px',\n    },\n  },\n};\n","import { CountType } from '../../types/Common/CountType';\nimport { CountTypeCompare, GetCount } from '../CountTypeUtils';\n\nexport type SortMethod = 'YouTube+Twitch' | 'YouTube' | 'Twitch';\n\nconst YouTubeSubscriberCountDescendingSort = <\n  T extends { YouTubeSubscriber?: CountType },\n>(\n  rowA: T,\n  rowB: T\n): number => {\n  const aExist: boolean = rowA.YouTubeSubscriber !== undefined;\n  const bExist: boolean = rowB.YouTubeSubscriber !== undefined;\n\n  if (!aExist && !bExist) return 0;\n\n  if (!bExist) return -1;\n\n  if (!aExist) return 1;\n\n  // This line does nothing but to stop TypeScript from\n  // whining about YouTubeSubscriber might be undefined\n  if (!(rowA.YouTubeSubscriber && rowB.YouTubeSubscriber)) return 0;\n\n  return CountTypeCompare(rowA.YouTubeSubscriber, rowB.YouTubeSubscriber) * -1;\n};\n\nconst TwitchFollowerCountDescendingSort = <\n  T extends { TwitchFollower?: CountType },\n>(\n  rowA: T,\n  rowB: T\n): number => {\n  const aExist: boolean = rowA.TwitchFollower !== undefined;\n  const bExist: boolean = rowB.TwitchFollower !== undefined;\n\n  if (!aExist && !bExist) return 0;\n\n  if (!bExist) return -1;\n\n  if (!aExist) return 1;\n\n  // This line does nothing but to stop TypeScript from\n  // whining about TwitchFollower might be undefined\n  if (!(rowA.TwitchFollower && rowB.TwitchFollower)) return 0;\n\n  return CountTypeCompare(rowA.TwitchFollower, rowB.TwitchFollower) * -1;\n};\n\nexport const YouTubeSubscriberCountPlusTwitchFollowerCountAscendingSort = <\n  T extends { YouTubeSubscriber?: CountType; TwitchFollower?: CountType },\n>(\n  rowA: T,\n  rowB: T\n): number => {\n  const aCount =\n    (GetCount(rowA.YouTubeSubscriber) ?? 0) +\n    (GetCount(rowA.TwitchFollower) ?? 0);\n  const bCount =\n    (GetCount(rowB.YouTubeSubscriber) ?? 0) +\n    (GetCount(rowB.TwitchFollower) ?? 0);\n\n  if (aCount > bCount) return 1;\n\n  if (bCount > aCount) return -1;\n\n  return 0;\n};\n\n// TODO: Merge the logic of descending and ascending functions\nexport const YouTubeSubscriberCountPlusTwitchFollowerCountDescendingSort = <\n  T extends { YouTubeSubscriber?: CountType; TwitchFollower?: CountType },\n>(\n  rowA: T,\n  rowB: T\n): number =>\n  YouTubeSubscriberCountPlusTwitchFollowerCountAscendingSort(rowA, rowB) * -1;\n\nexport const SubscriberCountDescendingSort = (sortMethod: SortMethod) => {\n  switch (sortMethod) {\n    case 'YouTube+Twitch':\n      return YouTubeSubscriberCountPlusTwitchFollowerCountDescendingSort;\n    case 'YouTube':\n      return YouTubeSubscriberCountDescendingSort;\n    case 'Twitch':\n      return TwitchFollowerCountDescendingSort;\n  }\n};\n","import {\n  getDateAfterTimezoneAdjustment,\n  getISODateString,\n} from '../utils/DateTimeUtils';\nimport { tryParseInteger } from '../utils/NumberUtils';\n\nconst DEFAULT_TIMEZONE_DIFF_IN_HOUR = 8;\n\nexport const TIMEZONE_DIFF_IN_HOUR: number = tryParseInteger(\n  process.env.TIMEZONE_DIFF_IN_HOUR,\n  DEFAULT_TIMEZONE_DIFF_IN_HOUR\n);\n\nexport const TODAY_DATE: Date = getDateAfterTimezoneAdjustment(\n  new Date(),\n  TIMEZONE_DIFF_IN_HOUR\n);\n\nexport const TODAY_DATE_STRING: string = getISODateString(\n  TODAY_DATE,\n  TIMEZONE_DIFF_IN_HOUR\n);\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ProfileImagePopup from '../components/ProfileImagePopup';\n\nexport interface NameColumnRowData {\n  id: string;\n  imgUrl?: string;\n  name: string;\n}\n\nexport const NameColumn = <\n  RowData extends NameColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.displayName\">Name</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <ProfileImagePopup\n        VTuberId={row.id}\n        imgUrl={row.imgUrl}\n        name={row.name}\n      />\n    ),\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GetRoute } from '../utils/TypeSafeRouting';\n\nexport interface GroupColumnRowData {\n  group?: string;\n}\n\nexport const GroupColumn = <\n  RowData extends GroupColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.group\">Group</Text>,\n    cell: (row: RowData): h.JSX.Element | null =>\n      row.group !== undefined ? (\n        <a href={GetRoute({ type: 'group', name: row.group })}>{row.group}</a>\n      ) : null,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"noWrap\":\"noWrap__BzT1O\",\"YouTubeRed\":\"YouTubeRed__1JOkf\",\"TwitchPurple\":\"TwitchPurple__qQQlw\"};","import { Fragment, FunctionalComponent, h } from 'preact';\nimport { CountType } from '../../types/Common/CountType';\nimport CountFragment from '../CountFragment';\nimport style from './style.module.css';\n\nexport interface YouTubeTwitchCountProps {\n  YouTubeCount?: CountType;\n  TwitchCount?: CountType;\n}\n\nconst YouTubeTwitchCount: FunctionalComponent<YouTubeTwitchCountProps> = (\n  props: YouTubeTwitchCountProps\n): h.JSX.Element => {\n  const YouTubeSpan = (YouTubeCount: CountType): h.JSX.Element => {\n    return (\n      <span class={`${style.noWrap} ${style.YouTubeRed}`}>\n        <CountFragment countType={YouTubeCount} />\n      </span>\n    );\n  };\n\n  const TwitchSpan = (TwitchCount: CountType): h.JSX.Element => {\n    return (\n      <span class={`${style.noWrap} ${style.TwitchPurple}`}>\n        <CountFragment countType={TwitchCount} />\n      </span>\n    );\n  };\n\n  const CountSpan = (props: YouTubeTwitchCountProps): h.JSX.Element | null => {\n    if (props.YouTubeCount && props.TwitchCount) {\n      return (\n        <>\n          {YouTubeSpan(props.YouTubeCount)}\n          {/* extra white space. will be rendered as \" + \" */}\n          <span class={style.noWrap}>&nbsp;+&nbsp;</span>\n          {TwitchSpan(props.TwitchCount)}\n        </>\n      );\n    }\n\n    if (props.YouTubeCount) {\n      return <>{YouTubeSpan(props.YouTubeCount)}</>;\n    }\n\n    if (props.TwitchCount) {\n      return <>{TwitchSpan(props.TwitchCount)}</>;\n    }\n\n    return null;\n  };\n\n  return (\n    <Fragment>\n      <CountSpan {...props} />\n    </Fragment>\n  );\n};\n\nexport default YouTubeTwitchCount;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__vr1DG\",\"profileImageFlex\":\"profileImageFlex__4VERG\",\"nameFlex\":\"nameFlex__WFOO9\"};","import { FunctionalComponent, h } from 'preact';\nimport ProfileImage from '../ProfileImage';\nimport style from './style.module.css';\n\nexport interface ProfileImagePopupProps {\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n}\n\nconst ProfileImagePopup: FunctionalComponent<ProfileImagePopupProps> = (\n  props: ProfileImagePopupProps\n): h.JSX.Element => {\n  return (\n    <div class={style.container}>\n      <div class={style.profileImageFlex}>\n        <ProfileImage\n          VTuberId={props.VTuberId}\n          imgUrl={props.imgUrl}\n          clickBehavior=\"popup\"\n        />\n      </div>\n      <span class={style.nameFlex}>{props.name}</span>\n    </div>\n  );\n};\n\nexport default ProfileImagePopup;\n","import { GrowthRecordType } from '../types/Common/GrowthData';\n\nexport const PrependSign = (value: number): string => {\n  if (value > 0) return `+${value}`;\n  if (value < 0) return `${value}`;\n\n  return '0';\n};\n\nconst valueToPercentString = (value: number): string =>\n  (value * 100).toFixed(2);\n\nexport const GrowthDisplayDataToString = (\n  e: { diff: number; recordType: GrowthRecordType; percentage?: number },\n  tableTranslation: { noRecord: string; atLeast: string }\n): string => {\n  if (e.percentage) {\n    switch (e.recordType) {\n      case 'none':\n        return tableTranslation.noRecord;\n      case 'partial':\n        return `${tableTranslation.atLeast} ${PrependSign(\n          e.diff\n        )} (${valueToPercentString(e.percentage as number)}%)`;\n      case 'full':\n        return `${PrependSign(e.diff)} (${valueToPercentString(\n          e.percentage\n        )}%)`;\n    }\n  }\n\n  switch (e.recordType) {\n    case 'none':\n      return tableTranslation.noRecord;\n    case 'partial':\n      return `${tableTranslation.atLeast} ${PrependSign(e.diff)}`;\n    case 'full':\n      return `${PrependSign(e.diff)}`;\n  }\n};\n\nexport const tryParseInteger = (\n  str: string | undefined,\n  defaultValue: number\n): number => {\n  if (str !== undefined) {\n    const parsedVal = parseInt(str, 10);\n    if (isNaN(parsedVal) === false) {\n      return parsedVal;\n    }\n  }\n\n  return defaultValue;\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport YouTubeTwitchCount from '../components/YouTubeTwitchCount';\nimport { CountType } from '../types/Common/CountType';\nimport { ENFORCE_YOUTUBE_COMPLIANCE } from '../Config';\n\nconst numberToCountType = (popularity?: number): CountType | undefined => {\n  if (popularity) return { tag: 'has', count: popularity };\n  return undefined;\n};\n\nexport interface PopularityColumnRowData {\n  YouTubePopularity?: number;\n  TwitchPopularity?: number;\n}\n\nexport const PopularityColumn = <\n  RowData extends PopularityColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularity\">Popularity</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <YouTubeTwitchCount\n        YouTubeCount={numberToCountType(row.YouTubePopularity)}\n        TwitchCount={numberToCountType(row.TwitchPopularity)}\n      />\n    ),\n    omit: ENFORCE_YOUTUBE_COMPLIANCE\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tipText\":\"tipText__4DHD3\"};","import { h } from 'preact';\nimport style from './style.module.css';\nimport dropDownStyle from '../../style/DropDownStyle.module.css';\n\nexport interface DropDownListProps<ValueType> {\n  tipText?: string;\n  optionValue?: Array<{ option: any; value: ValueType }>;\n  value?: ValueType;\n  onChange?: (e: unknown) => unknown;\n}\n\nfunction DropDownList<ValueType extends string | number>(\n  props: DropDownListProps<ValueType>\n): h.JSX.Element {\n  return (\n    <div>\n      <span class={style.tipText}>{props.tipText}</span>\n      <select\n        class={dropDownStyle.dropDown}\n        value={props.value}\n        onChange={props.onChange}\n      >\n        {props.optionValue !== undefined\n          ? props.optionValue.map((e) => (\n              <option key={e.value} value={e.value}>\n                {e.option}\n              </option>\n            ))\n          : null}\n      </select>\n    </div>\n  );\n}\n\nexport default DropDownList;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport YouTubeTwitchCount from '../components/YouTubeTwitchCount';\nimport { CountType } from '../types/Common/CountType';\n\nexport interface YouTubeTwitchCountColumnRowData {\n  YouTubeSubscriber?: CountType;\n  TwitchFollower?: CountType;\n}\n\nexport const YouTubeTwitchCountColumn = <\n  RowData extends YouTubeTwitchCountColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: (\n      <Text id=\"table.YouTubeTwitchCount\">\n        YouTube Subscribers + Twitch Followers\n      </Text>\n    ),\n    cell: (row: RowData): JSX.Element => (\n      <YouTubeTwitchCount\n        YouTubeCount={row.YouTubeSubscriber}\n        TwitchCount={row.TwitchFollower}\n      />\n    ),\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\n\nexport interface NationalityColumnRowData {\n  nationality?: string;\n}\n\nexport const NationalityColumn = <\n  RowData extends NationalityColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.nationality\">Nationality</Text>,\n    selector: (row: RowData): string => row.nationality ?? '',\n  };\n};\n","export function filterFunction<\n  TargetType extends object,\n  FilterModel extends object,\n>(targetModel: TargetType, filterModel: FilterModel): boolean {\n  const result = Object.entries(filterModel).map((entry) => {\n    const keyTyped = entry[0] as keyof typeof targetModel;\n    const target = targetModel[keyTyped] as string | undefined | null;\n\n    const filter = entry[1] as string | null;\n\n    // if there is no filter applied\n    if (filter === null) {\n      return true;\n    }\n\n    // if target doesn't exist\n    if (target === null || target === undefined || target === '') {\n      return false;\n    }\n\n    return target.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  const someFilterNotMatch = result.some((e) => e === false);\n\n  return !someFilterNotMatch;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__1lsi6\",\"textField\":\"textField__bDpXR\",\"button\":\"button__maFzS\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface SearchBarProps {\n  placeholderText?: string;\n  filterText: string | null;\n  onFilter: (e: unknown) => unknown;\n  onClear: () => unknown;\n}\n\nconst SearchBar: FunctionalComponent<SearchBarProps> = (\n  props: SearchBarProps\n): h.JSX.Element => (\n  <div class={style.container}>\n    <input\n      type=\"text\"\n      class={style.textField}\n      placeholder={props.placeholderText}\n      value={props.filterText ?? ''}\n      onChange={props.onFilter}\n    />\n\n    <button type=\"button\" class={style.button} onClick={props.onClear}>\n      X\n    </button>\n  </div>\n);\n\nexport default SearchBar;\n","import { Activity } from '../types/Common/Activity';\nimport { DebutInfo } from '../types/DebutInfo';\n\nconst ActivityRowStyles = [\n  {\n    when: (row: { activity: Activity }): boolean =>\n      row.activity === 'preparing',\n    style: {\n      backgroundColor: 'rgba(141, 209, 157, 0.9)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity; debutInfo?: DebutInfo }): boolean =>\n      row.activity === 'active' &&\n      row.debutInfo !== undefined &&\n      row.debutInfo.hasDebutInfo === true &&\n      row.debutInfo.isRecentlyDebut === true,\n    style: {\n      backgroundColor: 'rgba(156, 205, 196, 0.5)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity }): boolean => row.activity === 'graduate',\n    style: {\n      backgroundColor: 'rgba(123, 123, 123, 0.9)',\n      color: 'white',\n      '&:hover': {\n        cursor: 'not-allowed',\n      },\n    },\n  },\n];\n\nexport default ActivityRowStyles;\n","import { TableProps } from 'react-data-table-component';\nimport ActivityRowStyles from '../style/ActivityRowStyles';\nimport { Activity } from '../types/Common/Activity';\n\n// columns and data are empty, user should fill them when using DefaultDataTableProps\nconst DefaultDataTableProps = <\n  T extends { activity: Activity },\n>(): TableProps<T> => ({\n  columns: [],\n  data: [],\n  conditionalRowStyles: ActivityRowStyles,\n});\n\nexport default DefaultDataTableProps;\n","import { Fragment, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { getNationalityModifierState } from '../global/DisplayNationality';\nimport { NationalityModifier } from '../types/Common/NationalityModifier';\n\nexport const GetCurrentNationalitySpan = (): JSX.Element | null => {\n  const nationalityModifier: NationalityModifier =\n    getNationalityModifierState();\n\n  switch (nationalityModifier) {\n    case 'TW':\n    case 'HK':\n    case 'MY':\n      return (\n        <>\n          {' '}\n          (<Text id=\"text.onlyShowing\">only showing </Text>\n          <Text id={`nationalityTitle.${nationalityModifier}`}>\n            placeholder\n          </Text>{' '}\n          VTuber)\n        </>\n      );\n    case 'all':\n    default:\n      return null;\n  }\n};\n","export const PopularityCountAscendingSort = <\n  T extends { YouTubePopularity?: number; TwitchPopularity?: number },\n>(\n  rowA: T,\n  rowB: T\n): number => {\n  const aCount = (rowA.YouTubePopularity ?? 0) + (rowA.TwitchPopularity ?? 0);\n  const bCount = (rowB.YouTubePopularity ?? 0) + (rowB.TwitchPopularity ?? 0);\n\n  if (aCount > bCount) return 1;\n\n  if (bCount > aCount) return -1;\n\n  return 0;\n};\n\nexport const PopularityCountDescendingSort = <\n  T extends { YouTubePopularity?: number; TwitchPopularity?: number },\n>(\n  rowA: T,\n  rowB: T\n): number => PopularityCountAscendingSort(rowA, rowB) * -1;\n","import * as Api from '../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useMemo, useEffect } from 'preact/hooks';\nimport DataTable, { TableColumn } from 'react-data-table-component';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport { CompactTableStyle } from '../../style/CompactTableStyle';\nimport { GroupColumn } from '../../tableTypes/GroupColumn';\nimport { NameColumn } from '../../tableTypes/NameColumn';\nimport { NationalityColumn } from '../../tableTypes/NationalityColumn';\nimport { PopularityColumn } from '../../tableTypes/PopularityColumn';\nimport { PopularVideoColumn } from '../../tableTypes/PopularVideoColumn';\nimport { YouTubeTwitchCountColumn } from '../../tableTypes/YouTubeTwitchCountColumn';\nimport { VTuberPopularityDisplayData } from '../../types/TableDisplayData/VTuberPopularityDisplayData';\nimport DefaultDataTableProps from '../../utils/DefaultDataTableProps';\nimport { GetCurrentNationalitySpan } from '../../utils/NationalityUtils';\nimport {\n  PopularityCountAscendingSort,\n  PopularityCountDescendingSort,\n} from '../../utils/sort/PopularityCountSort';\nimport { YouTubeSubscriberCountPlusTwitchFollowerCountAscendingSort } from '../../utils/sort/SubscriberCountSort';\nimport { VTuberPopularityToDisplay } from '../../utils/transform/PopularityTransform';\nimport QuestionMarkToolTip from '../../components/QuestionMarkToolTip';\nimport tableStyle from '../../style/DataTableStyle.module.css';\nimport { RankingColumn } from '../../tableTypes/RankingColumn';\nimport ActivityRowStyles from '../../style/ActivityRowStyles';\nimport FilterWindow from '../../components/FilterWindow';\nimport { filterFunction } from '../../utils/FilterModelHelper';\nimport { VTuberPopularityDisplayDataFilterModel } from '../../types/FilterType/VTuberPopularityDisplayDataFilterModel';\nimport DropDownList from '../../components/DropDownList';\nimport { TrendingVTuberSortOrder } from '../../types/ApiTypes';\nimport { GoToPage } from '../../utils/TypeSafeRouting';\nimport { ENFORCE_YOUTUBE_COMPLIANCE } from '../../Config';\n\nexport interface TrendingVTubersPageProps {\n  dictionary: Dictionary;\n  modifier: TrendingVTuberSortOrder;\n}\n\nconst TrendingVTubersPage: FunctionalComponent<TrendingVTubersPageProps> = (\n  props: TrendingVTubersPageProps\n) => {\n  document.title = `${props.dictionary.header.trendingVTubers} | ${props.dictionary.header.title}`;\n\n  const columns: Array<TableColumn<VTuberPopularityDisplayData>> = [\n    {\n      ...RankingColumn(),\n      sortable: true,\n      width: '40px',\n    },\n    NameColumn(),\n    {\n      ...PopularityColumn(),\n      sortFunction: PopularityCountAscendingSort,\n      sortable: true,\n      omit: ENFORCE_YOUTUBE_COMPLIANCE,\n    },\n    {\n      ...YouTubeTwitchCountColumn(),\n      sortFunction: YouTubeSubscriberCountPlusTwitchFollowerCountAscendingSort,\n      sortable: true,\n    },\n    PopularVideoColumn(),\n    GroupColumn(),\n    NationalityColumn(),\n  ];\n\n  // search filter\n  const [data, setData] = useState<Array<VTuberPopularityDisplayData>>([]);\n  const [filterModel, setFilterModel] =\n    useState<VTuberPopularityDisplayDataFilterModel>({\n      name: null,\n      YouTubeId: null,\n      TwitchId: null,\n      group: null,\n      nationality: null,\n    });\n  const filteredData = data.filter((e) => filterFunction(e, filterModel));\n\n  const searchBarComponent = useMemo(() => {\n    const optionValue: Array<{\n      option: h.JSX.Element;\n      value: TrendingVTuberSortOrder;\n    }> = [\n      {\n        option: <Text id=\"table.livestream\">Livestream</Text>,\n        value: 'livestream',\n      },\n      {\n        option: <Text id=\"table.video\">Video</Text>,\n        value: 'video',\n      },\n      {\n        option: <Text id=\"table.combined\">Combined</Text>,\n        value: 'combined',\n      },\n    ];\n\n    const handleFilterWindow = (\n      filterModel: VTuberPopularityDisplayDataFilterModel\n    ): void => {\n      setFilterModel(filterModel);\n    };\n\n    const fieldPlaceHolderMappings: Map<string, string> = new Map<\n      string,\n      string\n    >([\n      ['name', props.dictionary.table.searchByDisplayName],\n      ['YouTubeId', props.dictionary.table.searchByYouTubeId],\n      ['TwitchId', props.dictionary.table.searchByTwitchId],\n      ['group', props.dictionary.table.searchByGroup],\n      ['nationality', props.dictionary.table.searchByNationality],\n    ]);\n\n    return (\n      <div class={tableStyle.searchBarGroup}>\n        <DropDownList\n          tipText={props.dictionary.table.sortingMethod}\n          value={props.modifier}\n          optionValue={optionValue}\n          onChange={(e: any) =>\n            GoToPage({\n              type: 'trending-vtubers',\n              sortOrder: e.target.value,\n            })\n          }\n        />\n        <FilterWindow\n          filterModel={filterModel}\n          fieldPlaceHolderMappings={fieldPlaceHolderMappings}\n          openSearchText={props.dictionary.text.openSearch}\n          closeSearchText={props.dictionary.text.closeSearch}\n          onChange={handleFilterWindow}\n        />\n      </div>\n    );\n  }, [filterModel, props.modifier, props.dictionary]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getTrendingVTubers({\n      sortBy: props.modifier,\n      count: '100',\n    }).then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .map((e, index) => VTuberPopularityToDisplay(e, index + 1))\n          .sort(PopularityCountDescendingSort)\n          .map((e, index) => ({ ...e, ranking: index + 1 }))\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h1>\n        <Text id=\"header.trendingVTubers\">Trending VTubers</Text>\n        {GetCurrentNationalitySpan()}\n        <QuestionMarkToolTip\n          width=\"300px\"\n          fontSize=\"13px\"\n          text={<Text id=\"toolTip.trendingVTubers\">tooltip text</Text>}\n        />\n      </h1>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={filteredData}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        fixedHeader\n        pagination\n        paginationComponentOptions={props.dictionary.table.paginationOptions}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n        subHeader\n        subHeaderComponent={searchBarComponent}\n      />\n    </>\n  );\n};\n\nexport default TrendingVTubersPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"floating\":\"floating__uhu4Y\",\"floatingHidden\":\"floatingHidden__mvSUQ\",\"floatingShowing\":\"floatingShowing__nwzm5\"};","import { h } from 'preact';\nimport { useState } from 'preact/hooks';\nimport { trimOrNullOnEmpty } from '../../utils/StringUtils';\nimport SearchBar from '../SearchBar';\nimport style from './style.module.css';\n\nexport interface FilterWindowProps<FilterModel extends object> {\n  filterModel: FilterModel;\n  fieldPlaceHolderMappings: Map<string, string>;\n  openSearchText: string;\n  closeSearchText: string;\n  onChange?: (e: FilterModel) => void;\n}\n\nfunction FilterWindow<FilterModel extends object>(\n  props: FilterWindowProps<FilterModel>\n): JSX.Element {\n  const [isOpened, setIsOpened] = useState<boolean>(false);\n  const [filter, setFilter] = useState<FilterModel>(props.filterModel);\n\n  function handleOnChange(e: FilterModel): void {\n    if (props.onChange != null) {\n      props.onChange(e);\n    }\n  }\n\n  const createSearchBar = (key: string): JSX.Element => {\n    {\n      const keyTyped = key as keyof typeof filter;\n\n      const handleOnFilterChange = (e: string | null): void => {\n        const nullableString: string | null = trimOrNullOnEmpty(e);\n\n        setFilter({ ...filter, [keyTyped]: nullableString });\n        handleOnChange({ ...filter, [keyTyped]: nullableString });\n      };\n\n      return (\n        <SearchBar\n          key={key}\n          placeholderText={props.fieldPlaceHolderMappings.get(\n            keyTyped as string\n          )}\n          filterText={filter[keyTyped] as string | null}\n          onFilter={(e: any): void => handleOnFilterChange(e.target.value)}\n          onClear={(): void => handleOnFilterChange(null)}\n        />\n      );\n    }\n  };\n\n  const fields: Array<JSX.Element> = Object.keys(props.filterModel).map((key) =>\n    createSearchBar(key)\n  );\n\n  const ToggleButton = (): JSX.Element => (\n    <input\n      type=\"button\"\n      value={isOpened === true ? props.closeSearchText : props.openSearchText}\n      onClick={(): void => setIsOpened(!isOpened)}\n    />\n  );\n\n  const toggleFloatingClass = (): string => {\n    if (isOpened) return `${style.floating} ${style.floatingShowing}`;\n    else return `${style.floating} ${style.floatingHidden}`;\n  };\n\n  return (\n    <div>\n      <ToggleButton />\n      {isOpened === true ? (\n        <div class={toggleFloatingClass()}>{fields}</div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default FilterWindow;\n","export function trimOrNullOnEmpty(\n  value: string | null | undefined\n): string | null {\n  if (value === null || value === undefined) return null;\n\n  const trimmed = value.trim();\n\n  if (trimmed === '') return null;\n\n  return trimmed;\n}\n","import { VTuberPopularityData } from '../../types/ApiData/VTuberPopularityData';\nimport { VTuberPopularityDisplayData } from '../../types/TableDisplayData/VTuberPopularityDisplayData';\nimport { VTuberBasicToDisplay } from './BasicTransform';\n\nexport const VTuberPopularityToDisplay = (\n  e: VTuberPopularityData,\n  ranking: number\n): VTuberPopularityDisplayData => ({\n  ...VTuberBasicToDisplay(e),\n  YouTubePopularity: e.YouTube?.popularity,\n  TwitchPopularity: e.Twitch?.popularity,\n  ranking: ranking,\n});\n","import { TableColumn } from 'react-data-table-component';\n\nexport interface RankingColumnRowData {\n  ranking: number;\n}\n\nexport const RankingColumn = <\n  RowData extends RankingColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: '#',\n    selector: (row: RowData): number => row.ranking,\n    wrap: false,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"tooltip__vtGmz\",\"tooltipText\":\"tooltipText__pA-zc\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface ToolTipProps {\n  text: string | React.ReactNode;\n  children: React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst ToolTip: FunctionalComponent<ToolTipProps> = (\n  props: ToolTipProps\n): h.JSX.Element => {\n  return (\n    <div class={style.tooltip}>\n      {props.children}\n      <span\n        class={style.tooltipText}\n        style={{ width: props.width, fontSize: props.fontSize }}\n      >\n        {props.text}\n      </span>\n    </div>\n  );\n};\n\nexport default ToolTip;\n","/* eslint-disable no-fallthrough */\nimport { CountType } from '../types/Common/CountType';\n\nexport const GetCount = (countType?: CountType): number | null => {\n  if (countType === undefined) return null;\n\n  switch (countType.tag) {\n    case 'has':\n      return countType.count;\n    case 'hidden':\n    case 'no':\n      return null;\n  }\n};\n\n// Sort order: no < hidden < 100 < 300\nexport const CountTypeCompare = (a: CountType, b: CountType): number => {\n  switch (a.tag) {\n    case 'has': {\n      switch (b.tag) {\n        case 'has':\n          return a.count - b.count;\n        case 'hidden':\n          return 1;\n        case 'no':\n          return 1;\n      }\n    }\n\n    case 'hidden': {\n      switch (b.tag) {\n        case 'has':\n          return -1;\n        case 'hidden':\n          return 0;\n        case 'no':\n          return 1;\n      }\n    }\n\n    case 'no': {\n      switch (b.tag) {\n        case 'has':\n          return -1;\n        case 'hidden':\n          return -1;\n        case 'no':\n          return 0;\n      }\n    }\n  }\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ShowVideoButton from '../components/ShowVideoButton';\nimport { VideoInfo } from '../types/Common/VideoInfo';\nimport { ENFORCE_YOUTUBE_COMPLIANCE } from '../Config';\n\nexport interface PopularVideoColumnRowData {\n  popularVideo?: VideoInfo;\n}\n\nexport const PopularVideoColumn = <\n  RowData extends PopularVideoColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularVideo\">Popular Video</Text>,\n    cell: (row: RowData): JSX.Element | null =>\n      row.popularVideo !== undefined ? (\n        <ShowVideoButton popularVideo={row.popularVideo} />\n      ) : null,\n    omit: ENFORCE_YOUTUBE_COMPLIANCE,\n  };\n};\n","import { VTuberData } from '../../types/ApiData/VTuberData';\nimport { VTuberDisplayData } from '../../types/TableDisplayData/VTuberDisplayData';\nimport { maybeDebutStringToDebutInfo } from './DebutStringToDebutInfo';\n\nexport const VTuberBasicToDisplay = (e: VTuberData): VTuberDisplayData => ({\n  id: e.id,\n  activity: e.activity,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  YouTubeId: e.YouTube?.id,\n  YouTubeSubscriber: e.YouTube?.subscriber,\n  TwitchId: e.Twitch?.id,\n  TwitchFollower: e.Twitch?.follower,\n  popularVideo: e.popularVideo,\n  group: e.group,\n  nationality: e.nationality,\n  debutInfo: maybeDebutStringToDebutInfo(e.debutDate),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"searchBarGroup\":\"R1T8+hwxvBovrVdGHizUFw==\"};","// extracted by mini-css-extract-plugin\nexport default {\"questionMark\":\"questionMark__RT3wD\"};","import { FunctionalComponent, h } from 'preact';\nimport ToolTip from '../ToolTip';\nimport style from './style.module.css';\n\nexport interface QuestionMarkToolTip {\n  text: string | React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst QuestionMarkToolTip: FunctionalComponent<QuestionMarkToolTip> = (\n  props: QuestionMarkToolTip\n): h.JSX.Element => {\n  return (\n    <ToolTip text={props.text} width={props.width} fontSize={props.fontSize}>\n      <img class={style.questionMark} />\n    </ToolTip>\n  );\n};\n\nexport default QuestionMarkToolTip;\n"],"sourceRoot":""}