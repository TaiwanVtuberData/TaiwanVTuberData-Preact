{"version":3,"sources":["webpack:///./tableTypes/VideoColumn.tsx","webpack:///./routes/TrendingVideos/index.tsx","webpack:///./tableTypes/NameColumn.tsx","webpack:///./components/ProfileImagePopup/style.module.css","webpack:///./components/ProfileImagePopup/index.tsx","webpack:///./components/DropDownList/style.module.css","webpack:///./components/DropDownList/index.tsx","webpack:///./utils/transform/PopularVideoTransform.ts","webpack:///./utils/FilterModelHelper.ts","webpack:///./components/SearchBar/style.module.css","webpack:///./components/SearchBar/index.tsx","webpack:///./style/ActivityRowStyles.ts","webpack:///./utils/DefaultDataTableProps.ts","webpack:///./utils/NationalityUtils.tsx","webpack:///./components/FilterWindow/style.module.css","webpack:///./components/FilterWindow/index.tsx","webpack:///./utils/StringUtils.ts","webpack:///./tableTypes/RankingColumn.tsx","webpack:///./style/DataTableStyle.module.css"],"names":["VideoColumn","name","h","Text","id","cell","row","VideoLink","thumbnailUrl","videoUrl","TrendingVideosPage","props","document","title","concat","dictionary","header","trendingVideos","columns","_objectSpread","RankingColumn","sortable","width","NameColumn","selector","wrap","viewCount","right","getFormattedDateTime","uploadTime","_useState2","_slicedToArray","useState","data","setData","_useState4","filterModel","setFilterModel","filteredData","filter","e","filterFunction","searchBarComponent","useMemo","optionValue","option","value","fieldPlaceHolderMappings","Map","table","searchByDisplayName","searchByTitle","class","tableStyle","searchBarGroup","DropDownList","tipText","options","modifier","onChange","GoToPage","type","sortOrder","target","FilterWindow","openSearchText","text","openSearch","closeSearchText","closeSearch","_useState6","pending","setPending","getVideos","_ref","Api","then","res","videos","map","sort","a","b","index","PopularVideoToDisplayData","apply","arguments","useEffect","Fragment","GetCurrentNationalitySpan","DataTable","_extends","DefaultDataTableProps","customStyles","style","maxHeight","rows","minHeight","headCells","paddingLeft","paddingRight","cells","fixedHeader","pagination","paginationComponentOptions","paginationOptions","progressComponent","progressPending","subHeader","subHeaderComponent","ProfileImagePopup","VTuberId","imgUrl","ProfileImage","clickBehavior","dropDownStyle","dropDown","undefined","key","ranking","Date","targetModel","Object","entries","entry","toLowerCase","includes","some","SearchBar","_props$filterText","placeholder","placeholderText","filterText","onFilter","onClick","onClear","ActivityRowStyles","when","activity","backgroundColor","cursor","debutInfo","hasDebutInfo","isRecentlyDebut","color","conditionalRowStyles","nationalityModifier","getNationalityModifierState","isOpened","setIsOpened","setFilter","createSearchBar","keyTyped","handleOnFilterChange","nullableString","trimmed","trim","trimOrNullOnEmpty","_defineProperty","handleOnChange","get","fields","keys"],"mappings":"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","file":"route-TrendingVideos.chunk.3d55c.js","sourcesContent":["import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport VideoLink from '../components/VideoLink';\n\nexport interface VideoColumnRowData {\n  thumbnailUrl: string;\n  videoUrl: string;\n}\n\nexport const VideoColumn = <\n  RowData extends VideoColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.video\">Video</Text>,\n    cell: (row: RowData): JSX.Element | null =>\n      VideoLink({\n        thumbnailUrl: row.thumbnailUrl,\n        videoUrl: row.videoUrl,\n      }),\n  };\n};\n","import * as Api from '../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useMemo, useEffect } from 'preact/hooks';\nimport DataTable, {\n  TableColumn,\n  TableStyles,\n} from 'react-data-table-component';\nimport DropDownList from '../../components/DropDownList';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport { NameColumn } from '../../tableTypes/NameColumn';\nimport { VideoColumn } from '../../tableTypes/VideoColumn';\nimport { TrendingVideosModifier } from '../../types/ApiTypes';\nimport { VideoPopularityDisplayData } from '../../types/TableDisplayData/VideoPopularityDisplayData';\nimport { getFormattedDateTime } from '../../utils/DateTimeUtils';\nimport DefaultDataTableProps from '../../utils/DefaultDataTableProps';\nimport { GetCurrentNationalitySpan } from '../../utils/NationalityUtils';\nimport { PopularVideoToDisplayData } from '../../utils/transform/PopularVideoTransform';\nimport { GoToPage } from '../../utils/TypeSafeRouting';\nimport tableStyle from '../../style/DataTableStyle.module.css';\nimport { RankingColumn } from '../../tableTypes/RankingColumn';\nimport FilterWindow from '../../components/FilterWindow';\nimport { VideoPopularityDisplayDataFilterModel } from '../../types/FilterType/VideoPopularityDisplayDataFilterModel';\nimport { filterFunction } from '../../utils/FilterModelHelper';\n\nexport interface TrendingVideosPageProps {\n  dictionary: Dictionary;\n  modifier: TrendingVideosModifier;\n}\n\nconst TrendingVideosPage: FunctionalComponent<TrendingVideosPageProps> = (\n  props: TrendingVideosPageProps\n) => {\n  document.title = `${props.dictionary.header.trendingVideos} | ${props.dictionary.header.title}`;\n\n  const columns: Array<TableColumn<VideoPopularityDisplayData>> = [\n    {\n      ...RankingColumn(),\n      sortable: true,\n      width: '40px',\n    },\n    {\n      ...NameColumn(),\n      width: '200px',\n    },\n    {\n      name: <Text id=\"table.title\">Title</Text>,\n      selector: (row: { title: string }): string => row.title,\n      wrap: true,\n    },\n    {\n      ...VideoColumn(),\n      width: '200px',\n    },\n    {\n      name: <Text id=\"table.viewCount\">View Count</Text>,\n      selector: (row: { viewCount: number }): number => row.viewCount,\n      right: true,\n      sortable: true,\n      width: '80px',\n    },\n    {\n      name: <Text id=\"table.uploadTime\">Upload Time</Text>,\n      selector: (row: { uploadTime: Date }): string =>\n        getFormattedDateTime(row.uploadTime),\n      sortable: true,\n      width: '175px',\n    },\n  ];\n\n  // search filter\n  const [data, setData] = useState<Array<VideoPopularityDisplayData>>([]);\n  const [filterModel, setFilterModel] =\n    useState<VideoPopularityDisplayDataFilterModel>({\n      name: null,\n      title: null,\n    });\n  const filteredData = data.filter((e) => filterFunction(e, filterModel));\n\n  const searchBarComponent = useMemo(() => {\n    const optionValue: Array<{\n      option: h.JSX.Element;\n      value: TrendingVideosModifier;\n    }> = [\n      {\n        option: <Text id=\"table.noDuplicate\">One video per VTuber</Text>,\n        value: 'no-duplicate',\n      },\n      {\n        option: <Text id=\"table.allVideos\">All videos</Text>,\n        value: 'all',\n      },\n    ];\n\n    const handleFilterWindow = (\n      filterModel: VideoPopularityDisplayDataFilterModel\n    ): void => {\n      setFilterModel(filterModel);\n    };\n\n    const fieldPlaceHolderMappings: Map<string, string> = new Map<\n      string,\n      string\n    >([\n      ['name', props.dictionary.table.searchByDisplayName],\n      ['title', props.dictionary.table.searchByTitle],\n    ]);\n\n    return (\n      <div class={tableStyle.searchBarGroup}>\n        <DropDownList\n          tipText={props.dictionary.table.options}\n          value={props.modifier}\n          optionValue={optionValue}\n          onChange={(e: any) =>\n            GoToPage({\n              type: 'trending-videos',\n              sortOrder: e.target.value,\n            })\n          }\n        />\n        <FilterWindow\n          filterModel={filterModel}\n          fieldPlaceHolderMappings={fieldPlaceHolderMappings}\n          openSearchText={props.dictionary.text.openSearch}\n          closeSearchText={props.dictionary.text.closeSearch}\n          onChange={handleFilterWindow}\n        />\n      </div>\n    );\n  }, [filterModel, props.modifier, props.dictionary]);\n  const [pending, setPending] = useState(true);\n\n  const getVideos = async (): Promise<void> => {\n    await Api.getTrendingVideos(props.modifier).then((res) => {\n      // thanks to JavaScript sorting being mutable, I have to convert ReadonlyArray to Array first\n      setData(\n        res.data.videos\n          .map((e) => e)\n          .sort((a, b) => b.viewCount - a.viewCount)\n          .map((e, index) => PopularVideoToDisplayData(e, index + 1))\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVideos();\n  }, [props.modifier]);\n\n  const customStyles: TableStyles = {\n    table: {\n      style: {\n        maxHeight: '80vh',\n      },\n    },\n    rows: {\n      style: {\n        minHeight: '36px', // override the row height\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '5px', // override the cell padding for head cells\n        paddingRight: '5px',\n      },\n    },\n    cells: {\n      style: {\n        paddingLeft: '5px', // override the cell padding for data cells\n        paddingRight: '5px',\n      },\n    },\n  };\n\n  return (\n    <>\n      <h1>\n        <Text id=\"header.trendingVideos\">Trending Videos</Text>\n        {GetCurrentNationalitySpan()}\n      </h1>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={filteredData}\n        customStyles={customStyles}\n        fixedHeader\n        pagination\n        paginationComponentOptions={props.dictionary.table.paginationOptions}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n        subHeader\n        subHeaderComponent={searchBarComponent}\n      />\n    </>\n  );\n};\n\nexport default TrendingVideosPage;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ProfileImagePopup from '../components/ProfileImagePopup';\n\nexport interface NameColumnRowData {\n  id: string;\n  imgUrl?: string;\n  name: string;\n}\n\nexport const NameColumn = <\n  RowData extends NameColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.displayName\">Name</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <ProfileImagePopup\n        VTuberId={row.id}\n        imgUrl={row.imgUrl}\n        name={row.name}\n      />\n    ),\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__vr1DG\",\"profileImageFlex\":\"profileImageFlex__4VERG\",\"nameFlex\":\"nameFlex__WFOO9\"};","import { FunctionalComponent, h } from 'preact';\nimport ProfileImage from '../ProfileImage';\nimport style from './style.module.css';\n\nexport interface ProfileImagePopupProps {\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n}\n\nconst ProfileImagePopup: FunctionalComponent<ProfileImagePopupProps> = (\n  props: ProfileImagePopupProps\n): h.JSX.Element => {\n  return (\n    <div class={style.container}>\n      <div class={style.profileImageFlex}>\n        <ProfileImage\n          VTuberId={props.VTuberId}\n          imgUrl={props.imgUrl}\n          clickBehavior=\"popup\"\n        />\n      </div>\n      <span class={style.nameFlex}>{props.name}</span>\n    </div>\n  );\n};\n\nexport default ProfileImagePopup;\n","// extracted by mini-css-extract-plugin\nexport default {\"tipText\":\"tipText__4DHD3\"};","import { h } from 'preact';\nimport style from './style.module.css';\nimport dropDownStyle from '../../style/DropDownStyle.module.css';\n\nexport interface DropDownListProps<ValueType> {\n  tipText?: string;\n  optionValue?: Array<{ option: any; value: ValueType }>;\n  value?: ValueType;\n  onChange?: (e: unknown) => unknown;\n}\n\nfunction DropDownList<ValueType extends string | number>(\n  props: DropDownListProps<ValueType>\n): h.JSX.Element {\n  return (\n    <div>\n      <span class={style.tipText}>{props.tipText}</span>\n      <select\n        class={dropDownStyle.dropDown}\n        value={props.value}\n        onChange={props.onChange}\n      >\n        {props.optionValue !== undefined\n          ? props.optionValue.map((e) => (\n              <option key={e.value} value={e.value}>\n                {e.option}\n              </option>\n            ))\n          : null}\n      </select>\n    </div>\n  );\n}\n\nexport default DropDownList;\n","import { VideoPopularityData } from '../../types/ApiData/VideoPopularityData';\nimport { VideoPopularityDisplayData } from '../../types/TableDisplayData/VideoPopularityDisplayData';\n\nexport const PopularVideoToDisplayData = (\n  e: VideoPopularityData,\n  ranking: number\n): VideoPopularityDisplayData => ({\n  id: e.id,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  title: e.title,\n  thumbnailUrl: e.thumbnailUrl,\n  videoUrl: e.videoUrl,\n  viewCount: e.viewCount,\n  uploadTime: new Date(e.uploadTime),\n  ranking: ranking,\n});\n","export function filterFunction<\n  TargetType extends object,\n  FilterModel extends object,\n>(targetModel: TargetType, filterModel: FilterModel): boolean {\n  const result = Object.entries(filterModel).map((entry) => {\n    const keyTyped = entry[0] as keyof typeof targetModel;\n    const target = targetModel[keyTyped] as string | undefined | null;\n\n    const filter = entry[1] as string | null;\n\n    // if there is no filter applied\n    if (filter === null) {\n      return true;\n    }\n\n    // if target doesn't exist\n    if (target === null || target === undefined || target === '') {\n      return false;\n    }\n\n    return target.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  const someFilterNotMatch = result.some((e) => e === false);\n\n  return !someFilterNotMatch;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__1lsi6\",\"textField\":\"textField__bDpXR\",\"button\":\"button__maFzS\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface SearchBarProps {\n  placeholderText?: string;\n  filterText: string | null;\n  onFilter: (e: unknown) => unknown;\n  onClear: () => unknown;\n}\n\nconst SearchBar: FunctionalComponent<SearchBarProps> = (\n  props: SearchBarProps\n): h.JSX.Element => (\n  <div class={style.container}>\n    <input\n      type=\"text\"\n      class={style.textField}\n      placeholder={props.placeholderText}\n      value={props.filterText ?? ''}\n      onChange={props.onFilter}\n    />\n\n    <button type=\"button\" class={style.button} onClick={props.onClear}>\n      X\n    </button>\n  </div>\n);\n\nexport default SearchBar;\n","import { Activity } from '../types/Common/Activity';\nimport { DebutInfo } from '../types/DebutInfo';\n\nconst ActivityRowStyles = [\n  {\n    when: (row: { activity: Activity }): boolean =>\n      row.activity === 'preparing',\n    style: {\n      backgroundColor: 'rgba(141, 209, 157, 0.9)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity; debutInfo?: DebutInfo }): boolean =>\n      row.activity === 'active' &&\n      row.debutInfo !== undefined &&\n      row.debutInfo.hasDebutInfo === true &&\n      row.debutInfo.isRecentlyDebut === true,\n    style: {\n      backgroundColor: 'rgba(156, 205, 196, 0.5)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity }): boolean => row.activity === 'graduate',\n    style: {\n      backgroundColor: 'rgba(123, 123, 123, 0.9)',\n      color: 'white',\n      '&:hover': {\n        cursor: 'not-allowed',\n      },\n    },\n  },\n];\n\nexport default ActivityRowStyles;\n","import { TableProps } from 'react-data-table-component';\nimport ActivityRowStyles from '../style/ActivityRowStyles';\nimport { Activity } from '../types/Common/Activity';\n\n// columns and data are empty, user should fill them when using DefaultDataTableProps\nconst DefaultDataTableProps = <\n  T extends { activity: Activity },\n>(): TableProps<T> => ({\n  columns: [],\n  data: [],\n  conditionalRowStyles: ActivityRowStyles,\n});\n\nexport default DefaultDataTableProps;\n","import { Fragment, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { getNationalityModifierState } from '../global/DisplayNationality';\nimport { NationalityModifier } from '../types/Common/NationalityModifier';\n\nexport const GetCurrentNationalitySpan = (): JSX.Element | null => {\n  const nationalityModifier: NationalityModifier =\n    getNationalityModifierState();\n\n  switch (nationalityModifier) {\n    case 'TW':\n    case 'HK':\n    case 'MY':\n      return (\n        <>\n          {' '}\n          (<Text id=\"text.onlyShowing\">only showing </Text>\n          <Text id={`nationalityTitle.${nationalityModifier}`}>\n            placeholder\n          </Text>{' '}\n          VTuber)\n        </>\n      );\n    case 'all':\n    default:\n      return null;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"floating\":\"floating__uhu4Y\",\"floatingHidden\":\"floatingHidden__mvSUQ\",\"floatingShowing\":\"floatingShowing__nwzm5\"};","import { h } from 'preact';\nimport { useState } from 'preact/hooks';\nimport { trimOrNullOnEmpty } from '../../utils/StringUtils';\nimport SearchBar from '../SearchBar';\nimport style from './style.module.css';\n\nexport interface FilterWindowProps<FilterModel extends object> {\n  filterModel: FilterModel;\n  fieldPlaceHolderMappings: Map<string, string>;\n  openSearchText: string;\n  closeSearchText: string;\n  onChange?: (e: FilterModel) => void;\n}\n\nfunction FilterWindow<FilterModel extends object>(\n  props: FilterWindowProps<FilterModel>\n): JSX.Element {\n  const [isOpened, setIsOpened] = useState<boolean>(false);\n  const [filter, setFilter] = useState<FilterModel>(props.filterModel);\n\n  function handleOnChange(e: FilterModel): void {\n    if (props.onChange != null) {\n      props.onChange(e);\n    }\n  }\n\n  const createSearchBar = (key: string): JSX.Element => {\n    {\n      const keyTyped = key as keyof typeof filter;\n\n      const handleOnFilterChange = (e: string | null): void => {\n        const nullableString: string | null = trimOrNullOnEmpty(e);\n\n        setFilter({ ...filter, [keyTyped]: nullableString });\n        handleOnChange({ ...filter, [keyTyped]: nullableString });\n      };\n\n      return (\n        <SearchBar\n          key={key}\n          placeholderText={props.fieldPlaceHolderMappings.get(\n            keyTyped as string\n          )}\n          filterText={filter[keyTyped] as string | null}\n          onFilter={(e: any): void => handleOnFilterChange(e.target.value)}\n          onClear={(): void => handleOnFilterChange(null)}\n        />\n      );\n    }\n  };\n\n  const fields: Array<JSX.Element> = Object.keys(props.filterModel).map((key) =>\n    createSearchBar(key)\n  );\n\n  const ToggleButton = (): JSX.Element => (\n    <input\n      type=\"button\"\n      value={isOpened === true ? props.closeSearchText : props.openSearchText}\n      onClick={(): void => setIsOpened(!isOpened)}\n    />\n  );\n\n  const toggleFloatingClass = (): string => {\n    if (isOpened) return `${style.floating} ${style.floatingShowing}`;\n    else return `${style.floating} ${style.floatingHidden}`;\n  };\n\n  return (\n    <div>\n      <ToggleButton />\n      {isOpened === true ? (\n        <div class={toggleFloatingClass()}>{fields}</div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default FilterWindow;\n","export function trimOrNullOnEmpty(\n  value: string | null | undefined\n): string | null {\n  if (value === null || value === undefined) return null;\n\n  const trimmed = value.trim();\n\n  if (trimmed === '') return null;\n\n  return trimmed;\n}\n","import { TableColumn } from 'react-data-table-component';\n\nexport interface RankingColumnRowData {\n  ranking: number;\n}\n\nexport const RankingColumn = <\n  RowData extends RankingColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: '#',\n    selector: (row: RowData): number => row.ranking,\n    wrap: false,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchBarGroup\":\"R1T8+hwxvBovrVdGHizUFw==\"};"],"sourceRoot":""}