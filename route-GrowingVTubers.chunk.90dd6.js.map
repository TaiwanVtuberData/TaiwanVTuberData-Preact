{"version":3,"sources":["webpack:///./utils/transform/GrowthTransform.ts","webpack:///./style/CompactTableStyle.ts","webpack:///./tableTypes/NameColumn.tsx","webpack:///./tableTypes/_7DaysGrowthColumn.tsx","webpack:///./tableTypes/GroupColumn.tsx","webpack:///./tableTypes/_30DaysGrowthColumn.tsx","webpack:///./components/ProfileImagePopup/style.module.css","webpack:///./components/ProfileImagePopup/index.tsx","webpack:///./utils/NumberUtils.ts","webpack:///./utils/sort/GrowthSort.ts","webpack:///./tableTypes/NationalityColumn.tsx","webpack:///./utils/FilterModelHelper.ts","webpack:///./components/SearchBar/style.module.css","webpack:///./components/SearchBar/index.tsx","webpack:///./style/ActivityRowStyles.ts","webpack:///./utils/DefaultDataTableProps.ts","webpack:///./utils/NationalityUtils.tsx","webpack:///./routes/GrowingVTubers/index.tsx","webpack:///./tableTypes/YouTubeSubscriberColumn.tsx","webpack:///./components/FilterWindow/style.module.css","webpack:///./components/FilterWindow/index.tsx","webpack:///./utils/StringUtils.ts","webpack:///./components/ToolTip/style.module.css","webpack:///./components/ToolTip/index.tsx","webpack:///./tableTypes/PopularVideoColumn.tsx","webpack:///./utils/transform/BasicTransform.ts","webpack:///./style/DataTableStyle.module.css","webpack:///./components/QuestionMarkToolTip/style.module.css","webpack:///./components/QuestionMarkToolTip/index.tsx"],"names":["growthDataToDisplayData","e","subCount","percentage","undefined","diff","VTuberGrowthToDisplay","VTuberBasicToDisplay","YouTubeSubscriber","YouTube","subscriber","_7DaysGrowth","count","_30DaysGrowth","CompactTableStyle","headCells","style","paddingLeft","paddingRight","cells","NameColumn","name","id","cell","row","VTuberId","imgUrl","_7DaysGrowthColumn","tableTranslation","GrowthDisplayDataToString","GroupColumn","group","href","GetRoute","type","_30DaysGrowthColumn","ProfileImagePopup","props","class","ProfileImage","clickBehavior","PrependSign","value","valueToPercentString","toFixed","recordType","noRecord","atLeast","_7DaysGrowthSort","rowA","rowB","aCount","bCount","_30DaysGrowthSort","NationalityColumn","selector","nationality","filterFunction","targetModel","filterModel","Object","entries","map","entry","target","filter","toLowerCase","includes","some","SearchBar","placeholder","placeholderText","filterText","onChange","onFilter","onClick","onClear","ActivityRowStyles","when","activity","backgroundColor","cursor","color","DefaultDataTableProps","columns","data","conditionalRowStyles","GetCurrentNationalitySpan","nationalityModifier","getNationalityModifierState","GrowingVTubersPage","document","title","dictionary","header","growingVTubers","width","YouTubeSubscriberColumn","sortable","table","right","sortFunction","PopularVideoColumn","useState","setData","YouTubeId","TwitchId","setFilterModel","filteredData","searchBarComponent","useMemo","fieldPlaceHolderMappings","Map","searchByDisplayName","searchByYouTubeId","searchByTwitchId","searchByGroup","searchByNationality","tableStyle","searchBarGroup","openSearchText","text","openSearch","closeSearchText","closeSearch","pending","setPending","getVTubers","Api","then","res","VTubers","sort","a","b","useEffect","fontSize","customStyles","fixedHeader","pagination","paginationComponentOptions","paginationOptions","progressComponent","progressPending","subHeader","subHeaderComponent","FilterWindow","isOpened","setIsOpened","setFilter","createSearchBar","key","keyTyped","handleOnFilterChange","nullableString","trimmed","trim","trimOrNullOnEmpty","handleOnChange","get","fields","keys","ToolTip","children","popularVideo","Twitch","TwitchFollower","follower","QuestionMarkToolTip"],"mappings":"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","file":"route-GrowingVTubers.chunk.90dd6.js","sourcesContent":["import { VTuberGrowthData } from '../../types/ApiData/VTuberGrowthData';\nimport { GrowthData } from '../../types/Common/GrowthData';\nimport {\n  GrowthDisplayData,\n  VTuberGrowthDisplayData,\n} from '../../types/TableDisplayData/VTuberGrowthDisplayData';\nimport { VTuberBasicToDisplay } from './BasicTransform';\n\nconst growthDataToDisplayData = (\n  e: GrowthData,\n  subCount?: number\n): GrowthDisplayData => ({\n  ...e,\n  percentage: subCount !== undefined && subCount !== 0 ? e.diff / subCount : 0,\n});\n\nexport const VTuberGrowthToDisplay = (\n  e: VTuberGrowthData\n): VTuberGrowthDisplayData => ({\n  ...VTuberBasicToDisplay(e),\n  YouTubeSubscriber: e.YouTube.subscriber,\n  _7DaysGrowth: growthDataToDisplayData(\n    e.YouTube._7DaysGrowth,\n    e.YouTube.subscriber.count\n  ),\n  _30DaysGrowth: growthDataToDisplayData(\n    e.YouTube._30DaysGrowth,\n    e.YouTube.subscriber.count\n  ),\n});\n","import { TableStyles } from 'react-data-table-component';\n\nexport const CompactTableStyle: TableStyles = {\n  headCells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for head cells\n      paddingRight: '5px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for data cells\n      paddingRight: '5px',\n    },\n  },\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ProfileImagePopup from '../components/ProfileImagePopup';\n\nexport interface NameColumnRowData {\n  id: string;\n  imgUrl?: string;\n  name: string;\n}\n\nexport const NameColumn = <\n  RowData extends NameColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.displayName\">Name</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <ProfileImagePopup\n        VTuberId={row.id}\n        imgUrl={row.imgUrl}\n        name={row.name}\n      />\n    ),\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GrowthDisplayData } from '../types/TableDisplayData/VTuberGrowthDisplayData';\nimport { GrowthDisplayDataToString } from '../utils/NumberUtils';\n\nexport interface Days7GrowthColumnRowData {\n  _7DaysGrowth: GrowthDisplayData;\n}\n\nexport const _7DaysGrowthColumn = <\n  RowData extends Days7GrowthColumnRowData\n>(tableTranslation: {\n  noRecord: string;\n  atLeast: string;\n}): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table._7DaysGrowth\">7 Days Growth (Percent)</Text>,\n    cell: (row: RowData): string =>\n      GrowthDisplayDataToString(row._7DaysGrowth, tableTranslation),\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GetRoute } from '../utils/TypeSafeRouting';\n\nexport interface GroupColumnRowData {\n  group?: string;\n}\n\nexport const GroupColumn = <\n  RowData extends GroupColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.group\">Group</Text>,\n    cell: (row: RowData): h.JSX.Element | null =>\n      row.group !== undefined ? (\n        <a href={GetRoute({ type: 'group', name: row.group })}>{row.group}</a>\n      ) : null,\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GrowthDisplayData } from '../types/TableDisplayData/VTuberGrowthDisplayData';\nimport { GrowthDisplayDataToString } from '../utils/NumberUtils';\n\nexport interface Days30GrowthColumnRowData {\n  _30DaysGrowth: GrowthDisplayData;\n}\n\nexport const _30DaysGrowthColumn = <\n  RowData extends Days30GrowthColumnRowData\n>(tableTranslation: {\n  noRecord: string;\n  atLeast: string;\n}): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table._30DaysGrowth\">30 Days Growth (Percent)</Text>,\n    cell: (row: RowData): string =>\n      GrowthDisplayDataToString(row._30DaysGrowth, tableTranslation),\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__vr1DG\",\"profileImageFlex\":\"profileImageFlex__4VERG\",\"nameFlex\":\"nameFlex__WFOO9\"};","import { FunctionalComponent, h } from 'preact';\nimport ProfileImage from '../ProfileImage';\nimport style from './style.module.css';\n\nexport interface ProfileImagePopupProps {\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n}\n\nconst ProfileImagePopup: FunctionalComponent<ProfileImagePopupProps> = (\n  props: ProfileImagePopupProps\n): h.JSX.Element => {\n  return (\n    <div class={style.container}>\n      <div class={style.profileImageFlex}>\n        <ProfileImage\n          VTuberId={props.VTuberId}\n          imgUrl={props.imgUrl}\n          clickBehavior=\"popup\"\n        />\n      </div>\n      <span class={style.nameFlex}>{props.name}</span>\n    </div>\n  );\n};\n\nexport default ProfileImagePopup;\n","import { GrowthRecordType } from '../types/Common/GrowthData';\n\nexport const PrependSign = (value: number): string => {\n  if (value > 0) return `+${value}`;\n  if (value < 0) return `${value}`;\n\n  return '0';\n};\n\nconst valueToPercentString = (value: number): string =>\n  (value * 100).toFixed(2);\n\nexport const GrowthDisplayDataToString = (\n  e: { diff: number; recordType: GrowthRecordType; percentage?: number },\n  tableTranslation: { noRecord: string; atLeast: string }\n): string => {\n  if (e.percentage) {\n    switch (e.recordType) {\n      case 'none':\n        return tableTranslation.noRecord;\n      case 'partial':\n        return `${tableTranslation.atLeast} ${PrependSign(\n          e.diff\n        )} (${valueToPercentString(e.percentage as number)}%)`;\n      case 'full':\n        return `${PrependSign(e.diff)} (${valueToPercentString(\n          e.percentage\n        )}%)`;\n    }\n  }\n\n  switch (e.recordType) {\n    case 'none':\n      return tableTranslation.noRecord;\n    case 'partial':\n      return `${tableTranslation.atLeast} ${PrependSign(e.diff)}`;\n    case 'full':\n      return `${PrependSign(e.diff)}`;\n  }\n};\n","import { ColumnSortFunction } from 'react-data-table-component/dist/src/DataTable/types';\nimport { GrowthDisplayData } from '../../types/TableDisplayData/VTuberGrowthDisplayData';\n\n// TODO: how do I inject field name _7DaysGrowth using template?\nexport const _7DaysGrowthSort: ColumnSortFunction<{\n  _7DaysGrowth: GrowthDisplayData;\n}> = (rowA, rowB) => {\n  const aCount = rowA._7DaysGrowth.percentage;\n  const bCount = rowB._7DaysGrowth.percentage;\n\n  if (aCount > bCount) return 1;\n\n  if (bCount > aCount) return -1;\n\n  return 0;\n};\n\nexport const _30DaysGrowthSort: ColumnSortFunction<{\n  _30DaysGrowth: GrowthDisplayData;\n}> = (rowA, rowB) => {\n  const aCount = rowA._30DaysGrowth.percentage;\n  const bCount = rowB._30DaysGrowth.percentage;\n\n  if (aCount > bCount) return 1;\n\n  if (bCount > aCount) return -1;\n\n  return 0;\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\n\nexport interface NationalityColumnRowData {\n  nationality?: string;\n}\n\nexport const NationalityColumn = <\n  RowData extends NationalityColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.nationality\">Nationality</Text>,\n    selector: (row: RowData): string => row.nationality ?? '',\n  };\n};\n","export function filterFunction<\n  TargetType extends object,\n  FilterModel extends object\n>(targetModel: TargetType, filterModel: FilterModel): boolean {\n  const result = Object.entries(filterModel).map((entry) => {\n    const keyTyped = entry[0] as keyof typeof targetModel;\n    const target = targetModel[keyTyped] as string | undefined | null;\n\n    const filter = entry[1] as string | null;\n\n    // if there is no filter applied\n    if (filter === null) {\n      return true;\n    }\n\n    // if target doesn't exist\n    if (target === null || target === undefined || target === '') {\n      return false;\n    }\n\n    return target.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  const someFilterNotMatch = result.some((e) => e === false);\n\n  return !someFilterNotMatch;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__1lsi6\",\"textField\":\"textField__bDpXR\",\"button\":\"button__maFzS\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface SearchBarProps {\n  placeholderText?: string;\n  filterText: string | null;\n  onFilter: (e: unknown) => unknown;\n  onClear: () => unknown;\n}\n\nconst SearchBar: FunctionalComponent<SearchBarProps> = (\n  props: SearchBarProps\n): h.JSX.Element => (\n  <div class={style.container}>\n    <input\n      type=\"text\"\n      class={style.textField}\n      placeholder={props.placeholderText}\n      value={props.filterText ?? ''}\n      onChange={props.onFilter}\n    />\n\n    <button type=\"button\" class={style.button} onClick={props.onClear}>\n      X\n    </button>\n  </div>\n);\n\nexport default SearchBar;\n","import { Activity } from '../types/Common/Activity';\n\nconst ActivityRowStyles = [\n  {\n    when: (row: { activity: Activity }): boolean =>\n      row.activity === 'preparing',\n    style: {\n      backgroundColor: 'rgba(141, 209, 157, 0.9)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity }): boolean => row.activity === 'graduate',\n    style: {\n      backgroundColor: 'rgba(123, 123, 123, 0.9)',\n      color: 'white',\n      '&:hover': {\n        cursor: 'not-allowed',\n      },\n    },\n  },\n];\n\nexport default ActivityRowStyles;\n","import { TableProps } from 'react-data-table-component';\nimport ActivityRowStyles from '../style/ActivityRowStyles';\nimport { Activity } from '../types/Common/Activity';\n\n// columns and data are empty, user should fill them when using DefaultDataTableProps\nconst DefaultDataTableProps = <\n  T extends { activity: Activity }\n>(): TableProps<T> => ({\n  columns: [],\n  data: [],\n  conditionalRowStyles: ActivityRowStyles,\n});\n\nexport default DefaultDataTableProps;\n","import { Fragment, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { getNationalityModifierState } from '../global/DisplayNationality';\nimport { NationalityModifier } from '../types/Common/NationalityModifier';\n\nexport const GetCurrentNationalitySpan = (): JSX.Element | null => {\n  const nationalityModifier: NationalityModifier =\n    getNationalityModifierState();\n\n  switch (nationalityModifier) {\n    case 'TW':\n    case 'HK':\n    case 'MY':\n      return (\n        <>\n          {' '}\n          (<Text id=\"text.onlyShowing\">only showing </Text>\n          <Text id={`nationalityTitle.${nationalityModifier}`}>\n            placeholder\n          </Text>{' '}\n          VTuber)\n        </>\n      );\n    case 'all':\n    default:\n      return null;\n  }\n};\n","import * as Api from '../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useMemo, useEffect } from 'preact/hooks';\nimport DataTable, { TableColumn } from 'react-data-table-component';\nimport QuestionMarkToolTip from '../../components/QuestionMarkToolTip';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport { CompactTableStyle } from '../../style/CompactTableStyle';\nimport { GroupColumn } from '../../tableTypes/GroupColumn';\nimport { NameColumn } from '../../tableTypes/NameColumn';\nimport { NationalityColumn } from '../../tableTypes/NationalityColumn';\nimport { PopularVideoColumn } from '../../tableTypes/PopularVideoColumn';\nimport { YouTubeSubscriberColumn } from '../../tableTypes/YouTubeSubscriberColumn';\nimport { _30DaysGrowthColumn } from '../../tableTypes/_30DaysGrowthColumn';\nimport { _7DaysGrowthColumn } from '../../tableTypes/_7DaysGrowthColumn';\nimport { VTuberGrowthDisplayData } from '../../types/TableDisplayData/VTuberGrowthDisplayData';\nimport DefaultDataTableProps from '../../utils/DefaultDataTableProps';\nimport { GetCurrentNationalitySpan } from '../../utils/NationalityUtils';\nimport { VTuberGrowthToDisplay } from '../../utils/transform/GrowthTransform';\nimport tableStyle from '../../style/DataTableStyle.module.css';\nimport {\n  _30DaysGrowthSort,\n  _7DaysGrowthSort,\n} from '../../utils/sort/GrowthSort';\nimport ActivityRowStyles from '../../style/ActivityRowStyles';\nimport { VTuberGrowthDisplayDataFilterModel } from '../../types/FilterType/VTuberGrowthDisplayDataFilterModel';\nimport { filterFunction } from '../../utils/FilterModelHelper';\nimport FilterWindow from '../../components/FilterWindow';\n\nexport interface GrowingVTubersPageProps {\n  dictionary: Dictionary;\n}\n\nconst GrowingVTubersPage: FunctionalComponent<GrowingVTubersPageProps> = (\n  props: GrowingVTubersPageProps\n) => {\n  document.title = `${props.dictionary.header.growingVTubers} | ${props.dictionary.header.title}`;\n\n  const columns: Array<TableColumn<VTuberGrowthDisplayData>> = [\n    {\n      ...NameColumn(),\n      width: '200px',\n    },\n    {\n      ...YouTubeSubscriberColumn(),\n      sortable: true,\n    },\n    {\n      ..._7DaysGrowthColumn(props.dictionary.table),\n      right: true,\n      sortable: true,\n      sortFunction: _7DaysGrowthSort,\n    },\n    {\n      ..._30DaysGrowthColumn(props.dictionary.table),\n      right: true,\n      sortable: true,\n      sortFunction: _30DaysGrowthSort,\n    },\n    {\n      ...PopularVideoColumn(),\n      width: '100px',\n    },\n    {\n      ...GroupColumn(),\n      width: '100px',\n    },\n    {\n      ...NationalityColumn(),\n      width: '100px',\n    },\n  ];\n\n  // search filter\n  const [data, setData] = useState<Array<VTuberGrowthDisplayData>>([]);\n  const [filterModel, setFilterModel] =\n    useState<VTuberGrowthDisplayDataFilterModel>({\n      name: null,\n      YouTubeId: null,\n      TwitchId: null,\n      group: null,\n      nationality: null,\n    });\n  const filteredData = data.filter((e) => filterFunction(e, filterModel));\n\n  const searchBarComponent = useMemo(() => {\n    const handleFilterWindow = (\n      filterModel: VTuberGrowthDisplayDataFilterModel\n    ): void => {\n      setFilterModel(filterModel);\n    };\n\n    const fieldPlaceHolderMappings: Map<string, string> = new Map<\n      string,\n      string\n    >([\n      ['name', props.dictionary.table.searchByDisplayName],\n      ['YouTubeId', props.dictionary.table.searchByYouTubeId],\n      ['TwitchId', props.dictionary.table.searchByTwitchId],\n      ['group', props.dictionary.table.searchByGroup],\n      ['nationality', props.dictionary.table.searchByNationality],\n    ]);\n\n    return (\n      <div class={tableStyle.searchBarGroup}>\n        <FilterWindow\n          filterModel={filterModel}\n          fieldPlaceHolderMappings={fieldPlaceHolderMappings}\n          openSearchText={props.dictionary.text.openSearch}\n          closeSearchText={props.dictionary.text.closeSearch}\n          onChange={handleFilterWindow}\n        />\n      </div>\n    );\n  }, [filterModel, props.dictionary]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getGrowingVTubers('100').then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .map((e) => VTuberGrowthToDisplay(e))\n          .sort((a, b) => b._7DaysGrowth.percentage - a._7DaysGrowth.percentage)\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h1>\n        <Text id=\"header.growingVTubers\">Growing VTubers</Text>\n        {GetCurrentNationalitySpan()}\n        <QuestionMarkToolTip\n          width=\"300px\"\n          fontSize=\"13px\"\n          text={<Text id=\"toolTip.growingVTubers\">tooltip text</Text>}\n        />\n      </h1>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={filteredData}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        fixedHeader\n        pagination\n        paginationComponentOptions={props.dictionary.table.paginationOptions}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n        subHeader\n        subHeaderComponent={searchBarComponent}\n      />\n    </>\n  );\n};\n\nexport default GrowingVTubersPage;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { HasCountType } from '../types/Common/CountType';\n\nexport interface YouTubeSubscriberColumnRowData {\n  YouTubeSubscriber: HasCountType;\n}\n\nexport const YouTubeSubscriberColumn = <\n  RowData extends YouTubeSubscriberColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.YouTubeSubscriberCount\">YouTube Subscribers</Text>,\n    selector: (row: RowData): number => row.YouTubeSubscriber.count,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"floating\":\"floating__uhu4Y\",\"floatingHidden\":\"floatingHidden__mvSUQ\",\"floatingShowing\":\"floatingShowing__nwzm5\"};","import { h } from 'preact';\nimport { useState } from 'preact/hooks';\nimport { trimOrNullOnEmpty } from '../../utils/StringUtils';\nimport SearchBar from '../SearchBar';\nimport style from './style.module.css';\n\nexport interface FilterWindowProps<FilterModel extends object> {\n  filterModel: FilterModel;\n  fieldPlaceHolderMappings: Map<string, string>;\n  openSearchText: string;\n  closeSearchText: string;\n  onChange?: (e: FilterModel) => void;\n}\n\nfunction FilterWindow<FilterModel extends object>(\n  props: FilterWindowProps<FilterModel>\n): JSX.Element {\n  const [isOpened, setIsOpened] = useState<boolean>(false);\n  const [filter, setFilter] = useState<FilterModel>(props.filterModel);\n\n  function handleOnChange(e: FilterModel): void {\n    if (props.onChange != null) {\n      props.onChange(e);\n    }\n  }\n\n  const createSearchBar = (key: string): JSX.Element => {\n    {\n      const keyTyped = key as keyof typeof filter;\n\n      const handleOnFilterChange = (e: string | null): void => {\n        const nullableString: string | null = trimOrNullOnEmpty(e);\n\n        setFilter({ ...filter, [keyTyped]: nullableString });\n        handleOnChange({ ...filter, [keyTyped]: nullableString });\n      };\n\n      return (\n        <SearchBar\n          key={key}\n          placeholderText={props.fieldPlaceHolderMappings.get(\n            keyTyped as string\n          )}\n          filterText={filter[keyTyped] as string | null}\n          onFilter={(e: any): void => handleOnFilterChange(e.target.value)}\n          onClear={(): void => handleOnFilterChange(null)}\n        />\n      );\n    }\n  };\n\n  const fields: Array<JSX.Element> = Object.keys(props.filterModel).map((key) =>\n    createSearchBar(key)\n  );\n\n  const ToggleButton = (): JSX.Element => (\n    <input\n      type=\"button\"\n      value={isOpened === true ? props.closeSearchText : props.openSearchText}\n      onClick={(): void => setIsOpened(!isOpened)}\n    />\n  );\n\n  const toggleFloatingClass = (): string => {\n    if (isOpened) return `${style.floating} ${style.floatingShowing}`;\n    else return `${style.floating} ${style.floatingHidden}`;\n  };\n\n  return (\n    <div>\n      <ToggleButton />\n      {isOpened === true ? (\n        <div class={toggleFloatingClass()}>{fields}</div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default FilterWindow;\n","export function trimOrNullOnEmpty(\n  value: string | null | undefined\n): string | null {\n  if (value === null || value === undefined) return null;\n\n  const trimmed = value.trim();\n\n  if (trimmed === '') return null;\n\n  return trimmed;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"tooltip__vtGmz\",\"tooltipText\":\"tooltipText__pA-zc\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface ToolTipProps {\n  text: string | React.ReactNode;\n  children: React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst ToolTip: FunctionalComponent<ToolTipProps> = (\n  props: ToolTipProps\n): h.JSX.Element => {\n  return (\n    <div class={style.tooltip}>\n      {props.children}\n      <span\n        class={style.tooltipText}\n        style={{ width: props.width, fontSize: props.fontSize }}\n      >\n        {props.text}\n      </span>\n    </div>\n  );\n};\n\nexport default ToolTip;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ShowVideoButton from '../components/ShowVideoButton';\nimport { VideoInfo } from '../types/Common/VideoInfo';\n\nexport interface PopularVideoColumnRowData {\n  popularVideo?: VideoInfo;\n}\n\nexport const PopularVideoColumn = <\n  RowData extends PopularVideoColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularVideo\">Popular Video</Text>,\n    cell: (row: RowData): JSX.Element | null =>\n      row.popularVideo !== undefined ? (\n        <ShowVideoButton popularVideo={row.popularVideo} />\n      ) : null,\n  };\n};\n","import { VTuberData } from '../../types/ApiData/VTuberData';\nimport { VTuberDisplayData } from '../../types/TableDisplayData/VTuberDisplayData';\n\nexport const VTuberBasicToDisplay = (e: VTuberData): VTuberDisplayData => ({\n  id: e.id,\n  activity: e.activity,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  YouTubeId: e.YouTube?.id,\n  YouTubeSubscriber: e.YouTube?.subscriber,\n  TwitchId: e.Twitch?.id,\n  TwitchFollower: e.Twitch?.follower,\n  popularVideo: e.popularVideo,\n  group: e.group,\n  nationality: e.nationality,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"searchBarGroup\":\"R1T8+hwxvBovrVdGHizUFw==\"};","// extracted by mini-css-extract-plugin\nexport default {\"questionMark\":\"questionMark__RT3wD\"};","import { FunctionalComponent, h } from 'preact';\nimport ToolTip from '../ToolTip';\nimport style from './style.module.css';\n\nexport interface QuestionMarkToolTip {\n  text: string | React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst QuestionMarkToolTip: FunctionalComponent<QuestionMarkToolTip> = (\n  props: QuestionMarkToolTip\n): h.JSX.Element => {\n  return (\n    <ToolTip text={props.text} width={props.width} fontSize={props.fontSize}>\n      <img class={style.questionMark} />\n    </ToolTip>\n  );\n};\n\nexport default QuestionMarkToolTip;\n"],"sourceRoot":""}