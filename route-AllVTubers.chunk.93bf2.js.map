{"version":3,"sources":["webpack:///./utils/transform/DebutStringToDebutInfo.ts","webpack:///./utils/sort/SubscriberCountSort.ts","webpack:///./global/TodayDate.ts","webpack:///./tableTypes/NameColumn.tsx","webpack:///./tableTypes/GroupColumn.tsx","webpack:///./components/YouTubeTwitchCount/style.module.css","webpack:///./components/YouTubeTwitchCount/index.tsx","webpack:///./components/ProfileImagePopup/style.module.css","webpack:///./components/ProfileImagePopup/index.tsx","webpack:///./utils/NumberUtils.ts","webpack:///./components/DropDownList/style.module.css","webpack:///./components/DropDownList/index.tsx","webpack:///./tableTypes/YouTubeTwitchCountColumn.tsx","webpack:///./tableTypes/NationalityColumn.tsx","webpack:///./utils/FilterModelHelper.ts","webpack:///./components/SearchBar/style.module.css","webpack:///./components/SearchBar/index.tsx","webpack:///./style/ActivityRowStyles.ts","webpack:///./utils/DefaultDataTableProps.ts","webpack:///./utils/NationalityUtils.tsx","webpack:///./routes/AllVTubers/index.tsx","webpack:///./components/FilterWindow/style.module.css","webpack:///./components/FilterWindow/index.tsx","webpack:///./utils/StringUtils.ts","webpack:///./utils/CountTypeUtils.ts","webpack:///./tableTypes/PopularVideoColumn.tsx","webpack:///./utils/transform/BasicTransform.ts","webpack:///./style/DataTableStyle.module.css"],"names":["maybeDebutStringToDebutInfo","debutString","hasDebutInfo","debutStringToDebutInfo","debutDate","isToday","TODAY_DATE_STRING","isRecentlyDebut","dateDiffInDays","dateStringToDate","TIMEZONE_DIFF_IN_HOUR","TODAY_DATE","YouTubeSubscriberCountDescendingSort","rowA","rowB","aExist","undefined","YouTubeSubscriber","bExist","CountTypeCompare","TwitchFollowerCountDescendingSort","TwitchFollower","YouTubeSubscriberCountPlusTwitchFollowerCountAscendingSort","_GetCount","_GetCount2","_GetCount3","_GetCount4","aCount","GetCount","bCount","YouTubeSubscriberCountPlusTwitchFollowerCountDescendingSort","SubscriberCountDescendingSort","sortMethod","tryParseInteger","process","getDateAfterTimezoneAdjustment","Date","getISODateString","NameColumn","name","h","Text","id","cell","row","ProfileImagePopup","VTuberId","imgUrl","GroupColumn","group","href","GetRoute","type","YouTubeTwitchCount","props","YouTubeSpan","YouTubeCount","class","concat","style","CountFragment","countType","TwitchSpan","TwitchCount","Fragment","ProfileImage","clickBehavior","PrependSign","value","valueToPercentString","toFixed","GrowthDisplayDataToString","e","tableTranslation","percentage","recordType","noRecord","atLeast","diff","str","defaultValue","parsedVal","parseInt","isNaN","DropDownList","tipText","dropDownStyle","dropDown","onChange","optionValue","map","key","option","YouTubeTwitchCountColumn","NationalityColumn","selector","_row$nationality","nationality","filterFunction","targetModel","filterModel","Object","entries","entry","target","filter","toLowerCase","includes","some","SearchBar","_props$filterText","placeholder","placeholderText","filterText","onFilter","onClick","onClear","ActivityRowStyles","when","activity","backgroundColor","cursor","debutInfo","color","DefaultDataTableProps","columns","data","conditionalRowStyles","GetCurrentNationalitySpan","nationalityModifier","getNationalityModifierState","AllVTubersPage","document","title","dictionary","header","allVTubers","_useState2","_slicedToArray","useState","setSortMethod","PopularVideoColumn","_useState4","setData","_useState6","YouTubeId","TwitchId","setFilterModel","filteredData","sort","searchBarComponent","useMemo","fieldPlaceHolderMappings","Map","table","searchByDisplayName","searchByYouTubeId","searchByTwitchId","searchByGroup","searchByNationality","tableStyle","searchBarGroup","sortingMethod","FilterWindow","openSearchText","text","openSearch","closeSearchText","closeSearch","_useState8","pending","setPending","getVTubers","_ref","Api","then","res","VTubers","VTuberBasicToDisplay","apply","arguments","useEffect","DataTable","_extends","fixedHeader","pagination","paginationComponentOptions","paginationOptions","progressComponent","progressPending","subHeader","subHeaderComponent","isOpened","setIsOpened","setFilter","createSearchBar","keyTyped","handleOnFilterChange","nullableString","trimmed","trim","trimOrNullOnEmpty","_objectSpread","_defineProperty","handleOnChange","get","fields","keys","tag","count","a","b","popularVideo","ShowVideoButton","_e$YouTube","_e$YouTube2","_e$Twitch","_e$Twitch2","YouTube","subscriber","Twitch","follower"],"mappings":"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","file":"route-AllVTubers.chunk.93bf2.js","sourcesContent":["import {\n  TIMEZONE_DIFF_IN_HOUR,\n  TODAY_DATE,\n  TODAY_DATE_STRING,\n} from '../../global/TodayDate';\nimport { DebutInfo, HasDebutInfo } from '../../types/DebutInfo';\nimport { dateDiffInDays, dateStringToDate } from '../DateTimeUtils';\n\nexport const maybeDebutStringToDebutInfo = (\n  debutString?: string\n): DebutInfo => {\n  if (debutString === null || debutString === undefined)\n    return { hasDebutInfo: false };\n\n  return debutStringToDebutInfo(debutString);\n};\n\nexport const debutStringToDebutInfo = (debutString: string): HasDebutInfo => {\n  return {\n    hasDebutInfo: true,\n    debutDate: debutString,\n    isToday: debutString === TODAY_DATE_STRING,\n    isRecentlyDebut:\n      dateDiffInDays(\n        dateStringToDate(debutString, TIMEZONE_DIFF_IN_HOUR),\n        TODAY_DATE\n      ) < 30,\n  };\n};\n","import { CountType } from '../../types/Common/CountType';\nimport { CountTypeCompare, GetCount } from '../CountTypeUtils';\n\nexport type SortMethod = 'YouTube+Twitch' | 'YouTube' | 'Twitch';\n\nconst YouTubeSubscriberCountDescendingSort = <\n  T extends { YouTubeSubscriber?: CountType },\n>(\n  rowA: T,\n  rowB: T\n): number => {\n  const aExist: boolean = rowA.YouTubeSubscriber !== undefined;\n  const bExist: boolean = rowB.YouTubeSubscriber !== undefined;\n\n  if (!aExist && !bExist) return 0;\n\n  if (!bExist) return -1;\n\n  if (!aExist) return 1;\n\n  // This line does nothing but to stop TypeScript from\n  // whining about YouTubeSubscriber might be undefined\n  if (!(rowA.YouTubeSubscriber && rowB.YouTubeSubscriber)) return 0;\n\n  return CountTypeCompare(rowA.YouTubeSubscriber, rowB.YouTubeSubscriber) * -1;\n};\n\nconst TwitchFollowerCountDescendingSort = <\n  T extends { TwitchFollower?: CountType },\n>(\n  rowA: T,\n  rowB: T\n): number => {\n  const aExist: boolean = rowA.TwitchFollower !== undefined;\n  const bExist: boolean = rowB.TwitchFollower !== undefined;\n\n  if (!aExist && !bExist) return 0;\n\n  if (!bExist) return -1;\n\n  if (!aExist) return 1;\n\n  // This line does nothing but to stop TypeScript from\n  // whining about TwitchFollower might be undefined\n  if (!(rowA.TwitchFollower && rowB.TwitchFollower)) return 0;\n\n  return CountTypeCompare(rowA.TwitchFollower, rowB.TwitchFollower) * -1;\n};\n\nexport const YouTubeSubscriberCountPlusTwitchFollowerCountAscendingSort = <\n  T extends { YouTubeSubscriber?: CountType; TwitchFollower?: CountType },\n>(\n  rowA: T,\n  rowB: T\n): number => {\n  const aCount =\n    (GetCount(rowA.YouTubeSubscriber) ?? 0) +\n    (GetCount(rowA.TwitchFollower) ?? 0);\n  const bCount =\n    (GetCount(rowB.YouTubeSubscriber) ?? 0) +\n    (GetCount(rowB.TwitchFollower) ?? 0);\n\n  if (aCount > bCount) return 1;\n\n  if (bCount > aCount) return -1;\n\n  return 0;\n};\n\n// TODO: Merge the logic of descending and ascending functions\nexport const YouTubeSubscriberCountPlusTwitchFollowerCountDescendingSort = <\n  T extends { YouTubeSubscriber?: CountType; TwitchFollower?: CountType },\n>(\n  rowA: T,\n  rowB: T\n): number =>\n  YouTubeSubscriberCountPlusTwitchFollowerCountAscendingSort(rowA, rowB) * -1;\n\nexport const SubscriberCountDescendingSort = (sortMethod: SortMethod) => {\n  switch (sortMethod) {\n    case 'YouTube+Twitch':\n      return YouTubeSubscriberCountPlusTwitchFollowerCountDescendingSort;\n    case 'YouTube':\n      return YouTubeSubscriberCountDescendingSort;\n    case 'Twitch':\n      return TwitchFollowerCountDescendingSort;\n  }\n};\n","import {\n  getDateAfterTimezoneAdjustment,\n  getISODateString,\n} from '../utils/DateTimeUtils';\nimport { tryParseInteger } from '../utils/NumberUtils';\n\nconst DEFAULT_TIMEZONE_DIFF_IN_HOUR = 8;\n\nexport const TIMEZONE_DIFF_IN_HOUR: number = tryParseInteger(\n  process.env.TIMEZONE_DIFF_IN_HOUR,\n  DEFAULT_TIMEZONE_DIFF_IN_HOUR\n);\n\nexport const TODAY_DATE: Date = getDateAfterTimezoneAdjustment(\n  new Date(),\n  TIMEZONE_DIFF_IN_HOUR\n);\n\nexport const TODAY_DATE_STRING: string = getISODateString(\n  TODAY_DATE,\n  TIMEZONE_DIFF_IN_HOUR\n);\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ProfileImagePopup from '../components/ProfileImagePopup';\n\nexport interface NameColumnRowData {\n  id: string;\n  imgUrl?: string;\n  name: string;\n}\n\nexport const NameColumn = <\n  RowData extends NameColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.displayName\">Name</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <ProfileImagePopup\n        VTuberId={row.id}\n        imgUrl={row.imgUrl}\n        name={row.name}\n      />\n    ),\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GetRoute } from '../utils/TypeSafeRouting';\n\nexport interface GroupColumnRowData {\n  group?: string;\n}\n\nexport const GroupColumn = <\n  RowData extends GroupColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.group\">Group</Text>,\n    cell: (row: RowData): h.JSX.Element | null =>\n      row.group !== undefined ? (\n        <a href={GetRoute({ type: 'group', name: row.group })}>{row.group}</a>\n      ) : null,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"noWrap\":\"noWrap__BzT1O\",\"YouTubeRed\":\"YouTubeRed__1JOkf\",\"TwitchPurple\":\"TwitchPurple__qQQlw\"};","import { Fragment, FunctionalComponent, h } from 'preact';\nimport { CountType } from '../../types/Common/CountType';\nimport CountFragment from '../CountFragment';\nimport style from './style.module.css';\n\nexport interface YouTubeTwitchCountProps {\n  YouTubeCount?: CountType;\n  TwitchCount?: CountType;\n}\n\nconst YouTubeTwitchCount: FunctionalComponent<YouTubeTwitchCountProps> = (\n  props: YouTubeTwitchCountProps\n): h.JSX.Element => {\n  const YouTubeSpan = (YouTubeCount: CountType): h.JSX.Element => {\n    return (\n      <span class={`${style.noWrap} ${style.YouTubeRed}`}>\n        <CountFragment countType={YouTubeCount} />\n      </span>\n    );\n  };\n\n  const TwitchSpan = (TwitchCount: CountType): h.JSX.Element => {\n    return (\n      <span class={`${style.noWrap} ${style.TwitchPurple}`}>\n        <CountFragment countType={TwitchCount} />\n      </span>\n    );\n  };\n\n  const CountSpan = (props: YouTubeTwitchCountProps): h.JSX.Element | null => {\n    if (props.YouTubeCount && props.TwitchCount) {\n      return (\n        <>\n          {YouTubeSpan(props.YouTubeCount)}\n          {/* extra white space. will be rendered as \" + \" */}\n          <span class={style.noWrap}>&nbsp;+&nbsp;</span>\n          {TwitchSpan(props.TwitchCount)}\n        </>\n      );\n    }\n\n    if (props.YouTubeCount) {\n      return <>{YouTubeSpan(props.YouTubeCount)}</>;\n    }\n\n    if (props.TwitchCount) {\n      return <>{TwitchSpan(props.TwitchCount)}</>;\n    }\n\n    return null;\n  };\n\n  return (\n    <Fragment>\n      <CountSpan {...props} />\n    </Fragment>\n  );\n};\n\nexport default YouTubeTwitchCount;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__vr1DG\",\"profileImageFlex\":\"profileImageFlex__4VERG\",\"nameFlex\":\"nameFlex__WFOO9\"};","import { FunctionalComponent, h } from 'preact';\nimport ProfileImage from '../ProfileImage';\nimport style from './style.module.css';\n\nexport interface ProfileImagePopupProps {\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n}\n\nconst ProfileImagePopup: FunctionalComponent<ProfileImagePopupProps> = (\n  props: ProfileImagePopupProps\n): h.JSX.Element => {\n  return (\n    <div class={style.container}>\n      <div class={style.profileImageFlex}>\n        <ProfileImage\n          VTuberId={props.VTuberId}\n          imgUrl={props.imgUrl}\n          clickBehavior=\"popup\"\n        />\n      </div>\n      <span class={style.nameFlex}>{props.name}</span>\n    </div>\n  );\n};\n\nexport default ProfileImagePopup;\n","import { GrowthRecordType } from '../types/Common/GrowthData';\n\nexport const PrependSign = (value: number): string => {\n  if (value > 0) return `+${value}`;\n  if (value < 0) return `${value}`;\n\n  return '0';\n};\n\nconst valueToPercentString = (value: number): string =>\n  (value * 100).toFixed(2);\n\nexport const GrowthDisplayDataToString = (\n  e: { diff: number; recordType: GrowthRecordType; percentage?: number },\n  tableTranslation: { noRecord: string; atLeast: string }\n): string => {\n  if (e.percentage) {\n    switch (e.recordType) {\n      case 'none':\n        return tableTranslation.noRecord;\n      case 'partial':\n        return `${tableTranslation.atLeast} ${PrependSign(\n          e.diff\n        )} (${valueToPercentString(e.percentage as number)}%)`;\n      case 'full':\n        return `${PrependSign(e.diff)} (${valueToPercentString(\n          e.percentage\n        )}%)`;\n    }\n  }\n\n  switch (e.recordType) {\n    case 'none':\n      return tableTranslation.noRecord;\n    case 'partial':\n      return `${tableTranslation.atLeast} ${PrependSign(e.diff)}`;\n    case 'full':\n      return `${PrependSign(e.diff)}`;\n  }\n};\n\nexport const tryParseInteger = (\n  str: string | undefined,\n  defaultValue: number\n): number => {\n  if (str !== undefined) {\n    const parsedVal = parseInt(str, 10);\n    if (isNaN(parsedVal) === false) {\n      return parsedVal;\n    }\n  }\n\n  return defaultValue;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tipText\":\"tipText__4DHD3\"};","import { h } from 'preact';\nimport style from './style.module.css';\nimport dropDownStyle from '../../style/DropDownStyle.module.css';\n\nexport interface DropDownListProps<ValueType> {\n  tipText?: string;\n  optionValue?: Array<{ option: any; value: ValueType }>;\n  value?: ValueType;\n  onChange?: (e: unknown) => unknown;\n}\n\nfunction DropDownList<ValueType extends string | number>(\n  props: DropDownListProps<ValueType>\n): h.JSX.Element {\n  return (\n    <div>\n      <span class={style.tipText}>{props.tipText}</span>\n      <select\n        class={dropDownStyle.dropDown}\n        value={props.value}\n        onChange={props.onChange}\n      >\n        {props.optionValue !== undefined\n          ? props.optionValue.map((e) => (\n              <option key={e.value} value={e.value}>\n                {e.option}\n              </option>\n            ))\n          : null}\n      </select>\n    </div>\n  );\n}\n\nexport default DropDownList;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport YouTubeTwitchCount from '../components/YouTubeTwitchCount';\nimport { CountType } from '../types/Common/CountType';\n\nexport interface YouTubeTwitchCountColumnRowData {\n  YouTubeSubscriber?: CountType;\n  TwitchFollower?: CountType;\n}\n\nexport const YouTubeTwitchCountColumn = <\n  RowData extends YouTubeTwitchCountColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: (\n      <Text id=\"table.YouTubeTwitchCount\">\n        YouTube Subscribers + Twitch Followers\n      </Text>\n    ),\n    cell: (row: RowData): JSX.Element => (\n      <YouTubeTwitchCount\n        YouTubeCount={row.YouTubeSubscriber}\n        TwitchCount={row.TwitchFollower}\n      />\n    ),\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\n\nexport interface NationalityColumnRowData {\n  nationality?: string;\n}\n\nexport const NationalityColumn = <\n  RowData extends NationalityColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.nationality\">Nationality</Text>,\n    selector: (row: RowData): string => row.nationality ?? '',\n  };\n};\n","export function filterFunction<\n  TargetType extends object,\n  FilterModel extends object,\n>(targetModel: TargetType, filterModel: FilterModel): boolean {\n  const result = Object.entries(filterModel).map((entry) => {\n    const keyTyped = entry[0] as keyof typeof targetModel;\n    const target = targetModel[keyTyped] as string | undefined | null;\n\n    const filter = entry[1] as string | null;\n\n    // if there is no filter applied\n    if (filter === null) {\n      return true;\n    }\n\n    // if target doesn't exist\n    if (target === null || target === undefined || target === '') {\n      return false;\n    }\n\n    return target.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  const someFilterNotMatch = result.some((e) => e === false);\n\n  return !someFilterNotMatch;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__1lsi6\",\"textField\":\"textField__bDpXR\",\"button\":\"button__maFzS\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface SearchBarProps {\n  placeholderText?: string;\n  filterText: string | null;\n  onFilter: (e: unknown) => unknown;\n  onClear: () => unknown;\n}\n\nconst SearchBar: FunctionalComponent<SearchBarProps> = (\n  props: SearchBarProps\n): h.JSX.Element => (\n  <div class={style.container}>\n    <input\n      type=\"text\"\n      class={style.textField}\n      placeholder={props.placeholderText}\n      value={props.filterText ?? ''}\n      onChange={props.onFilter}\n    />\n\n    <button type=\"button\" class={style.button} onClick={props.onClear}>\n      X\n    </button>\n  </div>\n);\n\nexport default SearchBar;\n","import { Activity } from '../types/Common/Activity';\nimport { DebutInfo } from '../types/DebutInfo';\n\nconst ActivityRowStyles = [\n  {\n    when: (row: { activity: Activity }): boolean =>\n      row.activity === 'preparing',\n    style: {\n      backgroundColor: 'rgba(141, 209, 157, 0.9)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity; debutInfo?: DebutInfo }): boolean =>\n      row.activity === 'active' &&\n      row.debutInfo !== undefined &&\n      row.debutInfo.hasDebutInfo === true &&\n      row.debutInfo.isRecentlyDebut === true,\n    style: {\n      backgroundColor: 'rgba(156, 205, 196, 0.5)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity }): boolean => row.activity === 'graduate',\n    style: {\n      backgroundColor: 'rgba(123, 123, 123, 0.9)',\n      color: 'white',\n      '&:hover': {\n        cursor: 'not-allowed',\n      },\n    },\n  },\n];\n\nexport default ActivityRowStyles;\n","import { TableProps } from 'react-data-table-component';\nimport ActivityRowStyles from '../style/ActivityRowStyles';\nimport { Activity } from '../types/Common/Activity';\n\n// columns and data are empty, user should fill them when using DefaultDataTableProps\nconst DefaultDataTableProps = <\n  T extends { activity: Activity },\n>(): TableProps<T> => ({\n  columns: [],\n  data: [],\n  conditionalRowStyles: ActivityRowStyles,\n});\n\nexport default DefaultDataTableProps;\n","import { Fragment, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { getNationalityModifierState } from '../global/DisplayNationality';\nimport { NationalityModifier } from '../types/Common/NationalityModifier';\n\nexport const GetCurrentNationalitySpan = (): JSX.Element | null => {\n  const nationalityModifier: NationalityModifier =\n    getNationalityModifierState();\n\n  switch (nationalityModifier) {\n    case 'TW':\n    case 'HK':\n    case 'MY':\n      return (\n        <>\n          {' '}\n          (<Text id=\"text.onlyShowing\">only showing </Text>\n          <Text id={`nationalityTitle.${nationalityModifier}`}>\n            placeholder\n          </Text>{' '}\n          VTuber)\n        </>\n      );\n    case 'all':\n    default:\n      return null;\n  }\n};\n","import * as Api from '../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useMemo, useEffect } from 'preact/hooks';\nimport DataTable, { TableColumn } from 'react-data-table-component';\nimport DropDownList from '../../components/DropDownList';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport { GroupColumn } from '../../tableTypes/GroupColumn';\nimport { NameColumn } from '../../tableTypes/NameColumn';\nimport { NationalityColumn } from '../../tableTypes/NationalityColumn';\nimport { PopularVideoColumn } from '../../tableTypes/PopularVideoColumn';\nimport { YouTubeTwitchCountColumn } from '../../tableTypes/YouTubeTwitchCountColumn';\nimport { VTuberDisplayData } from '../../types/TableDisplayData/VTuberDisplayData';\nimport DefaultDataTableProps from '../../utils/DefaultDataTableProps';\nimport { GetCurrentNationalitySpan } from '../../utils/NationalityUtils';\nimport {\n  SortMethod,\n  SubscriberCountDescendingSort,\n} from '../../utils/sort/SubscriberCountSort';\nimport { VTuberBasicToDisplay } from '../../utils/transform/BasicTransform';\nimport tableStyle from '../../style/DataTableStyle.module.css';\nimport ActivityRowStyles from '../../style/ActivityRowStyles';\nimport FilterWindow from '../../components/FilterWindow';\nimport { filterFunction } from '../../utils/FilterModelHelper';\nimport { VTuberDisplayDataFilterModel } from '../../types/FilterType/VTuberDisplayDataFilterModel';\n\nexport interface AllVTubersPageProps {\n  dictionary: Dictionary;\n}\n\nconst AllVTubersPage: FunctionalComponent<AllVTubersPageProps> = (\n  props: AllVTubersPageProps\n) => {\n  document.title = `${props.dictionary.header.allVTubers} | ${props.dictionary.header.title}`;\n\n  const [sortMethod, setSortMethod] = useState<SortMethod>('YouTube+Twitch');\n\n  const columns: Array<TableColumn<VTuberDisplayData>> = [\n    NameColumn(),\n    YouTubeTwitchCountColumn(),\n    PopularVideoColumn(),\n    GroupColumn(),\n    NationalityColumn(),\n  ];\n\n  // search filter\n  const [data, setData] = useState<Array<VTuberDisplayData>>([]);\n  const [filterModel, setFilterModel] = useState<VTuberDisplayDataFilterModel>({\n    name: null,\n    YouTubeId: null,\n    TwitchId: null,\n    group: null,\n    nationality: null,\n  });\n  const filteredData = data\n    .filter((e) => filterFunction(e, filterModel))\n    .sort(SubscriberCountDescendingSort(sortMethod));\n\n  const searchBarComponent = useMemo(() => {\n    const optionValue: Array<{\n      option: h.JSX.Element;\n      value: SortMethod;\n    }> = [\n      {\n        option: (\n          <Text id=\"table.YouTubeTwitchCount\">\n            YouTube Subscribers + Twitch Followers\n          </Text>\n        ),\n        value: 'YouTube+Twitch',\n      },\n      {\n        option: (\n          <Text id=\"table.YouTubeSubscriberCount\">YouTube Subscribers</Text>\n        ),\n        value: 'YouTube',\n      },\n      {\n        option: <Text id=\"table.TwitchFollowerCount\">Twitch Followers</Text>,\n        value: 'Twitch',\n      },\n    ];\n\n    const handleFilterWindow = (\n      filterModel: VTuberDisplayDataFilterModel\n    ): void => {\n      setFilterModel(filterModel);\n    };\n\n    const fieldPlaceHolderMappings: Map<string, string> = new Map<\n      string,\n      string\n    >([\n      ['name', props.dictionary.table.searchByDisplayName],\n      ['YouTubeId', props.dictionary.table.searchByYouTubeId],\n      ['TwitchId', props.dictionary.table.searchByTwitchId],\n      ['group', props.dictionary.table.searchByGroup],\n      ['nationality', props.dictionary.table.searchByNationality],\n    ]);\n\n    return (\n      <div class={tableStyle.searchBarGroup}>\n        <DropDownList\n          tipText={props.dictionary.table.sortingMethod}\n          value={sortMethod}\n          optionValue={optionValue}\n          onChange={(e: any) => setSortMethod(e.target.value)}\n        />\n        <FilterWindow\n          filterModel={filterModel}\n          fieldPlaceHolderMappings={fieldPlaceHolderMappings}\n          openSearchText={props.dictionary.text.openSearch}\n          closeSearchText={props.dictionary.text.closeSearch}\n          onChange={handleFilterWindow}\n        />\n      </div>\n    );\n  }, [filterModel, props.dictionary]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getVTubers('all').then((res) => {\n      setData(res.data.VTubers.map((e) => VTuberBasicToDisplay(e)));\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h1>\n        <Text id=\"header.allVTubers\">All VTubers</Text>\n        {GetCurrentNationalitySpan()}\n      </h1>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={filteredData}\n        conditionalRowStyles={ActivityRowStyles}\n        fixedHeader\n        pagination\n        paginationComponentOptions={props.dictionary.table.paginationOptions}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n        subHeader\n        subHeaderComponent={searchBarComponent}\n      />\n    </>\n  );\n};\n\nexport default AllVTubersPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"floating\":\"floating__uhu4Y\",\"floatingHidden\":\"floatingHidden__mvSUQ\",\"floatingShowing\":\"floatingShowing__nwzm5\"};","import { h } from 'preact';\nimport { useState } from 'preact/hooks';\nimport { trimOrNullOnEmpty } from '../../utils/StringUtils';\nimport SearchBar from '../SearchBar';\nimport style from './style.module.css';\n\nexport interface FilterWindowProps<FilterModel extends object> {\n  filterModel: FilterModel;\n  fieldPlaceHolderMappings: Map<string, string>;\n  openSearchText: string;\n  closeSearchText: string;\n  onChange?: (e: FilterModel) => void;\n}\n\nfunction FilterWindow<FilterModel extends object>(\n  props: FilterWindowProps<FilterModel>\n): JSX.Element {\n  const [isOpened, setIsOpened] = useState<boolean>(false);\n  const [filter, setFilter] = useState<FilterModel>(props.filterModel);\n\n  function handleOnChange(e: FilterModel): void {\n    if (props.onChange != null) {\n      props.onChange(e);\n    }\n  }\n\n  const createSearchBar = (key: string): JSX.Element => {\n    {\n      const keyTyped = key as keyof typeof filter;\n\n      const handleOnFilterChange = (e: string | null): void => {\n        const nullableString: string | null = trimOrNullOnEmpty(e);\n\n        setFilter({ ...filter, [keyTyped]: nullableString });\n        handleOnChange({ ...filter, [keyTyped]: nullableString });\n      };\n\n      return (\n        <SearchBar\n          key={key}\n          placeholderText={props.fieldPlaceHolderMappings.get(\n            keyTyped as string\n          )}\n          filterText={filter[keyTyped] as string | null}\n          onFilter={(e: any): void => handleOnFilterChange(e.target.value)}\n          onClear={(): void => handleOnFilterChange(null)}\n        />\n      );\n    }\n  };\n\n  const fields: Array<JSX.Element> = Object.keys(props.filterModel).map((key) =>\n    createSearchBar(key)\n  );\n\n  const ToggleButton = (): JSX.Element => (\n    <input\n      type=\"button\"\n      value={isOpened === true ? props.closeSearchText : props.openSearchText}\n      onClick={(): void => setIsOpened(!isOpened)}\n    />\n  );\n\n  const toggleFloatingClass = (): string => {\n    if (isOpened) return `${style.floating} ${style.floatingShowing}`;\n    else return `${style.floating} ${style.floatingHidden}`;\n  };\n\n  return (\n    <div>\n      <ToggleButton />\n      {isOpened === true ? (\n        <div class={toggleFloatingClass()}>{fields}</div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default FilterWindow;\n","export function trimOrNullOnEmpty(\n  value: string | null | undefined\n): string | null {\n  if (value === null || value === undefined) return null;\n\n  const trimmed = value.trim();\n\n  if (trimmed === '') return null;\n\n  return trimmed;\n}\n","/* eslint-disable no-fallthrough */\nimport { CountType } from '../types/Common/CountType';\n\nexport const GetCount = (countType?: CountType): number | null => {\n  if (countType === undefined) return null;\n\n  switch (countType.tag) {\n    case 'has':\n      return countType.count;\n    case 'hidden':\n    case 'no':\n      return null;\n  }\n};\n\n// Sort order: no < hidden < 100 < 300\nexport const CountTypeCompare = (a: CountType, b: CountType): number => {\n  switch (a.tag) {\n    case 'has': {\n      switch (b.tag) {\n        case 'has':\n          return a.count - b.count;\n        case 'hidden':\n          return 1;\n        case 'no':\n          return 1;\n      }\n    }\n\n    case 'hidden': {\n      switch (b.tag) {\n        case 'has':\n          return -1;\n        case 'hidden':\n          return 0;\n        case 'no':\n          return 1;\n      }\n    }\n\n    case 'no': {\n      switch (b.tag) {\n        case 'has':\n          return -1;\n        case 'hidden':\n          return -1;\n        case 'no':\n          return 0;\n      }\n    }\n  }\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ShowVideoButton from '../components/ShowVideoButton';\nimport { VideoInfo } from '../types/Common/VideoInfo';\n\nexport interface PopularVideoColumnRowData {\n  popularVideo?: VideoInfo;\n}\n\nexport const PopularVideoColumn = <\n  RowData extends PopularVideoColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularVideo\">Popular Video</Text>,\n    cell: (row: RowData): JSX.Element | null =>\n      row.popularVideo !== undefined ? (\n        <ShowVideoButton popularVideo={row.popularVideo} />\n      ) : null,\n  };\n};\n","import { VTuberData } from '../../types/ApiData/VTuberData';\nimport { VTuberDisplayData } from '../../types/TableDisplayData/VTuberDisplayData';\nimport { maybeDebutStringToDebutInfo } from './DebutStringToDebutInfo';\n\nexport const VTuberBasicToDisplay = (e: VTuberData): VTuberDisplayData => ({\n  id: e.id,\n  activity: e.activity,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  YouTubeId: e.YouTube?.id,\n  YouTubeSubscriber: e.YouTube?.subscriber,\n  TwitchId: e.Twitch?.id,\n  TwitchFollower: e.Twitch?.follower,\n  popularVideo: e.popularVideo,\n  group: e.group,\n  nationality: e.nationality,\n  debutInfo: maybeDebutStringToDebutInfo(e.debutDate),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"searchBarGroup\":\"R1T8+hwxvBovrVdGHizUFw==\"};"],"sourceRoot":""}