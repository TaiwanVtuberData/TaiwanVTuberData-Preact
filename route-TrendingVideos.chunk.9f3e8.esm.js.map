{"version":3,"sources":["webpack:///./tableTypes/VideoColumn.tsx","webpack:///./routes/TrendingVideos/index.tsx","webpack:///./tableTypes/NameColumn.tsx","webpack:///./components/ProfileImagePopup/style.module.css","webpack:///./components/ProfileImagePopup/index.tsx","webpack:///./components/DropDownList/style.module.css","webpack:///./components/DropDownList/index.tsx","webpack:///./utils/transform/PopularVideoTransform.ts","webpack:///./utils/FilterModelHelper.ts","webpack:///./components/SearchBar/style.module.css","webpack:///./components/SearchBar/index.tsx","webpack:///./style/ActivityRowStyles.ts","webpack:///./utils/DefaultDataTableProps.ts","webpack:///./utils/NationalityUtils.tsx","webpack:///./components/FilterWindow/style.module.css","webpack:///./components/FilterWindow/index.tsx","webpack:///./utils/StringUtils.ts","webpack:///./tableTypes/RankingColumn.tsx","webpack:///./style/DataTableStyle.module.css"],"names":["VideoColumn","name","id","cell","row","VideoLink","thumbnailUrl","videoUrl","TrendingVideosPage","props","document","title","dictionary","header","trendingVideos","columns","RankingColumn","sortable","width","NameColumn","selector","wrap","viewCount","right","getFormattedDateTime","uploadTime","data","setData","useState","filterModel","setFilterModel","filteredData","filter","e","filterFunction","searchBarComponent","useMemo","optionValue","option","value","fieldPlaceHolderMappings","Map","table","searchByDisplayName","searchByTitle","class","tableStyle","searchBarGroup","tipText","options","modifier","onChange","GoToPage","type","viewCountSortOrder","target","openSearchText","text","openSearch","closeSearchText","closeSearch","pending","setPending","useEffect","async","Api","then","res","videos","map","sort","a","b","index","PopularVideoToDisplayData","getVideos","GetCurrentNationalitySpan","DefaultDataTableProps","customStyles","style","maxHeight","rows","minHeight","headCells","paddingLeft","paddingRight","cells","fixedHeader","pagination","paginationComponentOptions","paginationOptions","progressComponent","progressPending","subHeader","subHeaderComponent","VTuberId","imgUrl","ProfileImagePopup","ProfileImage","clickBehavior","DropDownList","dropDownStyle","dropDown","undefined","key","ranking","Date","targetModel","Object","entries","entry","toLowerCase","includes","some","SearchBar","placeholder","placeholderText","filterText","onFilter","onClick","onClear","ActivityRowStyles","when","activity","backgroundColor","cursor","color","conditionalRowStyles","nationalityModifier","getNationalityModifierState","FilterWindow","isOpened","setIsOpened","setFilter","createSearchBar","keyTyped","handleOnFilterChange","nullableString","trimmed","trim","trimOrNullOnEmpty","handleOnChange","get","fields","keys"],"mappings":"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","file":"route-TrendingVideos.chunk.9f3e8.esm.js","sourcesContent":["import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport VideoLink from '../components/VideoLink';\n\nexport interface VideoColumnRowData {\n  thumbnailUrl: string;\n  videoUrl: string;\n}\n\nexport const VideoColumn = <\n  RowData extends VideoColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.video\">Video</Text>,\n    cell: (row: RowData): JSX.Element | null =>\n      VideoLink({\n        thumbnailUrl: row.thumbnailUrl,\n        videoUrl: row.videoUrl,\n      }),\n  };\n};\n","import * as Api from '../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useMemo, useEffect } from 'preact/hooks';\nimport DataTable, {\n  TableColumn,\n  TableStyles,\n} from 'react-data-table-component';\nimport DropDownList from '../../components/DropDownList';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport { NameColumn } from '../../tableTypes/NameColumn';\nimport { VideoColumn } from '../../tableTypes/VideoColumn';\nimport { TrendingVideosModifier } from '../../types/ApiTypes';\nimport { VideoPopularityDisplayData } from '../../types/TableDisplayData/VideoPopularityDisplayData';\nimport { getFormattedDateTime } from '../../utils/DateTimeUtils';\nimport DefaultDataTableProps from '../../utils/DefaultDataTableProps';\nimport { GetCurrentNationalitySpan } from '../../utils/NationalityUtils';\nimport { PopularVideoToDisplayData } from '../../utils/transform/PopularVideoTransform';\nimport { GoToPage } from '../../utils/TypeSafeRouting';\nimport tableStyle from '../../style/DataTableStyle.module.css';\nimport { RankingColumn } from '../../tableTypes/RankingColumn';\nimport FilterWindow from '../../components/FilterWindow';\nimport { VideoPopularityDisplayDataFilterModel } from '../../types/FilterType/VideoPopularityDisplayDataFilterModel';\nimport { filterFunction } from '../../utils/FilterModelHelper';\n\nexport interface TrendingVideosPageProps {\n  dictionary: Dictionary;\n  modifier: TrendingVideosModifier;\n}\n\nconst TrendingVideosPage: FunctionalComponent<TrendingVideosPageProps> = (\n  props: TrendingVideosPageProps\n) => {\n  document.title = `${props.dictionary.header.trendingVideos} | ${props.dictionary.header.title}`;\n\n  const columns: Array<TableColumn<VideoPopularityDisplayData>> = [\n    {\n      ...RankingColumn(),\n      sortable: true,\n      width: '40px',\n    },\n    {\n      ...NameColumn(),\n      width: '200px',\n    },\n    {\n      name: <Text id=\"table.title\">Title</Text>,\n      selector: (row: { title: string }): string => row.title,\n      wrap: true,\n    },\n    {\n      ...VideoColumn(),\n      width: '200px',\n    },\n    {\n      name: <Text id=\"table.viewCount\">View Count</Text>,\n      selector: (row: { viewCount: number }): number => row.viewCount,\n      right: true,\n      sortable: true,\n      width: '80px',\n    },\n    {\n      name: <Text id=\"table.uploadTime\">Upload Time</Text>,\n      selector: (row: { uploadTime: Date }): string =>\n        getFormattedDateTime(row.uploadTime),\n      sortable: true,\n      width: '175px',\n    },\n  ];\n\n  // search filter\n  const [data, setData] = useState<Array<VideoPopularityDisplayData>>([]);\n  const [filterModel, setFilterModel] =\n    useState<VideoPopularityDisplayDataFilterModel>({\n      name: null,\n      title: null,\n    });\n  const filteredData = data.filter((e) => filterFunction(e, filterModel));\n\n  const searchBarComponent = useMemo(() => {\n    const optionValue: Array<{\n      option: h.JSX.Element;\n      value: TrendingVideosModifier;\n    }> = [\n      {\n        option: <Text id=\"table.noDuplicate\">One video per VTuber</Text>,\n        value: 'no-duplicate',\n      },\n      {\n        option: <Text id=\"table.allVideos\">All videos</Text>,\n        value: 'all',\n      },\n    ];\n\n    const handleFilterWindow = (\n      filterModel: VideoPopularityDisplayDataFilterModel\n    ): void => {\n      setFilterModel(filterModel);\n    };\n\n    const fieldPlaceHolderMappings: Map<string, string> = new Map<\n      string,\n      string\n    >([\n      ['name', props.dictionary.table.searchByDisplayName],\n      ['title', props.dictionary.table.searchByTitle],\n    ]);\n\n    return (\n      <div class={tableStyle.searchBarGroup}>\n        <DropDownList\n          tipText={props.dictionary.table.options}\n          value={props.modifier}\n          optionValue={optionValue}\n          onChange={(e: any) =>\n            GoToPage({\n              type: 'trending-videos',\n              viewCountSortOrder: e.target.value,\n            })\n          }\n        />\n        <FilterWindow\n          filterModel={filterModel}\n          fieldPlaceHolderMappings={fieldPlaceHolderMappings}\n          openSearchText={props.dictionary.text.openSearch}\n          closeSearchText={props.dictionary.text.closeSearch}\n          onChange={handleFilterWindow}\n        />\n      </div>\n    );\n  }, [filterModel, props.modifier, props.dictionary]);\n  const [pending, setPending] = useState(true);\n\n  const getVideos = async (): Promise<void> => {\n    await Api.getTrendingVideos(props.modifier).then((res) => {\n      // thanks to JavaScript sorting being mutable, I have to convert ReadonlyArray to Array first\n      setData(\n        res.data.videos\n          .map((e) => e)\n          .sort((a, b) => b.viewCount - a.viewCount)\n          .map((e, index) => PopularVideoToDisplayData(e, index + 1))\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVideos();\n  }, [props.modifier]);\n\n  const customStyles: TableStyles = {\n    table: {\n      style: {\n        maxHeight: '80vh',\n      },\n    },\n    rows: {\n      style: {\n        minHeight: '36px', // override the row height\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '5px', // override the cell padding for head cells\n        paddingRight: '5px',\n      },\n    },\n    cells: {\n      style: {\n        paddingLeft: '5px', // override the cell padding for data cells\n        paddingRight: '5px',\n      },\n    },\n  };\n\n  return (\n    <>\n      <h1>\n        <Text id=\"header.trendingVideos\">Trending Videos</Text>\n        {GetCurrentNationalitySpan()}\n      </h1>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={filteredData}\n        customStyles={customStyles}\n        fixedHeader\n        pagination\n        paginationComponentOptions={props.dictionary.table.paginationOptions}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n        subHeader\n        subHeaderComponent={searchBarComponent}\n      />\n    </>\n  );\n};\n\nexport default TrendingVideosPage;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ProfileImagePopup from '../components/ProfileImagePopup';\n\nexport interface NameColumnRowData {\n  id: string;\n  imgUrl?: string;\n  name: string;\n}\n\nexport const NameColumn = <\n  RowData extends NameColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.displayName\">Name</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <ProfileImagePopup\n        VTuberId={row.id}\n        imgUrl={row.imgUrl}\n        name={row.name}\n      />\n    ),\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__vr1DG\",\"profileImageFlex\":\"profileImageFlex__4VERG\",\"nameFlex\":\"nameFlex__WFOO9\"};","import { FunctionalComponent, h } from 'preact';\nimport ProfileImage from '../ProfileImage';\nimport style from './style.module.css';\n\nexport interface ProfileImagePopupProps {\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n}\n\nconst ProfileImagePopup: FunctionalComponent<ProfileImagePopupProps> = (\n  props: ProfileImagePopupProps\n): h.JSX.Element => {\n  return (\n    <div class={style.container}>\n      <div class={style.profileImageFlex}>\n        <ProfileImage\n          VTuberId={props.VTuberId}\n          imgUrl={props.imgUrl}\n          clickBehavior=\"popup\"\n        />\n      </div>\n      <span class={style.nameFlex}>{props.name}</span>\n    </div>\n  );\n};\n\nexport default ProfileImagePopup;\n","// extracted by mini-css-extract-plugin\nexport default {\"tipText\":\"tipText__4DHD3\"};","import { h } from 'preact';\nimport style from './style.module.css';\nimport dropDownStyle from '../../style/DropDownStyle.module.css';\n\nexport interface DropDownListProps<ValueType> {\n  tipText?: string;\n  optionValue?: Array<{ option: any; value: ValueType }>;\n  value?: ValueType;\n  onChange?: (e: unknown) => unknown;\n}\n\nfunction DropDownList<ValueType extends string | number>(\n  props: DropDownListProps<ValueType>\n): h.JSX.Element {\n  return (\n    <div>\n      <span class={style.tipText}>{props.tipText}</span>\n      <select\n        class={dropDownStyle.dropDown}\n        value={props.value}\n        onChange={props.onChange}\n      >\n        {props.optionValue !== undefined\n          ? props.optionValue.map((e) => (\n              <option key={e.value} value={e.value}>\n                {e.option}\n              </option>\n            ))\n          : null}\n      </select>\n    </div>\n  );\n}\n\nexport default DropDownList;\n","import { VideoPopularityData } from '../../types/ApiData/VideoPopularityData';\nimport { VideoPopularityDisplayData } from '../../types/TableDisplayData/VideoPopularityDisplayData';\n\nexport const PopularVideoToDisplayData = (\n  e: VideoPopularityData,\n  ranking: number\n): VideoPopularityDisplayData => ({\n  id: e.id,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  title: e.title,\n  thumbnailUrl: e.thumbnailUrl,\n  videoUrl: e.videoUrl,\n  viewCount: e.viewCount,\n  uploadTime: new Date(e.uploadTime),\n  ranking: ranking,\n});\n","export function filterFunction<\n  TargetType extends object,\n  FilterModel extends object\n>(targetModel: TargetType, filterModel: FilterModel): boolean {\n  const result = Object.entries(filterModel).map((entry) => {\n    const keyTyped = entry[0] as keyof typeof targetModel;\n    const target = targetModel[keyTyped] as string | undefined | null;\n\n    const filter = entry[1] as string | null;\n\n    // if there is no filter applied\n    if (filter === null) {\n      return true;\n    }\n\n    // if target doesn't exist\n    if (target === null || target === undefined || target === '') {\n      return false;\n    }\n\n    return target.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  const someFilterNotMatch = result.some((e) => e === false);\n\n  return !someFilterNotMatch;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__1lsi6\",\"textField\":\"textField__bDpXR\",\"button\":\"button__maFzS\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface SearchBarProps {\n  placeholderText?: string;\n  filterText: string | null;\n  onFilter: (e: unknown) => unknown;\n  onClear: () => unknown;\n}\n\nconst SearchBar: FunctionalComponent<SearchBarProps> = (\n  props: SearchBarProps\n): h.JSX.Element => (\n  <div class={style.container}>\n    <input\n      type=\"text\"\n      class={style.textField}\n      placeholder={props.placeholderText}\n      value={props.filterText ?? ''}\n      onChange={props.onFilter}\n    />\n\n    <button type=\"button\" class={style.button} onClick={props.onClear}>\n      X\n    </button>\n  </div>\n);\n\nexport default SearchBar;\n","import { Activity } from '../types/Common/Activity';\n\nconst ActivityRowStyles = [\n  {\n    when: (row: { activity: Activity }): boolean =>\n      row.activity === 'preparing',\n    style: {\n      backgroundColor: 'rgba(141, 209, 157, 0.9)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity }): boolean => row.activity === 'graduate',\n    style: {\n      backgroundColor: 'rgba(123, 123, 123, 0.9)',\n      color: 'white',\n      '&:hover': {\n        cursor: 'not-allowed',\n      },\n    },\n  },\n];\n\nexport default ActivityRowStyles;\n","import { TableProps } from 'react-data-table-component';\nimport ActivityRowStyles from '../style/ActivityRowStyles';\nimport { Activity } from '../types/Common/Activity';\n\n// columns and data are empty, user should fill them when using DefaultDataTableProps\nconst DefaultDataTableProps = <\n  T extends { activity: Activity }\n>(): TableProps<T> => ({\n  columns: [],\n  data: [],\n  conditionalRowStyles: ActivityRowStyles,\n});\n\nexport default DefaultDataTableProps;\n","import { Fragment, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { getNationalityModifierState } from '../global/DisplayNationality';\nimport { NationalityModifier } from '../types/Common/NationalityModifier';\n\nexport const GetCurrentNationalitySpan = (): JSX.Element | null => {\n  const nationalityModifier: NationalityModifier =\n    getNationalityModifierState();\n\n  switch (nationalityModifier) {\n    case 'TW':\n    case 'HK':\n    case 'MY':\n      return (\n        <>\n          {' '}\n          (<Text id=\"text.onlyShowing\">only showing </Text>\n          <Text id={`nationalityTitle.${nationalityModifier}`}>\n            placeholder\n          </Text>{' '}\n          VTuber)\n        </>\n      );\n    case 'all':\n    default:\n      return null;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"floating\":\"floating__uhu4Y\",\"floatingHidden\":\"floatingHidden__mvSUQ\",\"floatingShowing\":\"floatingShowing__nwzm5\"};","import { h } from 'preact';\nimport { useState } from 'preact/hooks';\nimport { trimOrNullOnEmpty } from '../../utils/StringUtils';\nimport SearchBar from '../SearchBar';\nimport style from './style.module.css';\n\nexport interface FilterWindowProps<FilterModel extends object> {\n  filterModel: FilterModel;\n  fieldPlaceHolderMappings: Map<string, string>;\n  openSearchText: string;\n  closeSearchText: string;\n  onChange?: (e: FilterModel) => void;\n}\n\nfunction FilterWindow<FilterModel extends object>(\n  props: FilterWindowProps<FilterModel>\n): JSX.Element {\n  const [isOpened, setIsOpened] = useState<boolean>(false);\n  const [filter, setFilter] = useState<FilterModel>(props.filterModel);\n\n  function handleOnChange(e: FilterModel): void {\n    if (props.onChange != null) {\n      props.onChange(e);\n    }\n  }\n\n  const createSearchBar = (key: string): JSX.Element => {\n    {\n      const keyTyped = key as keyof typeof filter;\n\n      const handleOnFilterChange = (e: string | null): void => {\n        const nullableString: string | null = trimOrNullOnEmpty(e);\n\n        setFilter({ ...filter, [keyTyped]: nullableString });\n        handleOnChange({ ...filter, [keyTyped]: nullableString });\n      };\n\n      return (\n        <SearchBar\n          key={key}\n          placeholderText={props.fieldPlaceHolderMappings.get(\n            keyTyped as string\n          )}\n          filterText={filter[keyTyped] as string | null}\n          onFilter={(e: any): void => handleOnFilterChange(e.target.value)}\n          onClear={(): void => handleOnFilterChange(null)}\n        />\n      );\n    }\n  };\n\n  const fields: Array<JSX.Element> = Object.keys(props.filterModel).map((key) =>\n    createSearchBar(key)\n  );\n\n  const ToggleButton = (): JSX.Element => (\n    <input\n      type=\"button\"\n      value={isOpened === true ? props.closeSearchText : props.openSearchText}\n      onClick={(): void => setIsOpened(!isOpened)}\n    />\n  );\n\n  const toggleFloatingClass = (): string => {\n    if (isOpened) return `${style.floating} ${style.floatingShowing}`;\n    else return `${style.floating} ${style.floatingHidden}`;\n  };\n\n  return (\n    <div>\n      <ToggleButton />\n      {isOpened === true ? (\n        <div class={toggleFloatingClass()}>{fields}</div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default FilterWindow;\n","export function trimOrNullOnEmpty(\n  value: string | null | undefined\n): string | null {\n  if (value === null || value === undefined) return null;\n\n  const trimmed = value.trim();\n\n  if (trimmed === '') return null;\n\n  return trimmed;\n}\n","import { TableColumn } from 'react-data-table-component';\n\nexport interface RankingColumnRowData {\n  ranking: number;\n}\n\nexport const RankingColumn = <\n  RowData extends RankingColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: '#',\n    selector: (row: RowData): number => row.ranking,\n    wrap: false,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchBarGroup\":\"R1T8+hwxvBovrVdGHizUFw==\"};"],"sourceRoot":""}