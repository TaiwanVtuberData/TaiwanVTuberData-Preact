{"version":3,"sources":["webpack:///./routes/EventCalendar/style.module.css","webpack:///./routes/EventCalendar/index.tsx","webpack:///./components/ToolTip/style.module.css","webpack:///./components/ToolTip/index.tsx","webpack:///./components/QuestionMarkToolTip/style.module.css","webpack:///./components/QuestionMarkToolTip/index.tsx"],"names":["EventCalendarPage","props","document","title","concat","dictionary","header","eventCalendar","h","Fragment","Text","id","MarkupText","QuestionMarkToolTip","width","fontSize","text","class","style","src","ToolTip","children"],"mappings":"8HACe,EAAY,kB,YCmCZA,UA1BwD,SACrEC,GAIA,OAFAC,SAASC,MAAQ,GAAHC,OAAMH,EAAMI,WAAWC,OAAOC,cAAa,OAAAH,OAAMH,EAAMI,WAAWC,OAAOH,OAGrFK,YAACC,WAAQ,KACPD,YAAA,UACEA,YAACE,IAAI,CAACC,GAAG,wBAAuB,kBAChCH,YAACI,IAAU,CAACD,GAAG,8BACZ,iDAEHH,YAACK,IAAmB,CAClBC,MAAM,QACNC,SAAS,OACTC,KAAMR,YAACE,IAAI,CAACC,GAAG,yBAAwB,mBAG3CH,YAAA,UACES,MAAOC,EACPC,IAAI,4HAIZ,C,oDCjCe,EAAW,iBAAX,EAA0C,qBCyB1CC,IAhBoC,SACjDnB,GAEA,OACEO,YAAA,OAAKS,MAAOC,GACTjB,EAAMoB,SACPb,YAAA,QACES,MAAOC,EACPA,MAAO,CAAEJ,MAAOb,EAAMa,MAAOC,SAAUd,EAAMc,WAE5Cd,EAAMe,MAIf,C,gECvBe,EAAgB,sBCmBhBH,IAVuD,SACpEZ,GAEA,OACEO,YAACY,IAAO,CAACJ,KAAMf,EAAMe,KAAMF,MAAOb,EAAMa,MAAOC,SAAUd,EAAMc,UAC7DP,YAAA,OAAKS,MAAOC,IAGlB,C","file":"route-EventCalendar.chunk.89b3c.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"calendar\":\"calendar__lHzCH\"};","import { Fragment, FunctionalComponent, h } from 'preact';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport { MarkupText, Text } from 'preact-i18n';\nimport style from './style.module.css';\nimport QuestionMarkToolTip from '../../components/QuestionMarkToolTip';\n\nexport interface EventCalendarPageProps {\n  dictionary: Dictionary;\n}\n\nconst EventCalendarPage: FunctionalComponent<EventCalendarPageProps> = (\n  props: EventCalendarPageProps\n) => {\n  document.title = `${props.dictionary.header.eventCalendar} | ${props.dictionary.header.title}`;\n\n  return (\n    <Fragment>\n      <h1>\n        <Text id=\"header.eventCalendar\">Event Calendar</Text>\n        <MarkupText id=\"header.eventCalendarDetail\">\n          {'(Provided By Discord Server <b>DD Refuge</b>)'}\n        </MarkupText>\n        <QuestionMarkToolTip\n          width=\"300px\"\n          fontSize=\"13px\"\n          text={<Text id=\"toolTip.eventCalendar\">tooltip text</Text>}\n        />\n      </h1>\n      <iframe\n        class={style.calendar}\n        src=\"https://calendar.google.com/calendar/embed?src=a4tve6el13u84ntjtvb1kvob10%40group.calendar.google.com&ctz=Asia%2FTaipei\"\n      />\n    </Fragment>\n  );\n};\n\nexport default EventCalendarPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"tooltip__vtGmz\",\"tooltipText\":\"tooltipText__pA-zc\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface ToolTipProps {\n  text: string | React.ReactNode;\n  children: React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst ToolTip: FunctionalComponent<ToolTipProps> = (\n  props: ToolTipProps\n): h.JSX.Element => {\n  return (\n    <div class={style.tooltip}>\n      {props.children}\n      <span\n        class={style.tooltipText}\n        style={{ width: props.width, fontSize: props.fontSize }}\n      >\n        {props.text}\n      </span>\n    </div>\n  );\n};\n\nexport default ToolTip;\n","// extracted by mini-css-extract-plugin\nexport default {\"questionMark\":\"questionMark__RT3wD\"};","import { FunctionalComponent, h } from 'preact';\nimport ToolTip from '../ToolTip';\nimport style from './style.module.css';\n\nexport interface QuestionMarkToolTip {\n  text: string | React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst QuestionMarkToolTip: FunctionalComponent<QuestionMarkToolTip> = (\n  props: QuestionMarkToolTip\n): h.JSX.Element => {\n  return (\n    <ToolTip text={props.text} width={props.width} fontSize={props.fontSize}>\n      <img class={style.questionMark} />\n    </ToolTip>\n  );\n};\n\nexport default QuestionMarkToolTip;\n"],"sourceRoot":""}