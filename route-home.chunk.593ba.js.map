{"version":3,"sources":["webpack:///./utils/transform/GrowthTransform.ts","webpack:///./utils/transform/DebutStringToDebutInfo.ts","webpack:///./style/CompactTableStyle.ts","webpack:///./global/TodayDate.ts","webpack:///./tableTypes/NameColumn.tsx","webpack:///./components/LandingTables/GrowingVTubers/index.tsx","webpack:///./tableTypes/_7DaysGrowthColumn.tsx","webpack:///./components/YouTubeTwitchCount/style.module.css","webpack:///./components/YouTubeTwitchCount/index.tsx","webpack:///./components/ProfileImagePopup/style.module.css","webpack:///./components/ProfileImagePopup/index.tsx","webpack:///./utils/NumberUtils.ts","webpack:///./tableTypes/PopularityColumn.tsx","webpack:///./tableTypes/YouTubeTwitchCountColumn.tsx","webpack:///./style/ActivityRowStyles.ts","webpack:///./components/HorizontalLivestreamsBox/index.tsx","webpack:///./utils/DefaultDataTableProps.ts","webpack:///./utils/NationalityUtils.tsx","webpack:///./components/LandingTables/TrendingVTubers/index.tsx","webpack:///./components/LandingTables/Livestreams/style.module.css","webpack:///./components/LandingTables/Livestreams/index.tsx","webpack:///./routes/home/style.module.css","webpack:///./routes/home/index.tsx","webpack:///./utils/sort/PopularityCountSort.ts","webpack:///./style/IsTodayRowStyles.ts","webpack:///./tableTypes/YouTubeSubscriberColumn.tsx","webpack:///./tableTypes/DebutDateColumn.tsx","webpack:///./utils/transform/PopularityTransform.ts","webpack:///./components/LivestreamComponent/style.module.css","webpack:///./components/LivestreamComponent/index.tsx","webpack:///./components/LandingTables/DebutVTubers/index.tsx","webpack:///./tableTypes/RankingColumn.tsx","webpack:///./utils/transform/DebutTransform.ts","webpack:///./components/ToolTip/style.module.css","webpack:///./components/ToolTip/index.tsx","webpack:///./tableTypes/PopularVideoColumn.tsx","webpack:///./utils/transform/BasicTransform.ts","webpack:///./components/LandingTables/TopVTubers/index.tsx","webpack:///./utils/transform/LivestreamTransform.ts","webpack:///./components/QuestionMarkToolTip/style.module.css","webpack:///./components/QuestionMarkToolTip/index.tsx"],"names":["growthDataToDisplayData","e","subCount","_objectSpread","percentage","undefined","diff","VTuberGrowthToDisplay","VTuberBasicToDisplay","YouTubeSubscriber","YouTube","subscriber","_7DaysGrowth","count","_30DaysGrowth","maybeDebutStringToDebutInfo","debutString","hasDebutInfo","debutStringToDebutInfo","debutDate","isToday","TODAY_DATE_STRING","isRecentlyDebut","dateDiffInDays","dateStringToDate","TIMEZONE_DIFF_IN_HOUR","TODAY_DATE","CompactTableStyle","headCells","style","paddingLeft","paddingRight","cells","tryParseInteger","process","getDateAfterTimezoneAdjustment","Date","getISODateString","NameColumn","name","h","Text","id","cell","row","ProfileImagePopup","VTuberId","imgUrl","GrowingVTubersTable","props","columns","YouTubeSubscriberColumn","_7DaysGrowthColumn","dictionary","table","PopularVideoColumn","hide","Media","SM","_useState2","_slicedToArray","useState","data","setData","_useState4","pending","setPending","getVTubers","_ref","Api","then","res","VTubers","map","sort","a","b","apply","arguments","useEffect","Fragment","href","GetRoute","type","QuestionMarkToolTip","width","fontSize","text","DataTable","_extends","DefaultDataTableProps","conditionalRowStyles","ActivityRowStyles","customStyles","progressComponent","progressPending","tableTranslation","GrowthDisplayDataToString","omit","ENFORCE_YOUTUBE_COMPLIANCE","YouTubeTwitchCount","YouTubeSpan","YouTubeCount","class","concat","CountFragment","countType","TwitchSpan","TwitchCount","ProfileImage","clickBehavior","PrependSign","value","valueToPercentString","toFixed","recordType","noRecord","atLeast","str","defaultValue","parsedVal","parseInt","isNaN","numberToCountType","popularity","tag","PopularityColumn","YouTubePopularity","TwitchPopularity","YouTubeTwitchCountColumn","TwitchFollower","when","activity","backgroundColor","cursor","debutInfo","color","HorizontalLivestreamsBox","index","LivestreamComponent","divPrefix","key","thumbnailUrl","videoUrl","startTime","now","GetCurrentNationalitySpan","nationalityModifier","getNationalityModifierState","TrendingVTubersTable","RankingColumn","sortBy","VTuberPopularityToDisplay","PopularityCountDescendingSort","ranking","sortOrder","LivestreamsTable","thisRef","useRef","getLivestreams","modifier","arrayData","livestreams","LivestreamToDisplayData","getTime","setTimeout","_scrollToElement$offs","_thisRef$current$offs","_thisRef$current","_thisRef$current2","currentTime","setHours","getHours","closestToNow","findClosestSortedDateIndex","scrollToElement","document","getElementById","Math","min","length","scrollPixel","offsetLeft","current","scrollTo","left","behavior","delayMs","textAlign","ref","HomePage","window","title","header","DebutVTubersTable","TopVTubersTable","PopularityCountAscendingSort","rowA","rowB","_rowA$YouTubePopulari","_rowA$TwitchPopularit","_rowB$YouTubePopulari","_rowB$TwitchPopularit","aCount","bCount","IsTodayRowStyle","selector","DebutDateColumn","_e$YouTube","_e$Twitch","Twitch","ProfileImagePopUp","VideoLink","getFormattedTimeIfNotToday","localeCompare","VTuberDebutToDisplay","wrap","ToolTip","children","popularVideo","ShowVideoButton","_e$YouTube2","_e$Twitch2","YouTubeId","TwitchId","follower","group","nationality"],"mappings":"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","file":"route-home.chunk.593ba.js","sourcesContent":["import { VTuberGrowthData } from '../../types/ApiData/VTuberGrowthData';\nimport { GrowthData } from '../../types/Common/GrowthData';\nimport {\n  GrowthDisplayData,\n  VTuberGrowthDisplayData,\n} from '../../types/TableDisplayData/VTuberGrowthDisplayData';\nimport { VTuberBasicToDisplay } from './BasicTransform';\n\nconst growthDataToDisplayData = (\n  e: GrowthData,\n  subCount?: number\n): GrowthDisplayData => ({\n  ...e,\n  percentage: subCount !== undefined && subCount !== 0 ? e.diff / subCount : 0,\n});\n\nexport const VTuberGrowthToDisplay = (\n  e: VTuberGrowthData\n): VTuberGrowthDisplayData => ({\n  ...VTuberBasicToDisplay(e),\n  YouTubeSubscriber: e.YouTube.subscriber,\n  _7DaysGrowth: growthDataToDisplayData(\n    e.YouTube._7DaysGrowth,\n    e.YouTube.subscriber.count\n  ),\n  _30DaysGrowth: growthDataToDisplayData(\n    e.YouTube._30DaysGrowth,\n    e.YouTube.subscriber.count\n  ),\n});\n","import {\n  TIMEZONE_DIFF_IN_HOUR,\n  TODAY_DATE,\n  TODAY_DATE_STRING,\n} from '../../global/TodayDate';\nimport { DebutInfo, HasDebutInfo } from '../../types/DebutInfo';\nimport { dateDiffInDays, dateStringToDate } from '../DateTimeUtils';\n\nexport const maybeDebutStringToDebutInfo = (\n  debutString?: string\n): DebutInfo => {\n  if (debutString === null || debutString === undefined)\n    return { hasDebutInfo: false };\n\n  return debutStringToDebutInfo(debutString);\n};\n\nexport const debutStringToDebutInfo = (debutString: string): HasDebutInfo => {\n  return {\n    hasDebutInfo: true,\n    debutDate: debutString,\n    isToday: debutString === TODAY_DATE_STRING,\n    isRecentlyDebut:\n      dateDiffInDays(\n        dateStringToDate(debutString, TIMEZONE_DIFF_IN_HOUR),\n        TODAY_DATE\n      ) < 30,\n  };\n};\n","import { TableStyles } from 'react-data-table-component';\n\nexport const CompactTableStyle: TableStyles = {\n  headCells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for head cells\n      paddingRight: '5px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for data cells\n      paddingRight: '5px',\n    },\n  },\n};\n","import {\n  getDateAfterTimezoneAdjustment,\n  getISODateString,\n} from '../utils/DateTimeUtils';\nimport { tryParseInteger } from '../utils/NumberUtils';\n\nconst DEFAULT_TIMEZONE_DIFF_IN_HOUR = 8;\n\nexport const TIMEZONE_DIFF_IN_HOUR: number = tryParseInteger(\n  process.env.TIMEZONE_DIFF_IN_HOUR,\n  DEFAULT_TIMEZONE_DIFF_IN_HOUR\n);\n\nexport const TODAY_DATE: Date = getDateAfterTimezoneAdjustment(\n  new Date(),\n  TIMEZONE_DIFF_IN_HOUR\n);\n\nexport const TODAY_DATE_STRING: string = getISODateString(\n  TODAY_DATE,\n  TIMEZONE_DIFF_IN_HOUR\n);\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ProfileImagePopup from '../components/ProfileImagePopup';\n\nexport interface NameColumnRowData {\n  id: string;\n  imgUrl?: string;\n  name: string;\n}\n\nexport const NameColumn = <\n  RowData extends NameColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.displayName\">Name</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <ProfileImagePopup\n        VTuberId={row.id}\n        imgUrl={row.imgUrl}\n        name={row.name}\n      />\n    ),\n  };\n};\n","import * as Api from '../../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useEffect } from 'preact/hooks';\nimport DataTable, { Media, TableColumn } from 'react-data-table-component';\nimport { Dictionary } from '../../../i18n/Dictionary';\nimport ActivityRowStyles from '../../../style/ActivityRowStyles';\nimport { CompactTableStyle } from '../../../style/CompactTableStyle';\nimport { NameColumn } from '../../../tableTypes/NameColumn';\nimport { PopularVideoColumn } from '../../../tableTypes/PopularVideoColumn';\nimport { YouTubeSubscriberColumn } from '../../../tableTypes/YouTubeSubscriberColumn';\nimport { _7DaysGrowthColumn } from '../../../tableTypes/_7DaysGrowthColumn';\nimport { VTuberGrowthDisplayData } from '../../../types/TableDisplayData/VTuberGrowthDisplayData';\nimport DefaultDataTableProps from '../../../utils/DefaultDataTableProps';\nimport { VTuberGrowthToDisplay } from '../../../utils/transform/GrowthTransform';\nimport QuestionMarkToolTip from '../../QuestionMarkToolTip';\nimport { GetRoute } from '../../../utils/TypeSafeRouting';\n\nexport interface GrowingVTubersTableProps {\n  dictionary: Dictionary;\n}\n\nconst GrowingVTubersTable: FunctionalComponent<GrowingVTubersTableProps> = (\n  props: GrowingVTubersTableProps\n) => {\n  const columns: Array<TableColumn<VTuberGrowthDisplayData>> = [\n    NameColumn(),\n    YouTubeSubscriberColumn(),\n    _7DaysGrowthColumn(props.dictionary.table),\n    {\n      ...PopularVideoColumn(),\n      hide: Media.SM,\n    },\n  ];\n\n  const [data, setData] = useState<Array<VTuberGrowthDisplayData>>([]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getGrowingVTubers('10').then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .map((e) => VTuberGrowthToDisplay(e))\n          .sort((a, b) => b._7DaysGrowth.percentage - a._7DaysGrowth.percentage)\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h3>\n        <a href={GetRoute({ type: 'growing-vtubers' })}>\n          <Text id=\"header.growingVTubers\">Growing VTubers</Text>\n          <> </>\n          <Text id=\"header.top10\">Top 10</Text>\n        </a>\n        <QuestionMarkToolTip\n          width=\"300px\"\n          fontSize=\"13px\"\n          text={<Text id=\"toolTip.growingVTubers\">tooltip text</Text>}\n        />\n      </h3>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={data}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n      />\n    </>\n  );\n};\n\nexport default GrowingVTubersTable;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GrowthDisplayData } from '../types/TableDisplayData/VTuberGrowthDisplayData';\nimport { GrowthDisplayDataToString } from '../utils/NumberUtils';\nimport { ENFORCE_YOUTUBE_COMPLIANCE } from '../Config';\n\nexport interface Days7GrowthColumnRowData {\n  _7DaysGrowth: GrowthDisplayData;\n}\n\nexport const _7DaysGrowthColumn = <\n  RowData extends Days7GrowthColumnRowData,\n>(tableTranslation: {\n  noRecord: string;\n  atLeast: string;\n}): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table._7DaysGrowth\">7 Days Growth (Percent)</Text>,\n    cell: (row: RowData): string =>\n      GrowthDisplayDataToString(row._7DaysGrowth, tableTranslation),\n    omit: ENFORCE_YOUTUBE_COMPLIANCE,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"noWrap\":\"noWrap__BzT1O\",\"YouTubeRed\":\"YouTubeRed__1JOkf\",\"TwitchPurple\":\"TwitchPurple__qQQlw\"};","import { Fragment, FunctionalComponent, h } from 'preact';\nimport { CountType } from '../../types/Common/CountType';\nimport CountFragment from '../CountFragment';\nimport style from './style.module.css';\n\nexport interface YouTubeTwitchCountProps {\n  YouTubeCount?: CountType;\n  TwitchCount?: CountType;\n}\n\nconst YouTubeTwitchCount: FunctionalComponent<YouTubeTwitchCountProps> = (\n  props: YouTubeTwitchCountProps\n): h.JSX.Element => {\n  const YouTubeSpan = (YouTubeCount: CountType): h.JSX.Element => {\n    return (\n      <span class={`${style.noWrap} ${style.YouTubeRed}`}>\n        <CountFragment countType={YouTubeCount} />\n      </span>\n    );\n  };\n\n  const TwitchSpan = (TwitchCount: CountType): h.JSX.Element => {\n    return (\n      <span class={`${style.noWrap} ${style.TwitchPurple}`}>\n        <CountFragment countType={TwitchCount} />\n      </span>\n    );\n  };\n\n  const CountSpan = (props: YouTubeTwitchCountProps): h.JSX.Element | null => {\n    if (props.YouTubeCount && props.TwitchCount) {\n      return (\n        <>\n          {YouTubeSpan(props.YouTubeCount)}\n          {/* extra white space. will be rendered as \" + \" */}\n          <span class={style.noWrap}>&nbsp;+&nbsp;</span>\n          {TwitchSpan(props.TwitchCount)}\n        </>\n      );\n    }\n\n    if (props.YouTubeCount) {\n      return <>{YouTubeSpan(props.YouTubeCount)}</>;\n    }\n\n    if (props.TwitchCount) {\n      return <>{TwitchSpan(props.TwitchCount)}</>;\n    }\n\n    return null;\n  };\n\n  return (\n    <Fragment>\n      <CountSpan {...props} />\n    </Fragment>\n  );\n};\n\nexport default YouTubeTwitchCount;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__vr1DG\",\"profileImageFlex\":\"profileImageFlex__4VERG\",\"nameFlex\":\"nameFlex__WFOO9\"};","import { FunctionalComponent, h } from 'preact';\nimport ProfileImage from '../ProfileImage';\nimport style from './style.module.css';\n\nexport interface ProfileImagePopupProps {\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n}\n\nconst ProfileImagePopup: FunctionalComponent<ProfileImagePopupProps> = (\n  props: ProfileImagePopupProps\n): h.JSX.Element => {\n  return (\n    <div class={style.container}>\n      <div class={style.profileImageFlex}>\n        <ProfileImage\n          VTuberId={props.VTuberId}\n          imgUrl={props.imgUrl}\n          clickBehavior=\"popup\"\n        />\n      </div>\n      <span class={style.nameFlex}>{props.name}</span>\n    </div>\n  );\n};\n\nexport default ProfileImagePopup;\n","import { GrowthRecordType } from '../types/Common/GrowthData';\n\nexport const PrependSign = (value: number): string => {\n  if (value > 0) return `+${value}`;\n  if (value < 0) return `${value}`;\n\n  return '0';\n};\n\nconst valueToPercentString = (value: number): string =>\n  (value * 100).toFixed(2);\n\nexport const GrowthDisplayDataToString = (\n  e: { diff: number; recordType: GrowthRecordType; percentage?: number },\n  tableTranslation: { noRecord: string; atLeast: string }\n): string => {\n  if (e.percentage) {\n    switch (e.recordType) {\n      case 'none':\n        return tableTranslation.noRecord;\n      case 'partial':\n        return `${tableTranslation.atLeast} ${PrependSign(\n          e.diff\n        )} (${valueToPercentString(e.percentage as number)}%)`;\n      case 'full':\n        return `${PrependSign(e.diff)} (${valueToPercentString(\n          e.percentage\n        )}%)`;\n    }\n  }\n\n  switch (e.recordType) {\n    case 'none':\n      return tableTranslation.noRecord;\n    case 'partial':\n      return `${tableTranslation.atLeast} ${PrependSign(e.diff)}`;\n    case 'full':\n      return `${PrependSign(e.diff)}`;\n  }\n};\n\nexport const tryParseInteger = (\n  str: string | undefined,\n  defaultValue: number\n): number => {\n  if (str !== undefined) {\n    const parsedVal = parseInt(str, 10);\n    if (isNaN(parsedVal) === false) {\n      return parsedVal;\n    }\n  }\n\n  return defaultValue;\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport YouTubeTwitchCount from '../components/YouTubeTwitchCount';\nimport { CountType } from '../types/Common/CountType';\nimport { ENFORCE_YOUTUBE_COMPLIANCE } from '../Config';\n\nconst numberToCountType = (popularity?: number): CountType | undefined => {\n  if (popularity) return { tag: 'has', count: popularity };\n  return undefined;\n};\n\nexport interface PopularityColumnRowData {\n  YouTubePopularity?: number;\n  TwitchPopularity?: number;\n}\n\nexport const PopularityColumn = <\n  RowData extends PopularityColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularity\">Popularity</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <YouTubeTwitchCount\n        YouTubeCount={numberToCountType(row.YouTubePopularity)}\n        TwitchCount={numberToCountType(row.TwitchPopularity)}\n      />\n    ),\n    omit: ENFORCE_YOUTUBE_COMPLIANCE,\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport YouTubeTwitchCount from '../components/YouTubeTwitchCount';\nimport { CountType } from '../types/Common/CountType';\n\nexport interface YouTubeTwitchCountColumnRowData {\n  YouTubeSubscriber?: CountType;\n  TwitchFollower?: CountType;\n}\n\nexport const YouTubeTwitchCountColumn = <\n  RowData extends YouTubeTwitchCountColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: (\n      <Text id=\"table.YouTubeTwitchCount\">\n        YouTube Subscribers + Twitch Followers\n      </Text>\n    ),\n    cell: (row: RowData): JSX.Element => (\n      <YouTubeTwitchCount\n        YouTubeCount={row.YouTubeSubscriber}\n        TwitchCount={row.TwitchFollower}\n      />\n    ),\n  };\n};\n","import { Activity } from '../types/Common/Activity';\nimport { DebutInfo } from '../types/DebutInfo';\n\nconst ActivityRowStyles = [\n  {\n    when: (row: { activity: Activity }): boolean =>\n      row.activity === 'preparing',\n    style: {\n      backgroundColor: 'rgba(141, 209, 157, 0.9)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity; debutInfo?: DebutInfo }): boolean =>\n      row.activity === 'active' &&\n      row.debutInfo !== undefined &&\n      row.debutInfo.hasDebutInfo === true &&\n      row.debutInfo.isRecentlyDebut === true,\n    style: {\n      backgroundColor: 'rgba(156, 205, 196, 0.5)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity }): boolean => row.activity === 'graduate',\n    style: {\n      backgroundColor: 'rgba(123, 123, 123, 0.9)',\n      color: 'white',\n      '&:hover': {\n        cursor: 'not-allowed',\n      },\n    },\n  },\n];\n\nexport default ActivityRowStyles;\n","import { Fragment, FunctionalComponent, h } from 'preact';\nimport { LivestreamDisplayData } from '../../types/TableDisplayData/LivestreamDisplayData';\nimport LivestreamComponent from '../LivestreamComponent';\n\nexport interface HorizontalLivestreamsBoxProps {\n  divPrefix: string;\n  data: Array<LivestreamDisplayData>;\n  now: Date;\n}\n\nconst HorizontalLivestreamsBox: FunctionalComponent<\n  HorizontalLivestreamsBoxProps\n> = (props: HorizontalLivestreamsBoxProps): h.JSX.Element => {\n  return (\n    <>\n      {props.data.map((e, index) => (\n        <LivestreamComponent\n          divPrefix={props.divPrefix}\n          id={index}\n          key={index}\n          VTuberId={e.VTuberId}\n          imgUrl={e.imgUrl}\n          name={e.name}\n          thumbnailUrl={e.thumbnailUrl}\n          videoUrl={e.videoUrl}\n          startTime={e.startTime}\n          now={props.now}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default HorizontalLivestreamsBox;\n","import { TableProps } from 'react-data-table-component';\nimport ActivityRowStyles from '../style/ActivityRowStyles';\nimport { Activity } from '../types/Common/Activity';\n\n// columns and data are empty, user should fill them when using DefaultDataTableProps\nconst DefaultDataTableProps = <\n  T extends { activity: Activity },\n>(): TableProps<T> => ({\n  columns: [],\n  data: [],\n  conditionalRowStyles: ActivityRowStyles,\n});\n\nexport default DefaultDataTableProps;\n","import { Fragment, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { getNationalityModifierState } from '../global/DisplayNationality';\nimport { NationalityModifier } from '../types/Common/NationalityModifier';\n\nexport const GetCurrentNationalitySpan = (): JSX.Element | null => {\n  const nationalityModifier: NationalityModifier =\n    getNationalityModifierState();\n\n  switch (nationalityModifier) {\n    case 'TW':\n    case 'HK':\n    case 'MY':\n      return (\n        <>\n          {' '}\n          (<Text id=\"text.onlyShowing\">only showing </Text>\n          <Text id={`nationalityTitle.${nationalityModifier}`}>\n            placeholder\n          </Text>{' '}\n          VTuber)\n        </>\n      );\n    case 'all':\n    default:\n      return null;\n  }\n};\n","import * as Api from '../../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useEffect, useState } from 'preact/hooks';\nimport DataTable, { Media, TableColumn } from 'react-data-table-component';\nimport { CompactTableStyle } from '../../../style/CompactTableStyle';\nimport { NameColumn } from '../../../tableTypes/NameColumn';\nimport { PopularityColumn } from '../../../tableTypes/PopularityColumn';\nimport { YouTubeTwitchCountColumn } from '../../../tableTypes/YouTubeTwitchCountColumn';\nimport { VTuberPopularityDisplayData } from '../../../types/TableDisplayData/VTuberPopularityDisplayData';\nimport DefaultDataTableProps from '../../../utils/DefaultDataTableProps';\nimport { PopularityCountDescendingSort } from '../../../utils/sort/PopularityCountSort';\nimport { VTuberPopularityToDisplay } from '../../../utils/transform/PopularityTransform';\nimport QuestionMarkToolTip from '../../QuestionMarkToolTip';\nimport { PopularVideoColumn } from '../../../tableTypes/PopularVideoColumn';\nimport { RankingColumn } from '../../../tableTypes/RankingColumn';\nimport ActivityRowStyles from '../../../style/ActivityRowStyles';\nimport { GetRoute } from '../../../utils/TypeSafeRouting';\n\nconst TrendingVTubersTable: FunctionalComponent = () => {\n  const columns: Array<TableColumn<VTuberPopularityDisplayData>> = [\n    {\n      ...RankingColumn(),\n      width: '30px',\n    },\n    NameColumn(),\n    PopularityColumn(),\n    YouTubeTwitchCountColumn(),\n    {\n      ...PopularVideoColumn(),\n      hide: Media.SM,\n    },\n  ];\n\n  const [data, setData] = useState<Array<VTuberPopularityDisplayData>>([]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getTrendingVTubers({ sortBy: 'livestream', count: '10' }).then(\n      (res) => {\n        setData(\n          res.data.VTubers.map((e) => e)\n            .map((e, index) => VTuberPopularityToDisplay(e, index + 1))\n            .sort(PopularityCountDescendingSort)\n            .map((e, index) => ({ ...e, ranking: index + 1 }))\n        );\n        setPending(false);\n      }\n    );\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h3>\n        <a\n          href={GetRoute({ type: 'trending-vtubers', sortOrder: 'livestream' })}\n        >\n          <Text id=\"header.trendingVTubers\">Trending VTubers</Text>\n          {/* Yes. Adding a space between two texts require a Fragment */}\n          <> </>\n          <Text id=\"header.top10\">Top 10</Text>\n        </a>\n        <QuestionMarkToolTip\n          width=\"300px\"\n          fontSize=\"13px\"\n          text={<Text id=\"toolTip.trendingVTubers\">tooltip text</Text>}\n        />\n      </h3>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={data}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n      />\n    </>\n  );\n};\n\nexport default TrendingVTubersTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"horizontalFlex\":\"horizontalFlex__qr4MR\"};","import * as Api from '../../../services/ApiService';\nimport { FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useEffect, useRef } from 'preact/hooks';\nimport { LivestreamDisplayData } from '../../../types/TableDisplayData/LivestreamDisplayData';\nimport { findClosestSortedDateIndex } from '../../../utils/DateTimeUtils';\nimport { LivestreamToDisplayData } from '../../../utils/transform/LivestreamTransform';\nimport HorizontalLivestreamsBox from '../../HorizontalLivestreamsBox';\nimport { LivestreamsModifier } from '../../../types/ApiTypes';\nimport style from './style.module.css';\n\ninterface LivestreamsTableProps {\n  divPrefix: string;\n  delayMs: number;\n  modifier: LivestreamsModifier;\n  now: Date;\n}\n\nconst LivestreamsTable: FunctionalComponent<LivestreamsTableProps> = (\n  props: LivestreamsTableProps\n) => {\n  // search filter\n  const [data, setData] = useState<Array<LivestreamDisplayData>>();\n  const [pending, setPending] = useState(true);\n  const thisRef = useRef<HTMLDivElement>(null);\n\n  const getLivestreams = async (): Promise<void> => {\n    await Api.getLivestreams(props.modifier).then((res) => {\n      const arrayData: Array<LivestreamDisplayData> = res.data.livestreams\n        .map((e) => e)\n        .map((e, index) => LivestreamToDisplayData(e, index))\n        // what a great Date API, thanks javascript\n        .sort((a, b) => a.startTime.getTime() - b.startTime.getTime());\n      // thanks to JavaScript sorting being mutable, I have to convert ReadonlyArray to Array first\n      setData(arrayData);\n      setPending(false);\n\n      // TODO: this is a hack to find the closest livestream\n      setTimeout(() => {\n        // Note: document.getElementById('comp-{index}') only work because array data id is set to their index\n        const currentTime = new Date(props.now);\n        currentTime.setHours(currentTime.getHours() - 1);\n        const closestToNow = findClosestSortedDateIndex(arrayData, currentTime);\n\n        const scrollToElement: HTMLElement | null = document.getElementById(\n          `${props.divPrefix}-${Math.min(arrayData.length - 1, closestToNow)}`\n        );\n\n        // subtract parent div to avoid over scroll\n        const scrollPixel =\n          (scrollToElement?.offsetLeft ?? 0) -\n          (thisRef.current?.offsetLeft ?? 0);\n        thisRef.current?.scrollTo({ left: scrollPixel, behavior: 'smooth' });\n      }, props.delayMs);\n    });\n  };\n\n  useEffect(() => {\n    getLivestreams();\n  }, []);\n\n  const GetLivestreamsBox = (): JSX.Element => {\n    if (pending) {\n      return (\n        <div style={{ textAlign: 'center' }}>\n          <span>\n            <Text id=\"text.loading\">Loading...</Text>\n          </span>\n        </div>\n      );\n    }\n\n    if (data === undefined || data.length === 0) {\n      return (\n        <div style={{ textAlign: 'center' }}>\n          <span>\n            <Text id=\"text.noData\">No Data</Text>\n          </span>\n        </div>\n      );\n    }\n\n    return (\n      <div ref={thisRef} class={style.horizontalFlex}>\n        <HorizontalLivestreamsBox\n          divPrefix={props.divPrefix}\n          data={data}\n          now={props.now}\n        />\n      </div>\n    );\n  };\n\n  return <GetLivestreamsBox />;\n};\n\nexport default LivestreamsTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"tableGrid\":\"tableGrid__Ju0u9\",\"tableItem\":\"tableItem__iikA+\",\"streamingSection\":\"streamingSection__unwHH\"};","import { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport DebutVTubersTable from '../../components/LandingTables/DebutVTubers';\nimport GrowingVTubersTable from '../../components/LandingTables/GrowingVTubers';\nimport LivestreamsTable from '../../components/LandingTables/Livestreams';\nimport TopVTubersTable from '../../components/LandingTables/TopVTubers';\nimport TrendingVTubersTable from '../../components/LandingTables/TrendingVTubers';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport '../../style/index.css';\nimport { GetCurrentNationalitySpan } from '../../utils/NationalityUtils';\nimport { GetRoute } from '../../utils/TypeSafeRouting';\nimport style from './style.module.css';\n\nexport interface HomePageProps {\n  dictionary: Dictionary;\n}\n\nconst HomePage: FunctionalComponent<HomePageProps> = (props: HomePageProps) => {\n  if (typeof window !== 'undefined') {\n    document.title = `${props.dictionary.header.title}`;\n  }\n\n  const LivestreamsSection = (): JSX.Element => {\n    const now = new Date();\n\n    return (\n      <div class={style.streamingSection}>\n        <div>\n          <h3>\n            <a href={GetRoute({ type: 'livestreams' })}>\n              <Text id=\"header.debutToday\">Debut Today</Text>\n            </a>\n          </h3>\n          <LivestreamsTable\n            divPrefix=\"debut\"\n            delayMs={200}\n            modifier=\"debut-no-title\"\n            now={now}\n          />\n        </div>\n        <div>\n          <h3>\n            <a href={GetRoute({ type: 'livestreams' })}>\n              <Text id=\"header.livestreaming\">Streaming Now</Text>\n            </a>\n          </h3>\n          <LivestreamsTable\n            divPrefix=\"all\"\n            delayMs={200}\n            modifier=\"all-no-title\"\n            now={now}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Fragment>\n      <h1>\n        <Text id=\"header.title\">Taiwan VTuber Data</Text>\n        {GetCurrentNationalitySpan()}\n      </h1>\n      <LivestreamsSection />\n      <div class={style.tableGrid}>\n        <div class={style.tableItem}>\n          <TrendingVTubersTable />\n        </div>\n        <div class={style.tableItem}>\n          <DebutVTubersTable />\n        </div>\n        <div class={style.tableItem}>\n          <GrowingVTubersTable dictionary={props.dictionary} />\n        </div>\n        <div class={style.tableItem}>\n          <TopVTubersTable />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default HomePage;\n","export const PopularityCountAscendingSort = <\n  T extends { YouTubePopularity?: number; TwitchPopularity?: number },\n>(\n  rowA: T,\n  rowB: T\n): number => {\n  const aCount = (rowA.YouTubePopularity ?? 0) + (rowA.TwitchPopularity ?? 0);\n  const bCount = (rowB.YouTubePopularity ?? 0) + (rowB.TwitchPopularity ?? 0);\n\n  if (aCount > bCount) return 1;\n\n  if (bCount > aCount) return -1;\n\n  return 0;\n};\n\nexport const PopularityCountDescendingSort = <\n  T extends { YouTubePopularity?: number; TwitchPopularity?: number },\n>(\n  rowA: T,\n  rowB: T\n): number => PopularityCountAscendingSort(rowA, rowB) * -1;\n","import { DebutInfo } from '../types/DebutInfo';\n\nconst IsTodayRowStyle = [\n  {\n    when: (row: { debutInfo: DebutInfo }): boolean =>\n      row.debutInfo.hasDebutInfo === true && row.debutInfo.isToday,\n    style: {\n      color: 'mediumblue',\n    },\n  },\n];\n\nexport default IsTodayRowStyle;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { HasCountType } from '../types/Common/CountType';\n\nexport interface YouTubeSubscriberColumnRowData {\n  YouTubeSubscriber: HasCountType;\n}\n\nexport const YouTubeSubscriberColumn = <\n  RowData extends YouTubeSubscriberColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.YouTubeSubscriberCount\">YouTube Subscribers</Text>,\n    selector: (row: RowData): number => row.YouTubeSubscriber.count,\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { HasDebutInfo } from '../types/DebutInfo';\n\nexport interface DebutDateColumnRowData {\n  debutInfo: HasDebutInfo;\n}\n\nexport const DebutDateColumn = <\n  RowData extends DebutDateColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.debutDate\">Debut Date</Text>,\n    selector: (row: { debutInfo: HasDebutInfo }): string =>\n      row.debutInfo.debutDate,\n  };\n};\n","import { VTuberPopularityData } from '../../types/ApiData/VTuberPopularityData';\nimport { VTuberPopularityDisplayData } from '../../types/TableDisplayData/VTuberPopularityDisplayData';\nimport { VTuberBasicToDisplay } from './BasicTransform';\n\nexport const VTuberPopularityToDisplay = (\n  e: VTuberPopularityData,\n  ranking: number\n): VTuberPopularityDisplayData => ({\n  ...VTuberBasicToDisplay(e),\n  YouTubePopularity: e.YouTube?.popularity,\n  TwitchPopularity: e.Twitch?.popularity,\n  ranking: ranking,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"verticalFlex\":\"verticalFlex__i3ZgG\"};","import { FunctionalComponent, h } from 'preact';\nimport { getFormattedTimeIfNotToday } from '../../utils/DateTimeUtils';\nimport ProfileImagePopUp from '../ProfileImagePopup';\nimport VideoLink from '../VideoLink';\nimport style from './style.module.css';\n\nexport interface LivestreamComponentProps {\n  divPrefix: string;\n  id?: number;\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n  thumbnailUrl: string;\n  videoUrl: string;\n  startTime: Date;\n  now: Date;\n}\n\nconst LivestreamComponent: FunctionalComponent<LivestreamComponentProps> = (\n  props: LivestreamComponentProps\n): h.JSX.Element => {\n  return (\n    <div id={`${props.divPrefix}-${props.id}`} class={style.verticalFlex}>\n      <ProfileImagePopUp\n        VTuberId={props.VTuberId}\n        imgUrl={props.imgUrl}\n        name={props.name}\n      />\n      <VideoLink thumbnailUrl={props.thumbnailUrl} videoUrl={props.videoUrl} />\n      <div>\n        <span>{getFormattedTimeIfNotToday(props.startTime, props.now)}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default LivestreamComponent;\n","import * as Api from '../../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useEffect } from 'preact/hooks';\nimport DataTable, { Media, TableColumn } from 'react-data-table-component';\nimport ActivityRowStyles from '../../../style/ActivityRowStyles';\nimport { CompactTableStyle } from '../../../style/CompactTableStyle';\nimport IsTodayRowStyle from '../../../style/IsTodayRowStyles';\nimport { NameColumn } from '../../../tableTypes/NameColumn';\nimport { PopularVideoColumn } from '../../../tableTypes/PopularVideoColumn';\nimport { YouTubeTwitchCountColumn } from '../../../tableTypes/YouTubeTwitchCountColumn';\nimport { VTuberDebutDisplayData } from '../../../types/TableDisplayData/VTuberDebutDisplayData';\nimport DefaultDataTableProps from '../../../utils/DefaultDataTableProps';\nimport { VTuberDebutToDisplay } from '../../../utils/transform/DebutTransform';\nimport { DebutDateColumn } from '../../../tableTypes/DebutDateColumn';\nimport { GetRoute } from '../../../utils/TypeSafeRouting';\n\nconst DebutVTubersTable: FunctionalComponent = () => {\n  const columns: Array<TableColumn<VTuberDebutDisplayData>> = [\n    DebutDateColumn(),\n    NameColumn(),\n    YouTubeTwitchCountColumn(),\n    {\n      ...PopularVideoColumn(),\n      hide: Media.SM,\n    },\n  ];\n\n  // search filter\n  const [data, setData] = useState<Array<VTuberDebutDisplayData>>([]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getDebutVTubers('next-7-days').then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .sort((a, b) => a.debutDate.localeCompare(b.debutDate))\n          .map((e) => VTuberDebutToDisplay(e))\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h3>\n        <a href={GetRoute({ type: 'debut-vtubers' })}>\n          <Text id=\"header.debutVTubersIn7Days\">VTubers Debut in 7 days</Text>\n        </a>\n      </h3>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={data}\n        // Typescript does not accept concat two array of different types\n        conditionalRowStyles={ActivityRowStyles.concat(\n          IsTodayRowStyle as Array<any>\n        )}\n        customStyles={CompactTableStyle}\n        progressPending={pending}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n      />\n    </>\n  );\n};\n\nexport default DebutVTubersTable;\n","import { TableColumn } from 'react-data-table-component';\n\nexport interface RankingColumnRowData {\n  ranking: number;\n}\n\nexport const RankingColumn = <\n  RowData extends RankingColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: '#',\n    selector: (row: RowData): number => row.ranking,\n    wrap: false,\n  };\n};\n","import { VTuberDebutData } from '../../types/ApiData/VTuberDebutData';\nimport { VTuberDebutDisplayData } from '../../types/TableDisplayData/VTuberDebutDisplayData';\nimport { VTuberBasicToDisplay } from './BasicTransform';\nimport { debutStringToDebutInfo } from './DebutStringToDebutInfo';\n\nexport const VTuberDebutToDisplay = (\n  e: VTuberDebutData\n): VTuberDebutDisplayData => ({\n  ...VTuberBasicToDisplay(e),\n  debutInfo: debutStringToDebutInfo(e.debutDate),\n  debutDate: e.debutDate,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"tooltip__vtGmz\",\"tooltipText\":\"tooltipText__pA-zc\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface ToolTipProps {\n  text: string | React.ReactNode;\n  children: React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst ToolTip: FunctionalComponent<ToolTipProps> = (\n  props: ToolTipProps\n): h.JSX.Element => {\n  return (\n    <div class={style.tooltip}>\n      {props.children}\n      <span\n        class={style.tooltipText}\n        style={{ width: props.width, fontSize: props.fontSize }}\n      >\n        {props.text}\n      </span>\n    </div>\n  );\n};\n\nexport default ToolTip;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ShowVideoButton from '../components/ShowVideoButton';\nimport { VideoInfo } from '../types/Common/VideoInfo';\nimport { ENFORCE_YOUTUBE_COMPLIANCE } from '../Config';\n\nexport interface PopularVideoColumnRowData {\n  popularVideo?: VideoInfo;\n}\n\nexport const PopularVideoColumn = <\n  RowData extends PopularVideoColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularVideo\">Popular Video</Text>,\n    cell: (row: RowData): JSX.Element | null =>\n      row.popularVideo !== undefined ? (\n        <ShowVideoButton popularVideo={row.popularVideo} />\n      ) : null,\n    omit: ENFORCE_YOUTUBE_COMPLIANCE,\n  };\n};\n","import { VTuberData } from '../../types/ApiData/VTuberData';\nimport { VTuberDisplayData } from '../../types/TableDisplayData/VTuberDisplayData';\nimport { maybeDebutStringToDebutInfo } from './DebutStringToDebutInfo';\n\nexport const VTuberBasicToDisplay = (e: VTuberData): VTuberDisplayData => ({\n  id: e.id,\n  activity: e.activity,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  YouTubeId: e.YouTube?.id,\n  YouTubeSubscriber: e.YouTube?.subscriber,\n  TwitchId: e.Twitch?.id,\n  TwitchFollower: e.Twitch?.follower,\n  popularVideo: e.popularVideo,\n  group: e.group,\n  nationality: e.nationality,\n  debutInfo: maybeDebutStringToDebutInfo(e.debutDate),\n});\n","import * as Api from '../../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useEffect } from 'preact/hooks';\nimport DataTable, { TableColumn } from 'react-data-table-component';\nimport ActivityRowStyles from '../../../style/ActivityRowStyles';\nimport { CompactTableStyle } from '../../../style/CompactTableStyle';\nimport { NameColumn } from '../../../tableTypes/NameColumn';\nimport { PopularVideoColumn } from '../../../tableTypes/PopularVideoColumn';\nimport { YouTubeTwitchCountColumn } from '../../../tableTypes/YouTubeTwitchCountColumn';\nimport { VTuberDisplayData } from '../../../types/TableDisplayData/VTuberDisplayData';\nimport DefaultDataTableProps from '../../../utils/DefaultDataTableProps';\nimport { VTuberBasicToDisplay } from '../../../utils/transform/BasicTransform';\nimport { GetRoute } from '../../../utils/TypeSafeRouting';\n\nconst TopVTubersTable: FunctionalComponent = () => {\n  const columns: Array<TableColumn<VTuberDisplayData>> = [\n    NameColumn(),\n    YouTubeTwitchCountColumn(),\n    PopularVideoColumn(),\n  ];\n\n  const [data, setData] = useState<Array<VTuberDisplayData>>([]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getVTubers('10').then((res) => {\n      setData(res.data.VTubers.map((e) => VTuberBasicToDisplay(e)));\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h3>\n        <a href={GetRoute({ type: 'all-vtubers' })}>\n          <Text id=\"header.YouTubeSubPlusTwitchFollowers\">\n            YouTube Subscribers + Twitch Followers\n          </Text>\n          <> </>\n          <Text id=\"header.top10\">Top 10</Text>\n        </a>\n      </h3>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={data}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n      />\n    </>\n  );\n};\n\nexport default TopVTubersTable;\n","import { LivestreamData } from '../../types/ApiData/LivestreamData';\nimport { LivestreamDisplayData } from '../../types/TableDisplayData/LivestreamDisplayData';\n\nexport const LivestreamToDisplayData = (\n  e: LivestreamData,\n  index: number\n): LivestreamDisplayData => ({\n  id: index,\n  VTuberId: e.id,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  title: e.title,\n  thumbnailUrl: e.thumbnailUrl,\n  videoUrl: e.videoUrl,\n  startTime: new Date(e.startTime),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"questionMark\":\"questionMark__RT3wD\"};","import { FunctionalComponent, h } from 'preact';\nimport ToolTip from '../ToolTip';\nimport style from './style.module.css';\n\nexport interface QuestionMarkToolTip {\n  text: string | React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst QuestionMarkToolTip: FunctionalComponent<QuestionMarkToolTip> = (\n  props: QuestionMarkToolTip\n): h.JSX.Element => {\n  return (\n    <ToolTip text={props.text} width={props.width} fontSize={props.fontSize}>\n      <img class={style.questionMark} />\n    </ToolTip>\n  );\n};\n\nexport default QuestionMarkToolTip;\n"],"sourceRoot":""}