{"version":3,"sources":["webpack:///./utils/transform/GrowthTransform.ts","webpack:///./style/CompactTableStyle.ts","webpack:///./tableTypes/NameColumn.tsx","webpack:///./components/LandingTables/GrowingVTubers/index.tsx","webpack:///./tableTypes/_7DaysGrowthColumn.tsx","webpack:///./components/YouTubeTwitchCount/style.module.css","webpack:///./components/YouTubeTwitchCount/index.tsx","webpack:///./components/ProfileImagePopup/style.module.css","webpack:///./components/ProfileImagePopup/index.tsx","webpack:///./utils/NumberUtils.ts","webpack:///./tableTypes/PopularityColumn.tsx","webpack:///./tableTypes/YouTubeTwitchCountColumn.tsx","webpack:///./style/ActivityRowStyles.ts","webpack:///./components/HorizontalLivestreamsBox/index.tsx","webpack:///./utils/DefaultDataTableProps.ts","webpack:///./utils/NationalityUtils.tsx","webpack:///./components/LandingTables/TrendingVTubers/index.tsx","webpack:///./components/LandingTables/Livestreams/style.module.css","webpack:///./components/LandingTables/Livestreams/index.tsx","webpack:///./routes/home/style.module.css","webpack:///./routes/home/index.tsx","webpack:///./utils/sort/PopularityCountSort.ts","webpack:///./style/IsTodayRowStyles.ts","webpack:///./tableTypes/YouTubeSubscriberColumn.tsx","webpack:///./tableTypes/DebutDateColumn.tsx","webpack:///./utils/transform/PopularityTransform.ts","webpack:///./components/LivestreamComponent/style.module.css","webpack:///./components/LivestreamComponent/index.tsx","webpack:///./components/LandingTables/DebutVTubers/index.tsx","webpack:///./tableTypes/RankingColumn.tsx","webpack:///./utils/transform/DebutTransform.ts","webpack:///./components/ToolTip/style.module.css","webpack:///./components/ToolTip/index.tsx","webpack:///./tableTypes/PopularVideoColumn.tsx","webpack:///./utils/transform/BasicTransform.ts","webpack:///./components/LandingTables/TopVTubers/index.tsx","webpack:///./utils/transform/LivestreamTransform.ts","webpack:///./components/QuestionMarkToolTip/style.module.css","webpack:///./components/QuestionMarkToolTip/index.tsx"],"names":["growthDataToDisplayData","e","subCount","percentage","undefined","diff","VTuberGrowthToDisplay","VTuberBasicToDisplay","YouTubeSubscriber","YouTube","subscriber","_7DaysGrowth","count","_30DaysGrowth","CompactTableStyle","headCells","style","paddingLeft","paddingRight","cells","NameColumn","name","id","cell","row","VTuberId","imgUrl","GrowingVTubersTable","props","columns","YouTubeSubscriberColumn","_7DaysGrowthColumn","dictionary","table","PopularVideoColumn","hide","Media","SM","data","setData","useState","pending","setPending","useEffect","async","Api","then","res","VTubers","map","sort","a","b","getVTubers","href","GetRoute","type","width","fontSize","text","DefaultDataTableProps","conditionalRowStyles","ActivityRowStyles","customStyles","progressComponent","progressPending","tableTranslation","GrowthDisplayDataToString","YouTubeTwitchCount","YouTubeSpan","YouTubeCount","class","CountFragment","countType","TwitchSpan","TwitchCount","ProfileImagePopup","ProfileImage","clickBehavior","PrependSign","value","valueToPercentString","toFixed","recordType","noRecord","atLeast","numberToCountType","popularity","tag","PopularityColumn","YouTubePopularity","TwitchPopularity","YouTubeTwitchCountColumn","TwitchFollower","when","activity","backgroundColor","cursor","color","HorizontalLivestreamsBox","index","divPrefix","key","thumbnailUrl","videoUrl","startTime","now","GetCurrentNationalitySpan","nationalityModifier","getNationalityModifierState","TrendingVTubersTable","RankingColumn","VTuberPopularityToDisplay","PopularityCountDescendingSort","ranking","LivestreamsTable","thisRef","useRef","modifier","arrayData","livestreams","LivestreamToDisplayData","getTime","setTimeout","currentTime","Date","setHours","getHours","closestToNow","findClosestSortedDateIndex","scrollToElement","document","getElementById","Math","min","length","scrollPixel","offsetLeft","current","scrollTo","left","behavior","delayMs","getLivestreams","textAlign","ref","HomePage","window","title","header","Livestreams","TrendingVTubers","DebutVTubers","GrowingVTubers","TopVTubers","PopularityCountAscendingSort","rowA","rowB","aCount","bCount","IsTodayRowStyle","isToday","selector","DebutDateColumn","debutDate","Twitch","LivestreamComponent","VideoLink","getFormattedTimeIfNotToday","DebutVTubersTable","todayDate","getISODateString","localeCompare","VTuberDebutToDisplay","concat","wrap","ToolTip","children","popularVideo","YouTubeId","TwitchId","follower","group","nationality","TopVTubersTable","QuestionMarkToolTip"],"mappings":"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","file":"route-home.chunk.0a466.esm.js","sourcesContent":["import { VTuberGrowthData } from '../../types/ApiData/VTuberGrowthData';\nimport { GrowthData } from '../../types/Common/GrowthData';\nimport {\n  GrowthDisplayData,\n  VTuberGrowthDisplayData,\n} from '../../types/TableDisplayData/VTuberGrowthDisplayData';\nimport { VTuberBasicToDisplay } from './BasicTransform';\n\nconst growthDataToDisplayData = (\n  e: GrowthData,\n  subCount?: number\n): GrowthDisplayData => ({\n  ...e,\n  percentage: subCount !== undefined && subCount !== 0 ? e.diff / subCount : 0,\n});\n\nexport const VTuberGrowthToDisplay = (\n  e: VTuberGrowthData\n): VTuberGrowthDisplayData => ({\n  ...VTuberBasicToDisplay(e),\n  YouTubeSubscriber: e.YouTube.subscriber,\n  _7DaysGrowth: growthDataToDisplayData(\n    e.YouTube._7DaysGrowth,\n    e.YouTube.subscriber.count\n  ),\n  _30DaysGrowth: growthDataToDisplayData(\n    e.YouTube._30DaysGrowth,\n    e.YouTube.subscriber.count\n  ),\n});\n","import { TableStyles } from 'react-data-table-component';\n\nexport const CompactTableStyle: TableStyles = {\n  headCells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for head cells\n      paddingRight: '5px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for data cells\n      paddingRight: '5px',\n    },\n  },\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ProfileImagePopup from '../components/ProfileImagePopup';\n\nexport interface NameColumnRowData {\n  id: string;\n  imgUrl?: string;\n  name: string;\n}\n\nexport const NameColumn = <\n  RowData extends NameColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.displayName\">Name</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <ProfileImagePopup\n        VTuberId={row.id}\n        imgUrl={row.imgUrl}\n        name={row.name}\n      />\n    ),\n  };\n};\n","import * as Api from '../../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useEffect } from 'preact/hooks';\nimport DataTable, { Media, TableColumn } from 'react-data-table-component';\nimport { Dictionary } from '../../../i18n/Dictionary';\nimport ActivityRowStyles from '../../../style/ActivityRowStyles';\nimport { CompactTableStyle } from '../../../style/CompactTableStyle';\nimport { NameColumn } from '../../../tableTypes/NameColumn';\nimport { PopularVideoColumn } from '../../../tableTypes/PopularVideoColumn';\nimport { YouTubeSubscriberColumn } from '../../../tableTypes/YouTubeSubscriberColumn';\nimport { _7DaysGrowthColumn } from '../../../tableTypes/_7DaysGrowthColumn';\nimport { VTuberGrowthDisplayData } from '../../../types/TableDisplayData/VTuberGrowthDisplayData';\nimport DefaultDataTableProps from '../../../utils/DefaultDataTableProps';\nimport { VTuberGrowthToDisplay } from '../../../utils/transform/GrowthTransform';\nimport QuestionMarkToolTip from '../../QuestionMarkToolTip';\nimport { GetRoute } from '../../../utils/TypeSafeRouting';\n\nexport interface GrowingVTubersTableProps {\n  dictionary: Dictionary;\n}\n\nconst GrowingVTubersTable: FunctionalComponent<GrowingVTubersTableProps> = (\n  props: GrowingVTubersTableProps\n) => {\n  const columns: Array<TableColumn<VTuberGrowthDisplayData>> = [\n    NameColumn(),\n    YouTubeSubscriberColumn(),\n    _7DaysGrowthColumn(props.dictionary.table),\n    {\n      ...PopularVideoColumn(),\n      hide: Media.SM,\n    },\n  ];\n\n  const [data, setData] = useState<Array<VTuberGrowthDisplayData>>([]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getGrowingVTubers('10').then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .map((e) => VTuberGrowthToDisplay(e))\n          .sort((a, b) => b._7DaysGrowth.percentage - a._7DaysGrowth.percentage)\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h3>\n        <a href={GetRoute({ type: 'growing-vtubers' })}>\n          <Text id=\"header.growingVTubers\">Growing VTubers</Text>\n          <> </>\n          <Text id=\"header.top10\">Top 10</Text>\n        </a>\n        <QuestionMarkToolTip\n          width=\"300px\"\n          fontSize=\"13px\"\n          text={<Text id=\"toolTip.growingVTubers\">tooltip text</Text>}\n        />\n      </h3>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={data}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n      />\n    </>\n  );\n};\n\nexport default GrowingVTubersTable;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GrowthDisplayData } from '../types/TableDisplayData/VTuberGrowthDisplayData';\nimport { GrowthDisplayDataToString } from '../utils/NumberUtils';\n\nexport interface Days7GrowthColumnRowData {\n  _7DaysGrowth: GrowthDisplayData;\n}\n\nexport const _7DaysGrowthColumn = <\n  RowData extends Days7GrowthColumnRowData\n>(tableTranslation: {\n  noRecord: string;\n  atLeast: string;\n}): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table._7DaysGrowth\">7 Days Growth (Percent)</Text>,\n    cell: (row: RowData): string =>\n      GrowthDisplayDataToString(row._7DaysGrowth, tableTranslation),\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"noWrap\":\"noWrap__BzT1O\",\"YouTubeRed\":\"YouTubeRed__1JOkf\",\"TwitchPurple\":\"TwitchPurple__qQQlw\"};","import { Fragment, FunctionalComponent, h } from 'preact';\nimport { CountType } from '../../types/Common/CountType';\nimport CountFragment from '../CountFragment';\nimport style from './style.module.css';\n\nexport interface YouTubeTwitchCountProps {\n  YouTubeCount?: CountType;\n  TwitchCount?: CountType;\n}\n\nconst YouTubeTwitchCount: FunctionalComponent<YouTubeTwitchCountProps> = (\n  props: YouTubeTwitchCountProps\n): h.JSX.Element => {\n  const YouTubeSpan = (YouTubeCount: CountType): h.JSX.Element => {\n    return (\n      <span class={`${style.noWrap} ${style.YouTubeRed}`}>\n        <CountFragment countType={YouTubeCount} />\n      </span>\n    );\n  };\n\n  const TwitchSpan = (TwitchCount: CountType): h.JSX.Element => {\n    return (\n      <span class={`${style.noWrap} ${style.TwitchPurple}`}>\n        <CountFragment countType={TwitchCount} />\n      </span>\n    );\n  };\n\n  const CountSpan = (props: YouTubeTwitchCountProps): h.JSX.Element | null => {\n    if (props.YouTubeCount && props.TwitchCount) {\n      return (\n        <>\n          {YouTubeSpan(props.YouTubeCount)}\n          {/* extra white space. will be rendered as \" + \" */}\n          <span class={style.noWrap}>&nbsp;+&nbsp;</span>\n          {TwitchSpan(props.TwitchCount)}\n        </>\n      );\n    }\n\n    if (props.YouTubeCount) {\n      return <>{YouTubeSpan(props.YouTubeCount)}</>;\n    }\n\n    if (props.TwitchCount) {\n      return <>{TwitchSpan(props.TwitchCount)}</>;\n    }\n\n    return null;\n  };\n\n  return (\n    <Fragment>\n      <CountSpan {...props} />\n    </Fragment>\n  );\n};\n\nexport default YouTubeTwitchCount;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__vr1DG\",\"profileImageFlex\":\"profileImageFlex__4VERG\",\"nameFlex\":\"nameFlex__WFOO9\"};","import { FunctionalComponent, h } from 'preact';\nimport ProfileImage from '../ProfileImage';\nimport style from './style.module.css';\n\nexport interface ProfileImagePopupProps {\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n}\n\nconst ProfileImagePopup: FunctionalComponent<ProfileImagePopupProps> = (\n  props: ProfileImagePopupProps\n): h.JSX.Element => {\n  return (\n    <div class={style.container}>\n      <div class={style.profileImageFlex}>\n        <ProfileImage\n          VTuberId={props.VTuberId}\n          imgUrl={props.imgUrl}\n          clickBehavior=\"popup\"\n        />\n      </div>\n      <span class={style.nameFlex}>{props.name}</span>\n    </div>\n  );\n};\n\nexport default ProfileImagePopup;\n","import { GrowthRecordType } from '../types/Common/GrowthData';\n\nexport const PrependSign = (value: number): string => {\n  if (value > 0) return `+${value}`;\n  if (value < 0) return `${value}`;\n\n  return '0';\n};\n\nconst valueToPercentString = (value: number): string =>\n  (value * 100).toFixed(2);\n\nexport const GrowthDisplayDataToString = (\n  e: { diff: number; recordType: GrowthRecordType; percentage?: number },\n  tableTranslation: { noRecord: string; atLeast: string }\n): string => {\n  if (e.percentage) {\n    switch (e.recordType) {\n      case 'none':\n        return tableTranslation.noRecord;\n      case 'partial':\n        return `${tableTranslation.atLeast} ${PrependSign(\n          e.diff\n        )} (${valueToPercentString(e.percentage as number)}%)`;\n      case 'full':\n        return `${PrependSign(e.diff)} (${valueToPercentString(\n          e.percentage\n        )}%)`;\n    }\n  }\n\n  switch (e.recordType) {\n    case 'none':\n      return tableTranslation.noRecord;\n    case 'partial':\n      return `${tableTranslation.atLeast} ${PrependSign(e.diff)}`;\n    case 'full':\n      return `${PrependSign(e.diff)}`;\n  }\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport YouTubeTwitchCount from '../components/YouTubeTwitchCount';\nimport { CountType } from '../types/Common/CountType';\n\nconst numberToCountType = (popularity?: number): CountType | undefined => {\n  if (popularity) return { tag: 'has', count: popularity };\n  return undefined;\n};\n\nexport interface PopularityColumnRowData {\n  YouTubePopularity?: number;\n  TwitchPopularity?: number;\n}\n\nexport const PopularityColumn = <\n  RowData extends PopularityColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularity\">Popularity</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <YouTubeTwitchCount\n        YouTubeCount={numberToCountType(row.YouTubePopularity)}\n        TwitchCount={numberToCountType(row.TwitchPopularity)}\n      />\n    ),\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport YouTubeTwitchCount from '../components/YouTubeTwitchCount';\nimport { CountType } from '../types/Common/CountType';\n\nexport interface YouTubeTwitchCountColumnRowData {\n  YouTubeSubscriber?: CountType;\n  TwitchFollower?: CountType;\n}\n\nexport const YouTubeTwitchCountColumn = <\n  RowData extends YouTubeTwitchCountColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: (\n      <Text id=\"table.YouTubeTwitchCount\">\n        YouTube Subscribers + Twitch Followers\n      </Text>\n    ),\n    cell: (row: RowData): JSX.Element => (\n      <YouTubeTwitchCount\n        YouTubeCount={row.YouTubeSubscriber}\n        TwitchCount={row.TwitchFollower}\n      />\n    ),\n  };\n};\n","import { Activity } from '../types/Common/Activity';\n\nconst ActivityRowStyles = [\n  {\n    when: (row: { activity: Activity }): boolean =>\n      row.activity === 'preparing',\n    style: {\n      backgroundColor: 'rgba(141, 209, 157, 0.9)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity }): boolean => row.activity === 'graduate',\n    style: {\n      backgroundColor: 'rgba(123, 123, 123, 0.9)',\n      color: 'white',\n      '&:hover': {\n        cursor: 'not-allowed',\n      },\n    },\n  },\n];\n\nexport default ActivityRowStyles;\n","import { Fragment, FunctionalComponent, h } from 'preact';\nimport { LivestreamDisplayData } from '../../types/TableDisplayData/LivestreamDisplayData';\nimport LivestreamComponent from '../LivestreamComponent';\n\nexport interface HorizontalLivestreamsBoxProps {\n  divPrefix: string;\n  data: Array<LivestreamDisplayData>;\n  now: Date;\n}\n\nconst HorizontalLivestreamsBox: FunctionalComponent<\n  HorizontalLivestreamsBoxProps\n> = (props: HorizontalLivestreamsBoxProps): h.JSX.Element => {\n  return (\n    <>\n      {props.data.map((e, index) => (\n        <LivestreamComponent\n          divPrefix={props.divPrefix}\n          id={index}\n          key={index}\n          VTuberId={e.VTuberId}\n          imgUrl={e.imgUrl}\n          name={e.name}\n          thumbnailUrl={e.thumbnailUrl}\n          videoUrl={e.videoUrl}\n          startTime={e.startTime}\n          now={props.now}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default HorizontalLivestreamsBox;\n","import { TableProps } from 'react-data-table-component';\nimport ActivityRowStyles from '../style/ActivityRowStyles';\nimport { Activity } from '../types/Common/Activity';\n\n// columns and data are empty, user should fill them when using DefaultDataTableProps\nconst DefaultDataTableProps = <\n  T extends { activity: Activity }\n>(): TableProps<T> => ({\n  columns: [],\n  data: [],\n  conditionalRowStyles: ActivityRowStyles,\n});\n\nexport default DefaultDataTableProps;\n","import { Fragment, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { getNationalityModifierState } from '../global/DisplayNationality';\nimport { NationalityModifier } from '../types/Common/NationalityModifier';\n\nexport const GetCurrentNationalitySpan = (): JSX.Element | null => {\n  const nationalityModifier: NationalityModifier =\n    getNationalityModifierState();\n\n  switch (nationalityModifier) {\n    case 'TW':\n    case 'HK':\n    case 'MY':\n      return (\n        <>\n          {' '}\n          (<Text id=\"text.onlyShowing\">only showing </Text>\n          <Text id={`nationalityTitle.${nationalityModifier}`}>\n            placeholder\n          </Text>{' '}\n          VTuber)\n        </>\n      );\n    case 'all':\n    default:\n      return null;\n  }\n};\n","import * as Api from '../../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useEffect, useState } from 'preact/hooks';\nimport DataTable, { Media, TableColumn } from 'react-data-table-component';\nimport { CompactTableStyle } from '../../../style/CompactTableStyle';\nimport { NameColumn } from '../../../tableTypes/NameColumn';\nimport { PopularityColumn } from '../../../tableTypes/PopularityColumn';\nimport { YouTubeTwitchCountColumn } from '../../../tableTypes/YouTubeTwitchCountColumn';\nimport { VTuberPopularityDisplayData } from '../../../types/TableDisplayData/VTuberPopularityDisplayData';\nimport DefaultDataTableProps from '../../../utils/DefaultDataTableProps';\nimport { PopularityCountDescendingSort } from '../../../utils/sort/PopularityCountSort';\nimport { VTuberPopularityToDisplay } from '../../../utils/transform/PopularityTransform';\nimport QuestionMarkToolTip from '../../QuestionMarkToolTip';\nimport { PopularVideoColumn } from '../../../tableTypes/PopularVideoColumn';\nimport { RankingColumn } from '../../../tableTypes/RankingColumn';\nimport ActivityRowStyles from '../../../style/ActivityRowStyles';\nimport { GetRoute } from '../../../utils/TypeSafeRouting';\n\nconst TrendingVTubersTable: FunctionalComponent = () => {\n  const columns: Array<TableColumn<VTuberPopularityDisplayData>> = [\n    {\n      ...RankingColumn(),\n      width: '30px',\n    },\n    NameColumn(),\n    PopularityColumn(),\n    YouTubeTwitchCountColumn(),\n    {\n      ...PopularVideoColumn(),\n      hide: Media.SM,\n    },\n  ];\n\n  const [data, setData] = useState<Array<VTuberPopularityDisplayData>>([]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getTrendingVTubers('10').then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .map((e, index) => VTuberPopularityToDisplay(e, index + 1))\n          .sort(PopularityCountDescendingSort)\n          .map((e, index) => ({ ...e, ranking: index + 1 }))\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h3>\n        <a href={GetRoute({ type: 'trending-vtubers' })}>\n          <Text id=\"header.trendingVTubers\">Trending VTubers</Text>\n          {/* Yes. Adding a space between two texts require a Fragment */}\n          <> </>\n          <Text id=\"header.top10\">Top 10</Text>\n        </a>\n        <QuestionMarkToolTip\n          width=\"300px\"\n          fontSize=\"13px\"\n          text={<Text id=\"toolTip.trendingVTubers\">tooltip text</Text>}\n        />\n      </h3>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={data}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n      />\n    </>\n  );\n};\n\nexport default TrendingVTubersTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"horizontalFlex\":\"horizontalFlex__qr4MR\"};","import * as Api from '../../../services/ApiService';\nimport { FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useEffect, useRef } from 'preact/hooks';\nimport { LivestreamDisplayData } from '../../../types/TableDisplayData/LivestreamDisplayData';\nimport { findClosestSortedDateIndex } from '../../../utils/DateTimeUtils';\nimport { LivestreamToDisplayData } from '../../../utils/transform/LivestreamTransform';\nimport HorizontalLivestreamsBox from '../../HorizontalLivestreamsBox';\nimport { LivestreamsModifier } from '../../../types/ApiTypes';\nimport style from './style.module.css';\n\ninterface LivestreamsTableProps {\n  divPrefix: string;\n  delayMs: number;\n  modifier: LivestreamsModifier;\n  now: Date;\n}\n\nconst LivestreamsTable: FunctionalComponent<LivestreamsTableProps> = (\n  props: LivestreamsTableProps\n) => {\n  // search filter\n  const [data, setData] = useState<Array<LivestreamDisplayData>>();\n  const [pending, setPending] = useState(true);\n  const thisRef = useRef<HTMLDivElement>(null);\n\n  const getLivestreams = async (): Promise<void> => {\n    await Api.getLivestreams(props.modifier).then((res) => {\n      const arrayData: Array<LivestreamDisplayData> = res.data.livestreams\n        .map((e) => e)\n        .map((e, index) => LivestreamToDisplayData(e, index))\n        // what a great Date API, thanks javascript\n        .sort((a, b) => a.startTime.getTime() - b.startTime.getTime());\n      // thanks to JavaScript sorting being mutable, I have to convert ReadonlyArray to Array first\n      setData(arrayData);\n      setPending(false);\n\n      // TODO: this is a hack to find the closest livestream\n      setTimeout(() => {\n        // Note: document.getElementById('comp-{index}') only work because array data id is set to their index\n        const currentTime = new Date(props.now);\n        currentTime.setHours(currentTime.getHours() - 1);\n        const closestToNow = findClosestSortedDateIndex(arrayData, currentTime);\n\n        const scrollToElement: HTMLElement | null = document.getElementById(\n          `${props.divPrefix}-${Math.min(arrayData.length - 1, closestToNow)}`\n        );\n\n        // subtract parent div to avoid over scroll\n        const scrollPixel =\n          (scrollToElement?.offsetLeft ?? 0) -\n          (thisRef.current?.offsetLeft ?? 0);\n        thisRef.current?.scrollTo({ left: scrollPixel, behavior: 'smooth' });\n      }, props.delayMs);\n    });\n  };\n\n  useEffect(() => {\n    getLivestreams();\n  }, []);\n\n  const GetLivestreamsBox = (): JSX.Element => {\n    if (pending) {\n      return (\n        <div style={{ textAlign: 'center' }}>\n          <span>\n            <Text id=\"text.loading\">Loading...</Text>\n          </span>\n        </div>\n      );\n    }\n\n    if (data === undefined || data.length === 0) {\n      return (\n        <div style={{ textAlign: 'center' }}>\n          <span>\n            <Text id=\"text.noData\">No Data</Text>\n          </span>\n        </div>\n      );\n    }\n\n    return (\n      <div ref={thisRef} class={style.horizontalFlex}>\n        <HorizontalLivestreamsBox\n          divPrefix={props.divPrefix}\n          data={data}\n          now={props.now}\n        />\n      </div>\n    );\n  };\n\n  return <GetLivestreamsBox />;\n};\n\nexport default LivestreamsTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"tableGrid\":\"tableGrid__Ju0u9\",\"tableItem\":\"tableItem__iikA+\",\"streamingSection\":\"streamingSection__unwHH\"};","import { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport DebutVTubersTable from '../../components/LandingTables/DebutVTubers';\nimport GrowingVTubersTable from '../../components/LandingTables/GrowingVTubers';\nimport LivestreamsTable from '../../components/LandingTables/Livestreams';\nimport TopVTubersTable from '../../components/LandingTables/TopVTubers';\nimport TrendingVTubersTable from '../../components/LandingTables/TrendingVTubers';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport '../../style/index.css';\nimport { GetCurrentNationalitySpan } from '../../utils/NationalityUtils';\nimport { GetRoute } from '../../utils/TypeSafeRouting';\nimport style from './style.module.css';\n\nexport interface HomePageProps {\n  dictionary: Dictionary;\n}\n\nconst HomePage: FunctionalComponent<HomePageProps> = (props: HomePageProps) => {\n  if (typeof window !== 'undefined') {\n    document.title = `${props.dictionary.header.title}`;\n  }\n\n  const LivestreamsSection = (): JSX.Element => {\n    const now = new Date();\n\n    return (\n      <div class={style.streamingSection}>\n        <div>\n          <h3>\n            <a href={GetRoute({ type: 'livestreams' })}>\n              <Text id=\"header.debutToday\">Debut Today</Text>\n            </a>\n          </h3>\n          <LivestreamsTable\n            divPrefix=\"debut\"\n            delayMs={200}\n            modifier=\"debut-no-title\"\n            now={now}\n          />\n        </div>\n        <div>\n          <h3>\n            <a href={GetRoute({ type: 'livestreams' })}>\n              <Text id=\"header.livestreaming\">Streaming Now</Text>\n            </a>\n          </h3>\n          <LivestreamsTable\n            divPrefix=\"all\"\n            delayMs={200}\n            modifier=\"all-no-title\"\n            now={now}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Fragment>\n      <h1>\n        <Text id=\"header.title\">Taiwan VTuber Data</Text>\n        {GetCurrentNationalitySpan()}\n      </h1>\n\n      <LivestreamsSection />\n      <div class={style.tableGrid}>\n        <div class={style.tableItem}>\n          <TrendingVTubersTable />\n        </div>\n        <div class={style.tableItem}>\n          <DebutVTubersTable />\n        </div>\n        <div class={style.tableItem}>\n          <GrowingVTubersTable dictionary={props.dictionary} />\n        </div>\n        <div class={style.tableItem}>\n          <TopVTubersTable />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default HomePage;\n","export const PopularityCountAscendingSort = <\n  T extends { YouTubePopularity?: number; TwitchPopularity?: number }\n>(\n  rowA: T,\n  rowB: T\n): number => {\n  const aCount = (rowA.YouTubePopularity ?? 0) + (rowA.TwitchPopularity ?? 0);\n  const bCount = (rowB.YouTubePopularity ?? 0) + (rowB.TwitchPopularity ?? 0);\n\n  if (aCount > bCount) return 1;\n\n  if (bCount > aCount) return -1;\n\n  return 0;\n};\n\nexport const PopularityCountDescendingSort = <\n  T extends { YouTubePopularity?: number; TwitchPopularity?: number }\n>(\n  rowA: T,\n  rowB: T\n): number => PopularityCountAscendingSort(rowA, rowB) * -1;\n","const IsTodayRowStyle = [\n  {\n    when: (row: { isToday: boolean }): boolean => row.isToday,\n    style: {\n      color: 'mediumblue',\n    },\n  },\n];\n\nexport default IsTodayRowStyle;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { HasCountType } from '../types/Common/CountType';\n\nexport interface YouTubeSubscriberColumnRowData {\n  YouTubeSubscriber: HasCountType;\n}\n\nexport const YouTubeSubscriberColumn = <\n  RowData extends YouTubeSubscriberColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.YouTubeSubscriberCount\">YouTube Subscribers</Text>,\n    selector: (row: RowData): number => row.YouTubeSubscriber.count,\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\n\nexport interface DebutDateColumnRowData {\n  debutDate: string;\n}\n\nexport const DebutDateColumn = <\n  RowData extends DebutDateColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.debutDate\">Debut Date</Text>,\n    selector: (row: { debutDate: string }): string => row.debutDate,\n  };\n};\n","import { VTuberPopularityData } from '../../types/ApiData/VTuberPopularityData';\nimport { VTuberPopularityDisplayData } from '../../types/TableDisplayData/VTuberPopularityDisplayData';\nimport { VTuberBasicToDisplay } from './BasicTransform';\n\nexport const VTuberPopularityToDisplay = (\n  e: VTuberPopularityData,\n  ranking: number\n): VTuberPopularityDisplayData => ({\n  ...VTuberBasicToDisplay(e),\n  YouTubePopularity: e.YouTube?.popularity,\n  TwitchPopularity: e.Twitch?.popularity,\n  ranking: ranking,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"verticalFlex\":\"verticalFlex__i3ZgG\"};","import { FunctionalComponent, h } from 'preact';\nimport { getFormattedTimeIfNotToday } from '../../utils/DateTimeUtils';\nimport ProfileImagePopUp from '../ProfileImagePopup';\nimport VideoLink from '../VideoLink';\nimport style from './style.module.css';\n\nexport interface LivestreamComponentProps {\n  divPrefix: string;\n  id?: number;\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n  thumbnailUrl: string;\n  videoUrl: string;\n  startTime: Date;\n  now: Date;\n}\n\nconst LivestreamComponent: FunctionalComponent<LivestreamComponentProps> = (\n  props: LivestreamComponentProps\n): h.JSX.Element => {\n  return (\n    <div id={`${props.divPrefix}-${props.id}`} class={style.verticalFlex}>\n      <ProfileImagePopUp\n        VTuberId={props.VTuberId}\n        imgUrl={props.imgUrl}\n        name={props.name}\n      />\n      <VideoLink thumbnailUrl={props.thumbnailUrl} videoUrl={props.videoUrl} />\n      <div>\n        <span>{getFormattedTimeIfNotToday(props.startTime, props.now)}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default LivestreamComponent;\n","import * as Api from '../../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useEffect } from 'preact/hooks';\nimport DataTable, { Media, TableColumn } from 'react-data-table-component';\nimport ActivityRowStyles from '../../../style/ActivityRowStyles';\nimport { CompactTableStyle } from '../../../style/CompactTableStyle';\nimport IsTodayRowStyle from '../../../style/IsTodayRowStyles';\nimport { NameColumn } from '../../../tableTypes/NameColumn';\nimport { PopularVideoColumn } from '../../../tableTypes/PopularVideoColumn';\nimport { YouTubeTwitchCountColumn } from '../../../tableTypes/YouTubeTwitchCountColumn';\nimport { VTuberDebutDisplayData } from '../../../types/TableDisplayData/VTuberDebutDisplayData';\nimport { getISODateString } from '../../../utils/DateTimeUtils';\nimport DefaultDataTableProps from '../../../utils/DefaultDataTableProps';\nimport { VTuberDebutToDisplay } from '../../../utils/transform/DebutTransform';\nimport { DebutDateColumn } from '../../../tableTypes/DebutDateColumn';\nimport { GetRoute } from '../../../utils/TypeSafeRouting';\n\nconst DebutVTubersTable: FunctionalComponent = () => {\n  const columns: Array<TableColumn<VTuberDebutDisplayData>> = [\n    DebutDateColumn(),\n    NameColumn(),\n    YouTubeTwitchCountColumn(),\n    {\n      ...PopularVideoColumn(),\n      hide: Media.SM,\n    },\n  ];\n\n  // search filter\n  const [data, setData] = useState<Array<VTuberDebutDisplayData>>([]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    const todayDate: string = getISODateString(new Date(), 8);\n    await Api.getDebutVTubers('next-7-days').then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .sort((a, b) => a.debutDate.localeCompare(b.debutDate))\n          .map((e) => VTuberDebutToDisplay(e, todayDate))\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h3>\n        <a href={GetRoute({ type: 'debut-vtubers' })}>\n          <Text id=\"header.debutVTubersIn7Days\">VTubers Debut in 7 days</Text>\n        </a>\n      </h3>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={data}\n        // Typescript does not accept concat two array of different types\n        conditionalRowStyles={ActivityRowStyles.concat(\n          IsTodayRowStyle as Array<any>\n        )}\n        customStyles={CompactTableStyle}\n        progressPending={pending}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n      />\n    </>\n  );\n};\n\nexport default DebutVTubersTable;\n","import { TableColumn } from 'react-data-table-component';\n\nexport interface RankingColumnRowData {\n  ranking: number;\n}\n\nexport const RankingColumn = <\n  RowData extends RankingColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: '#',\n    selector: (row: RowData): number => row.ranking,\n    wrap: false,\n  };\n};\n","import { VTuberDebutData } from '../../types/ApiData/VTuberDebutData';\nimport { VTuberDebutDisplayData } from '../../types/TableDisplayData/VTuberDebutDisplayData';\nimport { VTuberBasicToDisplay } from './BasicTransform';\n\nexport const VTuberDebutToDisplay = (\n  e: VTuberDebutData,\n  todayDate: string\n): VTuberDebutDisplayData => ({\n  ...VTuberBasicToDisplay(e),\n  debutDate: e.debutDate,\n  isToday: e.debutDate === todayDate,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"tooltip__vtGmz\",\"tooltipText\":\"tooltipText__pA-zc\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface ToolTipProps {\n  text: string | React.ReactNode;\n  children: React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst ToolTip: FunctionalComponent<ToolTipProps> = (\n  props: ToolTipProps\n): h.JSX.Element => {\n  return (\n    <div class={style.tooltip}>\n      {props.children}\n      <span\n        class={style.tooltipText}\n        style={{ width: props.width, fontSize: props.fontSize }}\n      >\n        {props.text}\n      </span>\n    </div>\n  );\n};\n\nexport default ToolTip;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ShowVideoButton from '../components/ShowVideoButton';\nimport { VideoInfo } from '../types/Common/VideoInfo';\n\nexport interface PopularVideoColumnRowData {\n  popularVideo?: VideoInfo;\n}\n\nexport const PopularVideoColumn = <\n  RowData extends PopularVideoColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularVideo\">Popular Video</Text>,\n    cell: (row: RowData): JSX.Element | null =>\n      row.popularVideo !== undefined ? (\n        <ShowVideoButton popularVideo={row.popularVideo} />\n      ) : null,\n  };\n};\n","import { VTuberData } from '../../types/ApiData/VTuberData';\nimport { VTuberDisplayData } from '../../types/TableDisplayData/VTuberDisplayData';\n\nexport const VTuberBasicToDisplay = (e: VTuberData): VTuberDisplayData => ({\n  id: e.id,\n  activity: e.activity,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  YouTubeId: e.YouTube?.id,\n  YouTubeSubscriber: e.YouTube?.subscriber,\n  TwitchId: e.Twitch?.id,\n  TwitchFollower: e.Twitch?.follower,\n  popularVideo: e.popularVideo,\n  group: e.group,\n  nationality: e.nationality,\n});\n","import * as Api from '../../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useEffect } from 'preact/hooks';\nimport DataTable, { TableColumn } from 'react-data-table-component';\nimport ActivityRowStyles from '../../../style/ActivityRowStyles';\nimport { CompactTableStyle } from '../../../style/CompactTableStyle';\nimport { NameColumn } from '../../../tableTypes/NameColumn';\nimport { PopularVideoColumn } from '../../../tableTypes/PopularVideoColumn';\nimport { YouTubeTwitchCountColumn } from '../../../tableTypes/YouTubeTwitchCountColumn';\nimport { VTuberDisplayData } from '../../../types/TableDisplayData/VTuberDisplayData';\nimport DefaultDataTableProps from '../../../utils/DefaultDataTableProps';\nimport { VTuberBasicToDisplay } from '../../../utils/transform/BasicTransform';\nimport { GetRoute } from '../../../utils/TypeSafeRouting';\n\nconst TopVTubersTable: FunctionalComponent = () => {\n  const columns: Array<TableColumn<VTuberDisplayData>> = [\n    NameColumn(),\n    YouTubeTwitchCountColumn(),\n    PopularVideoColumn(),\n  ];\n\n  const [data, setData] = useState<Array<VTuberDisplayData>>([]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getVTubers('10').then((res) => {\n      setData(res.data.VTubers.map((e) => VTuberBasicToDisplay(e)));\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h3>\n        <a href={GetRoute({ type: 'all-vtubers' })}>\n          <Text id=\"header.YouTubeSubPlusTwitchFollowers\">\n            YouTube Subscribers + Twitch Followers\n          </Text>\n          <> </>\n          <Text id=\"header.top10\">Top 10</Text>\n        </a>\n      </h3>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={data}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n      />\n    </>\n  );\n};\n\nexport default TopVTubersTable;\n","import { LivestreamData } from '../../types/ApiData/LivestreamData';\nimport { LivestreamDisplayData } from '../../types/TableDisplayData/LivestreamDisplayData';\n\nexport const LivestreamToDisplayData = (\n  e: LivestreamData,\n  index: number\n): LivestreamDisplayData => ({\n  id: index,\n  VTuberId: e.id,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  title: e.title,\n  thumbnailUrl: e.thumbnailUrl,\n  videoUrl: e.videoUrl,\n  startTime: new Date(e.startTime),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"questionMark\":\"questionMark__RT3wD\"};","import { FunctionalComponent, h } from 'preact';\nimport ToolTip from '../ToolTip';\nimport style from './style.module.css';\n\nexport interface QuestionMarkToolTip {\n  text: string | React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst QuestionMarkToolTip: FunctionalComponent<QuestionMarkToolTip> = (\n  props: QuestionMarkToolTip\n): h.JSX.Element => {\n  return (\n    <ToolTip text={props.text} width={props.width} fontSize={props.fontSize}>\n      <img class={style.questionMark} />\n    </ToolTip>\n  );\n};\n\nexport default QuestionMarkToolTip;\n"],"sourceRoot":""}