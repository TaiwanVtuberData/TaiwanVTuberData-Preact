{"version":3,"sources":["webpack:///./style/CompactTableStyle.ts","webpack:///./tableTypes/NameColumn.tsx","webpack:///./tableTypes/GroupColumn.tsx","webpack:///./components/ProfileImagePopup/style.module.css","webpack:///./components/ProfileImagePopup/index.tsx","webpack:///./utils/NumberUtils.ts","webpack:///./components/DropDownList/style.module.css","webpack:///./components/DropDownList/index.tsx","webpack:///./tableTypes/NationalityColumn.tsx","webpack:///./utils/FilterModelHelper.ts","webpack:///./components/SearchBar/style.module.css","webpack:///./components/SearchBar/index.tsx","webpack:///./style/ActivityRowStyles.ts","webpack:///./utils/DefaultDataTableProps.ts","webpack:///./utils/NationalityUtils.tsx","webpack:///./routes/VTubersViewCount/index.tsx","webpack:///./components/FilterWindow/style.module.css","webpack:///./components/FilterWindow/index.tsx","webpack:///./utils/StringUtils.ts","webpack:///./utils/transform/ViewCountTransform.ts","webpack:///./tableTypes/RankingColumn.tsx","webpack:///./tableTypes/PopularVideoColumn.tsx","webpack:///./style/DataTableStyle.module.css"],"names":["CompactTableStyle","headCells","style","paddingLeft","paddingRight","cells","NameColumn","name","id","cell","row","VTuberId","imgUrl","GroupColumn","undefined","group","href","GetRoute","type","ProfileImagePopup","props","class","ProfileImage","clickBehavior","PrependSign","value","valueToPercentString","toFixed","GrowthDisplayDataToString","e","tableTranslation","percentage","recordType","noRecord","atLeast","diff","DropDownList","tipText","dropDownStyle","dropDown","onChange","optionValue","map","key","option","NationalityColumn","selector","nationality","filterFunction","targetModel","filterModel","Object","entries","entry","target","filter","toLowerCase","includes","some","SearchBar","placeholder","placeholderText","filterText","onFilter","onClick","onClear","ActivityRowStyles","when","activity","backgroundColor","cursor","color","DefaultDataTableProps","columns","data","conditionalRowStyles","GetCurrentNationalitySpan","nationalityModifier","getNationalityModifierState","VTubersViewCountPage","document","title","dictionary","header","VTubersViewCount","RankingColumn","sortable","width","totalViewCount","compact","_7DaysGrowth","table","right","_30DaysGrowth","PopularVideoColumn","setData","useState","setFilterModel","YouTubeId","TwitchId","filteredData","searchBarComponent","useMemo","fieldPlaceHolderMappings","Map","searchByDisplayName","searchByYouTubeId","searchByTwitchId","searchByGroup","searchByNationality","tableStyle","searchBarGroup","sortingMethod","modifier","GoToPage","viewCountSortOrder","openSearchText","text","openSearch","closeSearchText","closeSearch","pending","setPending","_7DaysDescendingSort","rowA","rowB","YouTube","_30DaysDescendingSort","getVTubers","async","Api","sortBy","count","then","res","VTubers","sort","GetSortingMethod","index","VTuberViewCountToDisplay","useEffect","customStyles","fixedHeader","pagination","paginationComponentOptions","paginationOptions","progressComponent","progressPending","subHeader","subHeaderComponent","FilterWindow","isOpened","setIsOpened","setFilter","createSearchBar","keyTyped","handleOnFilterChange","nullableString","trimmed","trim","trimOrNullOnEmpty","handleOnChange","get","fields","keys","ranking","Twitch","popularVideo","wrap"],"mappings":"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","file":"route-VTubersViewCount.chunk.86dac.esm.js","sourcesContent":["import { TableStyles } from 'react-data-table-component';\n\nexport const CompactTableStyle: TableStyles = {\n  headCells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for head cells\n      paddingRight: '5px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for data cells\n      paddingRight: '5px',\n    },\n  },\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ProfileImagePopup from '../components/ProfileImagePopup';\n\nexport interface NameColumnRowData {\n  id: string;\n  imgUrl?: string;\n  name: string;\n}\n\nexport const NameColumn = <\n  RowData extends NameColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.displayName\">Name</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <ProfileImagePopup\n        VTuberId={row.id}\n        imgUrl={row.imgUrl}\n        name={row.name}\n      />\n    ),\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GetRoute } from '../utils/TypeSafeRouting';\n\nexport interface GroupColumnRowData {\n  group?: string;\n}\n\nexport const GroupColumn = <\n  RowData extends GroupColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.group\">Group</Text>,\n    cell: (row: RowData): h.JSX.Element | null =>\n      row.group !== undefined ? (\n        <a href={GetRoute({ type: 'group', name: row.group })}>{row.group}</a>\n      ) : null,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__vr1DG\",\"profileImageFlex\":\"profileImageFlex__4VERG\",\"nameFlex\":\"nameFlex__WFOO9\"};","import { FunctionalComponent, h } from 'preact';\nimport ProfileImage from '../ProfileImage';\nimport style from './style.module.css';\n\nexport interface ProfileImagePopupProps {\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n}\n\nconst ProfileImagePopup: FunctionalComponent<ProfileImagePopupProps> = (\n  props: ProfileImagePopupProps\n): h.JSX.Element => {\n  return (\n    <div class={style.container}>\n      <div class={style.profileImageFlex}>\n        <ProfileImage\n          VTuberId={props.VTuberId}\n          imgUrl={props.imgUrl}\n          clickBehavior=\"popup\"\n        />\n      </div>\n      <span class={style.nameFlex}>{props.name}</span>\n    </div>\n  );\n};\n\nexport default ProfileImagePopup;\n","import { GrowthRecordType } from '../types/Common/GrowthData';\n\nexport const PrependSign = (value: number): string => {\n  if (value > 0) return `+${value}`;\n  if (value < 0) return `${value}`;\n\n  return '0';\n};\n\nconst valueToPercentString = (value: number): string =>\n  (value * 100).toFixed(2);\n\nexport const GrowthDisplayDataToString = (\n  e: { diff: number; recordType: GrowthRecordType; percentage?: number },\n  tableTranslation: { noRecord: string; atLeast: string }\n): string => {\n  if (e.percentage) {\n    switch (e.recordType) {\n      case 'none':\n        return tableTranslation.noRecord;\n      case 'partial':\n        return `${tableTranslation.atLeast} ${PrependSign(\n          e.diff\n        )} (${valueToPercentString(e.percentage as number)}%)`;\n      case 'full':\n        return `${PrependSign(e.diff)} (${valueToPercentString(\n          e.percentage\n        )}%)`;\n    }\n  }\n\n  switch (e.recordType) {\n    case 'none':\n      return tableTranslation.noRecord;\n    case 'partial':\n      return `${tableTranslation.atLeast} ${PrependSign(e.diff)}`;\n    case 'full':\n      return `${PrependSign(e.diff)}`;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tipText\":\"tipText__4DHD3\"};","import { h } from 'preact';\nimport style from './style.module.css';\nimport dropDownStyle from '../../style/DropDownStyle.module.css';\n\nexport interface DropDownListProps<ValueType> {\n  tipText?: string;\n  optionValue?: Array<{ option: any; value: ValueType }>;\n  value?: ValueType;\n  onChange?: (e: unknown) => unknown;\n}\n\nfunction DropDownList<ValueType extends string | number>(\n  props: DropDownListProps<ValueType>\n): h.JSX.Element {\n  return (\n    <div>\n      <span class={style.tipText}>{props.tipText}</span>\n      <select\n        class={dropDownStyle.dropDown}\n        value={props.value}\n        onChange={props.onChange}\n      >\n        {props.optionValue !== undefined\n          ? props.optionValue.map((e) => (\n              <option key={e.value} value={e.value}>\n                {e.option}\n              </option>\n            ))\n          : null}\n      </select>\n    </div>\n  );\n}\n\nexport default DropDownList;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\n\nexport interface NationalityColumnRowData {\n  nationality?: string;\n}\n\nexport const NationalityColumn = <\n  RowData extends NationalityColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.nationality\">Nationality</Text>,\n    selector: (row: RowData): string => row.nationality ?? '',\n  };\n};\n","export function filterFunction<\n  TargetType extends object,\n  FilterModel extends object\n>(targetModel: TargetType, filterModel: FilterModel): boolean {\n  const result = Object.entries(filterModel).map((entry) => {\n    const keyTyped = entry[0] as keyof typeof targetModel;\n    const target = targetModel[keyTyped] as string | undefined | null;\n\n    const filter = entry[1] as string | null;\n\n    // if there is no filter applied\n    if (filter === null) {\n      return true;\n    }\n\n    // if target doesn't exist\n    if (target === null || target === undefined || target === '') {\n      return false;\n    }\n\n    return target.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  const someFilterNotMatch = result.some((e) => e === false);\n\n  return !someFilterNotMatch;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__1lsi6\",\"textField\":\"textField__bDpXR\",\"button\":\"button__maFzS\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface SearchBarProps {\n  placeholderText?: string;\n  filterText: string | null;\n  onFilter: (e: unknown) => unknown;\n  onClear: () => unknown;\n}\n\nconst SearchBar: FunctionalComponent<SearchBarProps> = (\n  props: SearchBarProps\n): h.JSX.Element => (\n  <div class={style.container}>\n    <input\n      type=\"text\"\n      class={style.textField}\n      placeholder={props.placeholderText}\n      value={props.filterText ?? ''}\n      onChange={props.onFilter}\n    />\n\n    <button type=\"button\" class={style.button} onClick={props.onClear}>\n      X\n    </button>\n  </div>\n);\n\nexport default SearchBar;\n","import { Activity } from '../types/Common/Activity';\n\nconst ActivityRowStyles = [\n  {\n    when: (row: { activity: Activity }): boolean =>\n      row.activity === 'preparing',\n    style: {\n      backgroundColor: 'rgba(141, 209, 157, 0.9)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity }): boolean => row.activity === 'graduate',\n    style: {\n      backgroundColor: 'rgba(123, 123, 123, 0.9)',\n      color: 'white',\n      '&:hover': {\n        cursor: 'not-allowed',\n      },\n    },\n  },\n];\n\nexport default ActivityRowStyles;\n","import { TableProps } from 'react-data-table-component';\nimport ActivityRowStyles from '../style/ActivityRowStyles';\nimport { Activity } from '../types/Common/Activity';\n\n// columns and data are empty, user should fill them when using DefaultDataTableProps\nconst DefaultDataTableProps = <\n  T extends { activity: Activity }\n>(): TableProps<T> => ({\n  columns: [],\n  data: [],\n  conditionalRowStyles: ActivityRowStyles,\n});\n\nexport default DefaultDataTableProps;\n","import { Fragment, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { getNationalityModifierState } from '../global/DisplayNationality';\nimport { NationalityModifier } from '../types/Common/NationalityModifier';\n\nexport const GetCurrentNationalitySpan = (): JSX.Element | null => {\n  const nationalityModifier: NationalityModifier =\n    getNationalityModifierState();\n\n  switch (nationalityModifier) {\n    case 'TW':\n    case 'HK':\n    case 'MY':\n      return (\n        <>\n          {' '}\n          (<Text id=\"text.onlyShowing\">only showing </Text>\n          <Text id={`nationalityTitle.${nationalityModifier}`}>\n            placeholder\n          </Text>{' '}\n          VTuber)\n        </>\n      );\n    case 'all':\n    default:\n      return null;\n  }\n};\n","import * as Api from '../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useMemo, useEffect } from 'preact/hooks';\nimport DataTable, { TableColumn } from 'react-data-table-component';\nimport DropDownList from '../../components/DropDownList';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport { CompactTableStyle } from '../../style/CompactTableStyle';\nimport { GroupColumn } from '../../tableTypes/GroupColumn';\nimport { NameColumn } from '../../tableTypes/NameColumn';\nimport { NationalityColumn } from '../../tableTypes/NationalityColumn';\nimport { PopularVideoColumn } from '../../tableTypes/PopularVideoColumn';\nimport { RankingColumn } from '../../tableTypes/RankingColumn';\nimport { GrowthData } from '../../types/Common/GrowthData';\nimport { YouTubeViewCountGrowthData } from '../../types/Common/YouTube/YouTubeViewCountGrowthData';\nimport { VTuberViewCountGrowthDisplayData } from '../../types/TableDisplayData/VTuberViewCountGrowthDisplayData';\nimport DefaultDataTableProps from '../../utils/DefaultDataTableProps';\nimport { GetCurrentNationalitySpan } from '../../utils/NationalityUtils';\nimport { GrowthDisplayDataToString } from '../../utils/NumberUtils';\nimport { VTuberViewCountToDisplay } from '../../utils/transform/ViewCountTransform';\nimport { GoToPage } from '../../utils/TypeSafeRouting';\nimport tableStyle from '../../style/DataTableStyle.module.css';\nimport { SortOrder } from '../../types/ApiTypes';\nimport ActivityRowStyles from '../../style/ActivityRowStyles';\nimport { VTuberViewCountGrowthDisplayDataFilterModel } from '../../types/FilterType/VTuberViewCountGrowthDisplayDataFilterModel';\nimport FilterWindow from '../../components/FilterWindow';\nimport { filterFunction } from '../../utils/FilterModelHelper';\n\nexport interface VTubersViewCountPageProps {\n  dictionary: Dictionary;\n  modifier: SortOrder;\n}\n\nconst VTubersViewCountPage: FunctionalComponent<VTubersViewCountPageProps> = (\n  props: VTubersViewCountPageProps\n) => {\n  document.title = `${props.dictionary.header.VTubersViewCount} | ${props.dictionary.header.title}`;\n\n  const columns: Array<TableColumn<VTuberViewCountGrowthDisplayData>> = [\n    {\n      ...RankingColumn(),\n      sortable: true,\n      width: '40px',\n    },\n    {\n      ...NameColumn(),\n      width: '200px',\n    },\n    {\n      name: (\n        <Text id=\"table.YouTubeTotalViewCount\">YouTube Total View Count</Text>\n      ),\n      selector: (row: { totalViewCount: number }): number => row.totalViewCount,\n      compact: true,\n      sortable: true,\n    },\n    {\n      name: <Text id=\"table._7DaysViewCountGrowth\">7 Days Growth</Text>,\n      cell: (row: { _7DaysGrowth: GrowthData }): string =>\n        GrowthDisplayDataToString(row._7DaysGrowth, props.dictionary.table),\n      compact: true,\n      right: true,\n    },\n    {\n      name: <Text id=\"table._30DaysViewCountGrowth\">30 Days Growth</Text>,\n      cell: (row: { _30DaysGrowth: GrowthData }): string =>\n        GrowthDisplayDataToString(row._30DaysGrowth, props.dictionary.table),\n      compact: true,\n      right: true,\n    },\n    {\n      ...PopularVideoColumn(),\n      width: '100px',\n    },\n    {\n      ...GroupColumn(),\n      width: '150px',\n    },\n    {\n      ...NationalityColumn(),\n      width: '125px',\n    },\n  ];\n\n  // search filter\n  const [data, setData] = useState<Array<VTuberViewCountGrowthDisplayData>>([]);\n  const [filterModel, setFilterModel] =\n    useState<VTuberViewCountGrowthDisplayDataFilterModel>({\n      name: null,\n      YouTubeId: null,\n      TwitchId: null,\n      group: null,\n      nationality: null,\n    });\n  const filteredData = data.filter((e) => filterFunction(e, filterModel));\n\n  const searchBarComponent = useMemo(() => {\n    const optionValue: Array<{\n      option: h.JSX.Element;\n      value: SortOrder;\n    }> = [\n      {\n        option: <Text id=\"table._7DaysViewCountGrowth\">7 Days Growth</Text>,\n        value: '7-days',\n      },\n      {\n        option: <Text id=\"table._30DaysViewCountGrowth\">30 Days Growth</Text>,\n        value: '30-days',\n      },\n    ];\n\n    const handleFilterWindow = (\n      filterModel: VTuberViewCountGrowthDisplayDataFilterModel\n    ): void => {\n      setFilterModel(filterModel);\n    };\n\n    const fieldPlaceHolderMappings: Map<string, string> = new Map<\n      string,\n      string\n    >([\n      ['name', props.dictionary.table.searchByDisplayName],\n      ['YouTubeId', props.dictionary.table.searchByYouTubeId],\n      ['TwitchId', props.dictionary.table.searchByTwitchId],\n      ['group', props.dictionary.table.searchByGroup],\n      ['nationality', props.dictionary.table.searchByNationality],\n    ]);\n\n    return (\n      <div class={tableStyle.searchBarGroup}>\n        <DropDownList\n          tipText={props.dictionary.table.sortingMethod}\n          value={props.modifier}\n          optionValue={optionValue}\n          onChange={(e: any) =>\n            GoToPage({\n              type: 'vtubers-view-count',\n              viewCountSortOrder: e.target.value,\n            })\n          }\n        />\n        <FilterWindow\n          filterModel={filterModel}\n          fieldPlaceHolderMappings={fieldPlaceHolderMappings}\n          openSearchText={props.dictionary.text.openSearch}\n          closeSearchText={props.dictionary.text.closeSearch}\n          onChange={handleFilterWindow}\n        />\n      </div>\n    );\n  }, [filterModel, props.modifier, props.dictionary]);\n  const [pending, setPending] = useState(true);\n\n  const _7DaysDescendingSort = <\n    T extends { YouTube: YouTubeViewCountGrowthData }\n  >(\n    rowA: T,\n    rowB: T\n  ): number => {\n    return rowB.YouTube._7DaysGrowth.diff - rowA.YouTube._7DaysGrowth.diff;\n  };\n\n  const _30DaysDescendingSort = <\n    T extends { YouTube: YouTubeViewCountGrowthData }\n  >(\n    rowA: T,\n    rowB: T\n  ): number => {\n    return rowB.YouTube._30DaysGrowth.diff - rowA.YouTube._30DaysGrowth.diff;\n  };\n\n  const GetSortingMethod = (sortBy: SortOrder) => {\n    switch (sortBy) {\n      case '7-days':\n        return _7DaysDescendingSort;\n      case '30-days':\n        return _30DaysDescendingSort;\n    }\n  };\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getVTubersViewCountChange({\n      sortBy: props.modifier,\n      count: '100',\n    }).then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .map((e) => e)\n          .sort(GetSortingMethod(props.modifier))\n          .map((e, index) => VTuberViewCountToDisplay(e, index + 1))\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h1>\n        <Text id=\"header.VTubersViewCount\">VTubers View Count Change</Text>\n        {GetCurrentNationalitySpan()}\n      </h1>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={filteredData}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        fixedHeader\n        pagination\n        paginationComponentOptions={props.dictionary.table.paginationOptions}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n        subHeader\n        subHeaderComponent={searchBarComponent}\n      />\n    </>\n  );\n};\n\nexport default VTubersViewCountPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"floating\":\"floating__uhu4Y\",\"floatingHidden\":\"floatingHidden__mvSUQ\",\"floatingShowing\":\"floatingShowing__nwzm5\"};","import { h } from 'preact';\nimport { useState } from 'preact/hooks';\nimport { trimOrNullOnEmpty } from '../../utils/StringUtils';\nimport SearchBar from '../SearchBar';\nimport style from './style.module.css';\n\nexport interface FilterWindowProps<FilterModel extends object> {\n  filterModel: FilterModel;\n  fieldPlaceHolderMappings: Map<string, string>;\n  openSearchText: string;\n  closeSearchText: string;\n  onChange?: (e: FilterModel) => void;\n}\n\nfunction FilterWindow<FilterModel extends object>(\n  props: FilterWindowProps<FilterModel>\n): JSX.Element {\n  const [isOpened, setIsOpened] = useState<boolean>(false);\n  const [filter, setFilter] = useState<FilterModel>(props.filterModel);\n\n  function handleOnChange(e: FilterModel): void {\n    if (props.onChange != null) {\n      props.onChange(e);\n    }\n  }\n\n  const createSearchBar = (key: string): JSX.Element => {\n    {\n      const keyTyped = key as keyof typeof filter;\n\n      const handleOnFilterChange = (e: string | null): void => {\n        const nullableString: string | null = trimOrNullOnEmpty(e);\n\n        setFilter({ ...filter, [keyTyped]: nullableString });\n        handleOnChange({ ...filter, [keyTyped]: nullableString });\n      };\n\n      return (\n        <SearchBar\n          key={key}\n          placeholderText={props.fieldPlaceHolderMappings.get(\n            keyTyped as string\n          )}\n          filterText={filter[keyTyped] as string | null}\n          onFilter={(e: any): void => handleOnFilterChange(e.target.value)}\n          onClear={(): void => handleOnFilterChange(null)}\n        />\n      );\n    }\n  };\n\n  const fields: Array<JSX.Element> = Object.keys(props.filterModel).map((key) =>\n    createSearchBar(key)\n  );\n\n  const ToggleButton = (): JSX.Element => (\n    <input\n      type=\"button\"\n      value={isOpened === true ? props.closeSearchText : props.openSearchText}\n      onClick={(): void => setIsOpened(!isOpened)}\n    />\n  );\n\n  const toggleFloatingClass = (): string => {\n    if (isOpened) return `${style.floating} ${style.floatingShowing}`;\n    else return `${style.floating} ${style.floatingHidden}`;\n  };\n\n  return (\n    <div>\n      <ToggleButton />\n      {isOpened === true ? (\n        <div class={toggleFloatingClass()}>{fields}</div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default FilterWindow;\n","export function trimOrNullOnEmpty(\n  value: string | null | undefined\n): string | null {\n  if (value === null || value === undefined) return null;\n\n  const trimmed = value.trim();\n\n  if (trimmed === '') return null;\n\n  return trimmed;\n}\n","import { VTuberViewCountGrowthData } from '../../types/ApiData/VTuberViewCountChangeData';\nimport { VTuberViewCountGrowthDisplayData } from '../../types/TableDisplayData/VTuberViewCountGrowthDisplayData';\n\nexport const VTuberViewCountToDisplay = (\n  e: VTuberViewCountGrowthData,\n  ranking: number\n): VTuberViewCountGrowthDisplayData => ({\n  id: e.id,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  YouTubeId: e.YouTube.id,\n  TwitchId: e.Twitch?.id,\n  totalViewCount: e.YouTube.totalViewCount,\n  _7DaysGrowth: e.YouTube._7DaysGrowth,\n  _30DaysGrowth: e.YouTube._30DaysGrowth,\n  popularVideo: e.popularVideo,\n  group: e.group,\n  nationality: e.nationality,\n  activity: e.activity,\n  ranking: ranking,\n});\n","import { TableColumn } from 'react-data-table-component';\n\nexport interface RankingColumnRowData {\n  ranking: number;\n}\n\nexport const RankingColumn = <\n  RowData extends RankingColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: '#',\n    selector: (row: RowData): number => row.ranking,\n    wrap: false,\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ShowVideoButton from '../components/ShowVideoButton';\nimport { VideoInfo } from '../types/Common/VideoInfo';\n\nexport interface PopularVideoColumnRowData {\n  popularVideo?: VideoInfo;\n}\n\nexport const PopularVideoColumn = <\n  RowData extends PopularVideoColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularVideo\">Popular Video</Text>,\n    cell: (row: RowData): JSX.Element | null =>\n      row.popularVideo !== undefined ? (\n        <ShowVideoButton popularVideo={row.popularVideo} />\n      ) : null,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchBarGroup\":\"R1T8+hwxvBovrVdGHizUFw==\"};"],"sourceRoot":""}