{"version":3,"sources":["webpack:///./routes/VTuber/index.tsx"],"names":["VTuberPage","props","_data$name","_data$name2","data","setData","useState","document","title","name","dictionary","header","useEffect","async","Api","id","then","res","VTuberFullToDisplay","VTuber","getVTuber","h","Fragment","Text","undefined","VTuberInformation","clickBehavior"],"mappings":"4FAAA,2GA4CeA,UA5BbC,IACG,IAAAC,EAAAC,EACH,MAAOC,EAAMC,GAAWC,cAExBC,SAASC,MAAS,GAAY,QAAZN,EAAEE,aAAI,EAAJA,EAAMK,YAAI,IAAAP,IAAI,QAAQD,EAAMS,WAAWC,OAAOH,QAYlE,OAJAI,aAAU,KANQC,iBACVC,IAAcb,EAAMc,IAAIC,MAAMC,IAClCZ,EAAQa,YAAoBD,EAAIb,KAAKe,QAAQ,GAC7C,EAIFC,EAAW,GACV,IAGDC,YAAAC,EAAA,KACED,YAAA,UACEA,YAAA,YAAM,IAAY,QAAXlB,EAACC,aAAI,EAAJA,EAAMK,YAAI,IAAAN,IAAIkB,YAACE,IAAI,CAACR,GAAG,gBAAe,cAAkB,WAExDS,IAATpB,EACCiB,YAACI,IAAiB,CAACN,OAAQf,EAAMsB,cAAc,aAC7C,KACH,C","file":"route-VTuber.chunk.c1a63.esm.js","sourcesContent":["import { Fragment, FunctionalComponent, h } from 'preact';\nimport { useEffect, useState } from 'preact/hooks';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport * as Api from '../../services/ApiService';\nimport '../../style/index.css';\nimport VTuberInformation from '../../components/VTuberInformation';\nimport { VTuberDisplayFullData } from '../../types/TableDisplayData/VTuberDisplayFullData';\nimport { VTuberFullToDisplay } from '../../utils/transform/FullTransform';\nimport { Text } from 'preact-i18n';\n\nexport interface VTuberPageProps {\n  id: string;\n  dictionary: Dictionary;\n}\n\nconst VTuberPage: FunctionalComponent<VTuberPageProps> = (\n  props: VTuberPageProps\n) => {\n  const [data, setData] = useState<VTuberDisplayFullData>();\n\n  document.title = `${data?.name ?? ''} | ${props.dictionary.header.title}`;\n\n  const getVTuber = async (): Promise<void> => {\n    await Api.getVTuber(props.id).then((res) => {\n      setData(VTuberFullToDisplay(res.data.VTuber));\n    });\n  };\n\n  useEffect(() => {\n    getVTuber();\n  }, []);\n\n  return (\n    <>\n      <h1>\n        <span> {data?.name ?? <Text id=\"text.loading\">Loading...</Text>} </span>\n      </h1>\n      {data !== undefined ? (\n        <VTuberInformation VTuber={data} clickBehavior=\"noAction\" />\n      ) : null}\n    </>\n  );\n};\n\nexport default VTuberPage;\n"],"sourceRoot":""}