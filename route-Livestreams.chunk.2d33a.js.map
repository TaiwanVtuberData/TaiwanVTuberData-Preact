{"version":3,"sources":["webpack:///./tableTypes/VideoColumn.tsx","webpack:///./components/ProfileImagePopup/style.module.css","webpack:///./components/ProfileImagePopup/index.tsx","webpack:///./components/SearchBar/style.module.css","webpack:///./components/SearchBar/index.tsx","webpack:///./style/ActivityRowStyles.ts","webpack:///./utils/DefaultDataTableProps.ts","webpack:///./utils/NationalityUtils.tsx","webpack:///./routes/Livestreams/index.tsx","webpack:///./style/DataTableStyle.module.css","webpack:///./utils/transform/LivestreamTransform.ts"],"names":["VideoColumn","name","h","Text","id","cell","row","VideoLink","thumbnailUrl","videoUrl","ProfileImagePopup","props","class","style","ProfileImage","VTuberId","imgUrl","clickBehavior","SearchBar","_props$filterText","type","placeholder","placeholderText","value","filterText","onChange","onFilter","onClick","onClear","ActivityRowStyles","when","activity","backgroundColor","cursor","undefined","debutInfo","hasDebutInfo","isRecentlyDebut","color","DefaultDataTableProps","columns","data","conditionalRowStyles","GetCurrentNationalitySpan","nationalityModifier","getNationalityModifierState","Fragment","concat","LivestreamsPage","document","title","dictionary","header","livestreaming","_objectSpread","width","selector","getFormattedDateTime","startTime","sortable","wrap","_row$title","hide","Media","SM","_useState2","_slicedToArray","useState","setData","_useState4","filterName","setFilterName","_useState6","filterTitle","setFilterTitle","_useState8","resetPaginationToggle","setResetPaginationToggle","filteredData","filter","item","toLowerCase","includes","searchBarComponent","useMemo","tableStyle","searchBarGroup","table","searchByDisplayName","e","target","searchByTitle","_useState10","pending","setPending","getLivestreams","_ref","Api","then","res","arrayData","livestreams","map","index","LivestreamToDisplayData","sort","a","b","getTime","setTimeout","_document$getElementB","currentTime","Date","setHours","getHours","closestToNow","findClosestSortedDateIndex","getElementById","Math","max","scrollIntoView","behavior","apply","arguments","useEffect","DataTable","_extends","customStyles","rows","height","headCells","paddingLeft","paddingRight","cells","fixedHeader","progressComponent","progressPending","subHeader","subHeaderComponent"],"mappings":"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","file":"route-Livestreams.chunk.2d33a.js","sourcesContent":["import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport VideoLink from '../components/VideoLink';\n\nexport interface VideoColumnRowData {\n  thumbnailUrl: string;\n  videoUrl: string;\n}\n\nexport const VideoColumn = <\n  RowData extends VideoColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.video\">Video</Text>,\n    cell: (row: RowData): JSX.Element | null =>\n      VideoLink({\n        thumbnailUrl: row.thumbnailUrl,\n        videoUrl: row.videoUrl,\n      }),\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__vr1DG\",\"profileImageFlex\":\"profileImageFlex__4VERG\",\"nameFlex\":\"nameFlex__WFOO9\"};","import { FunctionalComponent, h } from 'preact';\nimport ProfileImage from '../ProfileImage';\nimport style from './style.module.css';\n\nexport interface ProfileImagePopupProps {\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n}\n\nconst ProfileImagePopup: FunctionalComponent<ProfileImagePopupProps> = (\n  props: ProfileImagePopupProps\n): h.JSX.Element => {\n  return (\n    <div class={style.container}>\n      <div class={style.profileImageFlex}>\n        <ProfileImage\n          VTuberId={props.VTuberId}\n          imgUrl={props.imgUrl}\n          clickBehavior=\"popup\"\n        />\n      </div>\n      <span class={style.nameFlex}>{props.name}</span>\n    </div>\n  );\n};\n\nexport default ProfileImagePopup;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__1lsi6\",\"textField\":\"textField__bDpXR\",\"button\":\"button__maFzS\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface SearchBarProps {\n  placeholderText?: string;\n  filterText: string | null;\n  onFilter: (e: unknown) => unknown;\n  onClear: () => unknown;\n}\n\nconst SearchBar: FunctionalComponent<SearchBarProps> = (\n  props: SearchBarProps\n): h.JSX.Element => (\n  <div class={style.container}>\n    <input\n      type=\"text\"\n      class={style.textField}\n      placeholder={props.placeholderText}\n      value={props.filterText ?? ''}\n      onChange={props.onFilter}\n    />\n\n    <button type=\"button\" class={style.button} onClick={props.onClear}>\n      X\n    </button>\n  </div>\n);\n\nexport default SearchBar;\n","import { Activity } from '../types/Common/Activity';\nimport { DebutInfo } from '../types/DebutInfo';\n\nconst ActivityRowStyles = [\n  {\n    when: (row: { activity: Activity }): boolean =>\n      row.activity === 'preparing',\n    style: {\n      backgroundColor: 'rgba(141, 209, 157, 0.9)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity; debutInfo?: DebutInfo }): boolean =>\n      row.activity === 'active' &&\n      row.debutInfo !== undefined &&\n      row.debutInfo.hasDebutInfo === true &&\n      row.debutInfo.isRecentlyDebut === true,\n    style: {\n      backgroundColor: 'rgba(156, 205, 196, 0.5)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity }): boolean => row.activity === 'graduate',\n    style: {\n      backgroundColor: 'rgba(123, 123, 123, 0.9)',\n      color: 'white',\n      '&:hover': {\n        cursor: 'not-allowed',\n      },\n    },\n  },\n];\n\nexport default ActivityRowStyles;\n","import { TableProps } from 'react-data-table-component';\nimport ActivityRowStyles from '../style/ActivityRowStyles';\nimport { Activity } from '../types/Common/Activity';\n\n// columns and data are empty, user should fill them when using DefaultDataTableProps\nconst DefaultDataTableProps = <\n  T extends { activity: Activity }\n>(): TableProps<T> => ({\n  columns: [],\n  data: [],\n  conditionalRowStyles: ActivityRowStyles,\n});\n\nexport default DefaultDataTableProps;\n","import { Fragment, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { getNationalityModifierState } from '../global/DisplayNationality';\nimport { NationalityModifier } from '../types/Common/NationalityModifier';\n\nexport const GetCurrentNationalitySpan = (): JSX.Element | null => {\n  const nationalityModifier: NationalityModifier =\n    getNationalityModifierState();\n\n  switch (nationalityModifier) {\n    case 'TW':\n    case 'HK':\n    case 'MY':\n      return (\n        <>\n          {' '}\n          (<Text id=\"text.onlyShowing\">only showing </Text>\n          <Text id={`nationalityTitle.${nationalityModifier}`}>\n            placeholder\n          </Text>{' '}\n          VTuber)\n        </>\n      );\n    case 'all':\n    default:\n      return null;\n  }\n};\n","import * as Api from '../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useMemo, useEffect } from 'preact/hooks';\nimport DataTable, {\n  Media,\n  TableColumn,\n  TableStyles,\n} from 'react-data-table-component';\nimport ProfileImagePopup from '../../components/ProfileImagePopup';\nimport SearchBar from '../../components/SearchBar';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport { VideoColumn } from '../../tableTypes/VideoColumn';\nimport { LivestreamDisplayData } from '../../types/TableDisplayData/LivestreamDisplayData';\nimport {\n  findClosestSortedDateIndex,\n  getFormattedDateTime,\n} from '../../utils/DateTimeUtils';\nimport DefaultDataTableProps from '../../utils/DefaultDataTableProps';\nimport { GetCurrentNationalitySpan } from '../../utils/NationalityUtils';\nimport { LivestreamToDisplayData } from '../../utils/transform/LivestreamTransform';\nimport tableStyle from '../../style/DataTableStyle.module.css';\n\nexport interface LivestreamsPageProps {\n  dictionary: Dictionary;\n}\n\nconst LivestreamsPage: FunctionalComponent<LivestreamsPageProps> = (\n  props: LivestreamsPageProps\n) => {\n  document.title = `${props.dictionary.header.livestreaming} | ${props.dictionary.header.title}`;\n\n  const columns: Array<TableColumn<LivestreamDisplayData>> = [\n    {\n      name: <Text id=\"table.displayName\">Name</Text>,\n      cell: (row: {\n        VTuberId: string;\n        imgUrl?: string;\n        name: string;\n      }): JSX.Element => (\n        <ProfileImagePopup\n          VTuberId={row.VTuberId}\n          imgUrl={row.imgUrl}\n          name={row.name}\n        />\n      ),\n    },\n    {\n      ...VideoColumn(),\n      width: '200px',\n    },\n    {\n      name: <Text id=\"table.startTime\">Start Time</Text>,\n      selector: (row: { startTime: Date }): string =>\n        getFormattedDateTime(row.startTime),\n      sortable: true,\n      wrap: true,\n    },\n    {\n      name: <Text id=\"table.title\">Title</Text>,\n      selector: (row: { title?: string }): string => row.title ?? '',\n      wrap: true,\n      hide: Media.SM,\n    },\n  ];\n\n  // search filter\n  const [data, setData] = useState<Array<LivestreamDisplayData>>([]);\n  const [filterName, setFilterName] = useState<string>('');\n  const [filterTitle, setFilterTitle] = useState<string>('');\n  const [resetPaginationToggle, setResetPaginationToggle] =\n    useState<boolean>(false);\n  const filteredData = data\n    .filter(\n      (item) =>\n        item.name && item.name.toLowerCase().includes(filterName.toLowerCase())\n    )\n    .filter((item) => {\n      if (item.title === undefined) return true;\n      return item.title.toLowerCase().includes(filterTitle.toLowerCase());\n    });\n\n  const searchBarComponent = useMemo(() => {\n    const handleClearName = (): void => {\n      if (filterName) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterName('');\n      }\n    };\n\n    const handleClearTitle = (): void => {\n      if (filterTitle) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterTitle('');\n      }\n    };\n\n    return (\n      <div class={tableStyle.searchBarGroup}>\n        <SearchBar\n          placeholderText={props.dictionary.table.searchByDisplayName}\n          onFilter={(e: any): void => setFilterName(e.target.value)}\n          onClear={handleClearName}\n          filterText={filterName}\n        />\n        <SearchBar\n          placeholderText={props.dictionary.table.searchByTitle}\n          onFilter={(e: any): void => setFilterTitle(e.target.value)}\n          onClear={handleClearTitle}\n          filterText={filterTitle}\n        />\n      </div>\n    );\n  }, [filterName, filterTitle, resetPaginationToggle, props.dictionary]);\n  const [pending, setPending] = useState(true);\n\n  const getLivestreams = async (): Promise<void> => {\n    await Api.getLivestreams('all').then((res) => {\n      const arrayData: Array<LivestreamDisplayData> = res.data.livestreams\n        .map((e) => e)\n        .map((e, index) => LivestreamToDisplayData(e, index))\n        // what a great Date API, thanks javascript\n        .sort((a, b) => a.startTime.getTime() - b.startTime.getTime());\n      // thanks to JavaScript sorting being mutable, I have to convert ReadonlyArray to Array first\n      setData(arrayData);\n      setPending(false);\n\n      // TODO: this is a hack to find the closest livestream\n      setTimeout(() => {\n        // Note: document.getElementById('row-{index}') only work because array data id is set to their index\n        const currentTime = new Date();\n        currentTime.setHours(currentTime.getHours() - 1);\n        const closestToNow = findClosestSortedDateIndex(arrayData, currentTime);\n\n        // scroll to best row - 1 because the header will block the full view of best row\n        document\n          .getElementById(`row-${Math.max(0, closestToNow - 1)}`)\n          ?.scrollIntoView({ behavior: 'smooth' });\n      }, 500);\n    });\n  };\n\n  useEffect(() => {\n    getLivestreams();\n  }, []);\n\n  const customStyles: TableStyles = {\n    rows: {\n      style: {\n        height: '120px', // fix row height so scrolling won't be affected by image not rendered\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '5px', // override the cell padding for head cells\n        paddingRight: '5px',\n      },\n    },\n    cells: {\n      style: {\n        paddingLeft: '5px', // override the cell padding for data cells\n        paddingRight: '5px',\n      },\n    },\n  };\n\n  return (\n    <>\n      <h1>\n        <Text id=\"header.livestreaming\">Streaming Now</Text>\n        {GetCurrentNationalitySpan()}\n      </h1>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={filteredData}\n        customStyles={customStyles}\n        fixedHeader\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n        subHeader\n        subHeaderComponent={searchBarComponent}\n      />\n    </>\n  );\n};\n\nexport default LivestreamsPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchBarGroup\":\"R1T8+hwxvBovrVdGHizUFw==\"};","import { LivestreamData } from '../../types/ApiData/LivestreamData';\nimport { LivestreamDisplayData } from '../../types/TableDisplayData/LivestreamDisplayData';\n\nexport const LivestreamToDisplayData = (\n  e: LivestreamData,\n  index: number\n): LivestreamDisplayData => ({\n  id: index,\n  VTuberId: e.id,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  title: e.title,\n  thumbnailUrl: e.thumbnailUrl,\n  videoUrl: e.videoUrl,\n  startTime: new Date(e.startTime),\n});\n"],"sourceRoot":""}