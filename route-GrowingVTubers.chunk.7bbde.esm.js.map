{"version":3,"sources":["webpack:///./utils/transform/GrowthTransform.ts","webpack:///./utils/transform/DebutStringToDebutInfo.ts","webpack:///./style/CompactTableStyle.ts","webpack:///./global/TodayDate.ts","webpack:///./tableTypes/NameColumn.tsx","webpack:///./tableTypes/_7DaysGrowthColumn.tsx","webpack:///./tableTypes/GroupColumn.tsx","webpack:///./tableTypes/_30DaysGrowthColumn.tsx","webpack:///./components/ProfileImagePopup/style.module.css","webpack:///./components/ProfileImagePopup/index.tsx","webpack:///./utils/NumberUtils.ts","webpack:///./utils/sort/GrowthSort.ts","webpack:///./tableTypes/NationalityColumn.tsx","webpack:///./utils/FilterModelHelper.ts","webpack:///./components/SearchBar/style.module.css","webpack:///./components/SearchBar/index.tsx","webpack:///./style/ActivityRowStyles.ts","webpack:///./utils/DefaultDataTableProps.ts","webpack:///./utils/NationalityUtils.tsx","webpack:///./routes/GrowingVTubers/index.tsx","webpack:///./tableTypes/YouTubeSubscriberColumn.tsx","webpack:///./components/FilterWindow/style.module.css","webpack:///./components/FilterWindow/index.tsx","webpack:///./utils/StringUtils.ts","webpack:///./components/ToolTip/style.module.css","webpack:///./components/ToolTip/index.tsx","webpack:///./tableTypes/PopularVideoColumn.tsx","webpack:///./utils/transform/BasicTransform.ts","webpack:///./style/DataTableStyle.module.css","webpack:///./components/QuestionMarkToolTip/style.module.css","webpack:///./components/QuestionMarkToolTip/index.tsx"],"names":["growthDataToDisplayData","e","subCount","_objectSpread","percentage","undefined","diff","VTuberGrowthToDisplay","VTuberBasicToDisplay","YouTubeSubscriber","YouTube","subscriber","_7DaysGrowth","count","_30DaysGrowth","maybeDebutStringToDebutInfo","debutString","hasDebutInfo","debutStringToDebutInfo","debutDate","isToday","TODAY_DATE_STRING","isRecentlyDebut","dateDiffInDays","dateStringToDate","TIMEZONE_DIFF_IN_HOUR","TODAY_DATE","CompactTableStyle","headCells","style","paddingLeft","paddingRight","cells","tryParseInteger","process","getDateAfterTimezoneAdjustment","Date","getISODateString","NameColumn","name","h","Text","id","cell","row","ProfileImagePopup","VTuberId","imgUrl","_7DaysGrowthColumn","tableTranslation","GrowthDisplayDataToString","omit","ENFORCE_YOUTUBE_COMPLIANCE","GroupColumn","group","href","GetRoute","type","_30DaysGrowthColumn","props","class","ProfileImage","clickBehavior","PrependSign","value","valueToPercentString","toFixed","recordType","noRecord","atLeast","str","defaultValue","parsedVal","parseInt","isNaN","_7DaysGrowthSort","rowA","rowB","aCount","bCount","_30DaysGrowthSort","NationalityColumn","selector","_row$nationality","nationality","filterFunction","targetModel","filterModel","Object","entries","map","entry","target","filter","toLowerCase","includes","some","SearchBar","_props$filterText","placeholder","placeholderText","filterText","onChange","onFilter","onClick","onClear","ActivityRowStyles","when","activity","backgroundColor","cursor","debutInfo","color","DefaultDataTableProps","columns","data","conditionalRowStyles","GetCurrentNationalitySpan","nationalityModifier","getNationalityModifierState","Fragment","GrowingVTubersPage","document","title","dictionary","header","growingVTubers","width","YouTubeSubscriberColumn","sortable","table","right","sortFunction","PopularVideoColumn","setData","useState","setFilterModel","YouTubeId","TwitchId","filteredData","searchBarComponent","useMemo","fieldPlaceHolderMappings","Map","searchByDisplayName","searchByYouTubeId","searchByTwitchId","searchByGroup","searchByNationality","tableStyle","searchBarGroup","FilterWindow","openSearchText","text","openSearch","closeSearchText","closeSearch","pending","setPending","useEffect","async","Api","then","res","VTubers","sort","a","b","getVTubers","QuestionMarkToolTip","fontSize","DataTable","_extends","customStyles","fixedHeader","pagination","paginationComponentOptions","paginationOptions","progressComponent","progressPending","subHeader","subHeaderComponent","isOpened","setIsOpened","setFilter","createSearchBar","key","keyTyped","handleOnFilterChange","nullableString","trimmed","trim","trimOrNullOnEmpty","handleOnChange","get","fields","keys","ToggleButton","ToolTip","children","popularVideo","ShowVideoButton","_e$YouTube","_e$YouTube2","_e$Twitch","_e$Twitch2","Twitch","TwitchFollower","follower"],"mappings":"upCAQA,MAAMA,EAA0BA,CAC9BC,EACAC,IAAiBC,IAAA,GAEdF,GAAC,IACJG,gBAAyBC,IAAbH,GAAuC,IAAbA,EAAiBD,EAAEK,KAAOJ,EAAW,IAGhEK,EACXN,GAAmBE,IAAA,GAEhBK,YAAqBP,IAAE,IAC1BQ,kBAAmBR,EAAES,QAAQC,WAC7BC,aAAcZ,EACZC,EAAES,QAAQE,aACVX,EAAES,QAAQC,WAAWE,OAEvBC,cAAed,EACbC,EAAES,QAAQI,cACVb,EAAES,QAAQC,WAAWE,Q,sCC3BzB,gGAQO,MAAME,EACXC,GAEIA,QACK,CAAEC,cAAc,GAElBC,EAAuBF,GAGnBE,EAA0BF,IAC9B,CACLC,cAAc,EACdE,UAAWH,EACXI,QAASJ,IAAgBK,IACzBC,gBACEC,YACEC,YAAiBR,EAAaS,KAC9BC,KACE,I,sCCxBV,kCAAO,MAAMC,EAAiC,CAC5CC,UAAW,CACTC,MAAO,CACLC,YAAa,MACbC,aAAc,QAGlBC,MAAO,CACLH,MAAO,CACLC,YAAa,MACbC,aAAc,Q,sCCZpB,kIAMA,MAEaN,EAAgCQ,YAC3CC,IAHoC,GAOzBR,EAAmBS,YAC9B,IAAIC,KACJX,GAGWJ,EAA4BgB,YACvCX,EACAD,E,sCCpBF,0EAWO,MAAMa,EAAaA,KAGjB,CACLC,KAAMC,YAACC,IAAI,CAACC,GAAG,qBAAoB,QACnCC,KAAOC,GACLJ,YAACK,IAAiB,CAChBC,SAAUF,EAAIF,GACdK,OAAQH,EAAIG,OACZR,KAAMK,EAAIL,Q,sCCpBlB,sFAWO,MAAMS,EAEXC,IAIO,CACLV,KAAMC,YAACC,IAAI,CAACC,GAAG,sBAAqB,2BACpCC,KAAOC,GACLM,YAA0BN,EAAIhC,aAAcqC,GAC9CE,KAAMC,K,sCCrBV,0EASO,MAAMC,EAAcA,KAGlB,CACLd,KAAMC,YAACC,IAAI,CAACC,GAAG,eAAc,SAC7BC,KAAOC,QACSvC,IAAduC,EAAIU,MACFd,YAAA,KAAGe,KAAMC,YAAS,CAAEC,KAAM,QAASlB,KAAMK,EAAIU,SAAWV,EAAIU,OAC1D,M,oCCjBV,0EAUO,MAAMI,EAEXT,IAIO,CACLV,KAAMC,YAACC,IAAI,CAACC,GAAG,uBAAsB,4BACrCC,KAAOC,GACLM,YAA0BN,EAAI9B,cAAemC,I,gEClBpC,EAAa,mBAAb,EAAmD,0BAAnD,EAAwF,kBC0BxFJ,IAhBbc,GAGEnB,YAAA,OAAKoB,MAAO/B,GACVW,YAAA,OAAKoB,MAAO/B,GACVW,YAACqB,IAAY,CACXf,SAAUa,EAAMb,SAChBC,OAAQY,EAAMZ,OACde,cAAc,WAGlBtB,YAAA,QAAMoB,MAAO/B,GAAiB8B,EAAMpB,M,oCCpB1C,oEAAO,MAAMwB,EAAeC,GACtBA,EAAQ,EAAW,IAAGA,IACtBA,EAAQ,EAAW,GAAEA,IAElB,IAGHC,EAAwBD,IACnB,IAARA,GAAaE,QAAQ,GAEXhB,EAA4BA,CACvCjD,EACAgD,KAEA,GAAIhD,EAAEG,WACJ,OAAQH,EAAEkE,YACR,IAAK,OACH,OAAOlB,EAAiBmB,SAC1B,IAAK,UACH,MAAQ,GAAEnB,EAAiBoB,WAAWN,EACpC9D,EAAEK,UACE2D,EAAqBhE,EAAEG,gBAC/B,IAAK,OACH,MAAQ,GAAE2D,EAAY9D,EAAEK,UAAU2D,EAChChE,EAAEG,gBAKV,OAAQH,EAAEkE,YACR,IAAK,OACH,OAAOlB,EAAiBmB,SAC1B,IAAK,UACH,MAAQ,GAAEnB,EAAiBoB,WAAWN,EAAY9D,EAAEK,QACtD,IAAK,OACH,MAAQ,GAAEyD,EAAY9D,EAAEK,QAC5B,EAGW2B,EAAkBA,CAC7BqC,EACAC,KAEA,QAAYlE,IAARiE,EAAmB,CACrB,MAAME,EAAYC,SAASH,EAAK,IAChC,IAAyB,IAArBI,MAAMF,GACR,OAAOA,CAEX,CAEA,OAAOD,CAAY,C,oCCjDrB,oEACO,MAAMI,EAERA,CAACC,EAAMC,KACV,MAAMC,EAASF,EAAKhE,aAAaR,WAC3B2E,EAASF,EAAKjE,aAAaR,WAEjC,OAAI0E,EAASC,EAAe,EAExBA,EAASD,GAAgB,EAEtB,CAAC,EAGGE,EAERA,CAACJ,EAAMC,KACV,MAAMC,EAASF,EAAK9D,cAAcV,WAC5B2E,EAASF,EAAK/D,cAAcV,WAElC,OAAI0E,EAASC,EAAe,EAExBA,EAASD,GAAgB,EAEtB,CAAC,C,sCC3BV,8DAQO,MAAMG,EAAoBA,KAGxB,CACL1C,KAAMC,YAACC,IAAI,CAACC,GAAG,qBAAoB,eACnCwC,SAAWtC,IAAY,IAAAuC,EAAA,OAA4B,QAA5BA,EAAavC,EAAIwC,mBAAW,IAAAD,IAAI,EAAE,G,sCCbtD,SAASE,EAGdC,EAAyBC,GAsBzB,OArBeC,OAAOC,QAAQF,GAAaG,KAAKC,IAC9C,MACMC,EAASN,EADEK,EAAM,IAGjBE,EAASF,EAAM,GAGrB,OAAe,OAAXE,GAKAD,SAAsD,KAAXA,GAIxCA,EAAOE,cAAcC,SAASF,EAAOC,cAAc,IAG1BE,MAAM/F,IAAY,IAANA,GAGhD,CA1BA,iC,oDCCe,EAAa,mBAAb,EAA4C,mBAA5C,EAAwE,gBC2BxEgG,IAjBbtC,IAAqB,IAAAuC,EAAA,OAErB1D,YAAA,OAAKoB,MAAO/B,GACVW,YAAA,SACEiB,KAAK,OACLG,MAAO/B,EACPsE,YAAaxC,EAAMyC,gBACnBpC,MAAuB,QAAlBkC,EAAEvC,EAAM0C,kBAAU,IAAAH,IAAI,GAC3BI,SAAU3C,EAAM4C,WAGlB/D,YAAA,UAAQiB,KAAK,SAASG,MAAO/B,EAAc2E,QAAS7C,EAAM8C,SAAS,KAG/D,C,kCCcOC,IApCW,CACxB,CACEC,KAAO/D,GACY,cAAjBA,EAAIgE,SACN/E,MAAO,CACLgF,gBAAiB,2BACjB,UAAW,CACTC,OAAQ,aAId,CACEH,KAAO/D,GACY,WAAjBA,EAAIgE,eACcvG,IAAlBuC,EAAImE,YAC2B,IAA/BnE,EAAImE,UAAU9F,eACoB,IAAlC2B,EAAImE,UAAUzF,gBAChBO,MAAO,CACLgF,gBAAiB,2BACjB,UAAW,CACTC,OAAQ,aAId,CACEH,KAAO/D,GAA0D,aAAjBA,EAAIgE,SACpD/E,MAAO,CACLgF,gBAAiB,2BACjBG,MAAO,QACP,UAAW,CACTF,OAAQ,iB,oCChChB,gBAYeG,IAReA,KAAA,CAG5BC,QAAS,GACTC,KAAM,GACNC,qBAAsBV,K,qCCVxB,sFAKO,MAAMW,EAA4BA,KACvC,MAAMC,EACJC,cAEF,OAAQD,GACN,IAAK,KACL,IAAK,KACL,IAAK,KACH,OACE9E,YAAAgF,EAAA,KACG,IAAI,IACJhF,YAACC,IAAI,CAACC,GAAG,oBAAmB,iBAC7BF,YAACC,IAAI,CAACC,GAAK,oBAAmB4E,KAAuB,eAE7C,IAAI,WAKlB,QACE,OAAO,KACX,C,0lDC2IaG,UAlIb9D,IAEA+D,SAASC,MAAS,GAAEhE,EAAMiE,WAAWC,OAAOC,oBAAoBnE,EAAMiE,WAAWC,OAAOF,QAExF,MAAMT,EAAuD,CAAA/G,IAAA,GAEtDmC,eAAY,IACfyF,MAAO,UAAO5H,IAAA,GAGX6H,eAAyB,IAC5BC,UAAU,IAAI9H,IAAA,GAGX6C,YAAmBW,EAAMiE,WAAWM,QAAM,IAC7CC,OAAO,EACPF,UAAU,EACVG,aAAczD,IACdxB,KAAMC,MAA0BjD,IAAA,GAG7BuD,YAAoBC,EAAMiE,WAAWM,QAAM,IAC9CC,OAAO,EACPF,UAAU,EACVG,aAAcpD,IACd7B,KAAMC,MAA0BjD,IAAA,GAG7BkI,eAAoB,IACvBN,MAAO,UAAO5H,IAAA,GAGXkD,eAAa,IAChB0E,MAAO,UAAO5H,IAAA,GAGX8E,eAAmB,IACtB8C,MAAO,YAKJZ,EAAMmB,GAAWC,YAAyC,KAC1DhD,EAAaiD,GAClBD,YAA6C,CAC3ChG,KAAM,KACNkG,UAAW,KACXC,SAAU,KACVpF,MAAO,KACP8B,YAAa,OAEXuD,EAAexB,EAAKtB,QAAQ5F,GAAMoF,YAAepF,EAAGsF,KAEpDqD,EAAqBC,aAAQ,KACjC,MAMMC,EAAgD,IAAIC,IAGxD,CACA,CAAC,OAAQpF,EAAMiE,WAAWM,MAAMc,qBAChC,CAAC,YAAarF,EAAMiE,WAAWM,MAAMe,mBACrC,CAAC,WAAYtF,EAAMiE,WAAWM,MAAMgB,kBACpC,CAAC,QAASvF,EAAMiE,WAAWM,MAAMiB,eACjC,CAAC,cAAexF,EAAMiE,WAAWM,MAAMkB,uBAGzC,OACE5G,YAAA,OAAKoB,MAAOyF,IAAWC,gBACrB9G,YAAC+G,IAAY,CACXhE,YAAaA,EACbuD,yBAA0BA,EAC1BU,eAAgB7F,EAAMiE,WAAW6B,KAAKC,WACtCC,gBAAiBhG,EAAMiE,WAAW6B,KAAKG,YACvCtD,SAvBJf,IAEAiD,EAAejD,EAAY,IAuBrB,GAEP,CAACA,EAAa5B,EAAMiE,cAEhBiC,EAASC,GAAcvB,aAAS,GAiBvC,OAJAwB,aAAU,KAXSC,iBACXC,IAAsB,OAAOC,MAAMC,IACvC7B,EACE6B,EAAIhD,KAAKiD,QAAQ1E,KAAKzF,GAAMA,IACzByF,KAAKzF,GAAMM,YAAsBN,KACjCoK,MAAK,CAACC,EAAGC,IAAMA,EAAE3J,aAAaR,WAAakK,EAAE1J,aAAaR,cAE/D0J,GAAW,EAAM,GACjB,EAIFU,EAAY,GACX,IAGDhI,YAAAgF,EAAA,KACEhF,YAAA,UACEA,YAACC,IAAI,CAACC,GAAG,yBAAwB,mBAChC2E,cACD7E,YAACiI,IAAmB,CAClB1C,MAAM,QACN2C,SAAS,OACTjB,KAAMjH,YAACC,IAAI,CAACC,GAAG,0BAAyB,mBAG5CF,YAACmI,IAASC,EAAA,GACJ3D,IAAqB,CACzBC,QAASA,EACTC,KAAMwB,EACNvB,qBAAsBV,IACtBmE,aAAclJ,IACdmJ,aAAW,EACXC,YAAU,EACVC,2BAA4BrH,EAAMiE,WAAWM,MAAM+C,kBACnDC,kBAAmB1I,YAACC,IAAI,CAACC,GAAG,gBAAe,cAC3CyI,gBAAiBtB,EACjBuB,WAAS,EACTC,mBAAoBzC,KAErB,C,mECjKP,8DASO,MAAMZ,EAA0BA,KAG9B,CACLzF,KAAMC,YAACC,IAAI,CAACC,GAAG,gCAA+B,uBAC9CwC,SAAWtC,GAAyBA,EAAInC,kBAAkBI,O,mlCCb/C,EAAY,kBAAZ,EAA+C,wBAA/C,EAAyF,yBC6EzF0I,IAhEf,SACE5F,GAEA,MAAO2H,EAAUC,GAAehD,aAAkB,IAC3C1C,EAAQ2F,GAAajD,YAAsB5E,EAAM4B,aAQlDkG,EAAmBC,IACvB,CACE,MAAMC,EAAWD,EAEXE,EAAwB3L,IAC5B,MAAM4L,EC/BP,SACL7H,GAEA,GAAIA,QAAuC,OAAO,KAElD,MAAM8H,EAAU9H,EAAM+H,OAEtB,MAAgB,KAAZD,EAAuB,KAEpBA,CACT,CDqB8CE,CAAkB/L,GAExDuL,EAASrL,IAAC,CAAC,EAAI0F,GAAM,IAAE,CAAC8F,GAAWE,KAbzC,SAAwB5L,GACA,MAAlB0D,EAAM2C,UACR3C,EAAM2C,SAASrG,EAEnB,CAUMgM,CAAc9L,IAAC,CAAC,EAAI0F,GAAM,IAAE,CAAC8F,GAAWE,IAAiB,EAG3D,OACErJ,YAACyD,IAAS,CACRyF,IAAKA,EACLtF,gBAAiBzC,EAAMmF,yBAAyBoD,IAC9CP,GAEFtF,WAAYR,EAAO8F,GACnBpF,SAAWtG,GAAiB2L,EAAqB3L,EAAE2F,OAAO5B,OAC1DyC,QAASA,IAAYmF,EAAqB,OAGhD,GAGIO,EAA6B3G,OAAO4G,KAAKzI,EAAM4B,aAAaG,KAAKgG,GACrED,EAAgBC,KAgBlB,OACElJ,YAAA,WACEA,aAfiB6J,IACnB7J,YAAA,SACEiB,KAAK,SACLO,OAAoB,IAAbsH,EAAoB3H,EAAMgG,gBAAkBhG,EAAM6F,eACzDhD,QAASA,IAAY+E,GAAaD,MAWrB,OACC,IAAbA,EACC9I,YAAA,OAAKoB,MARL0H,EAAkB,GAAEzJ,KAAkBA,IAC7B,GAAEA,KAAkBA,KAOOsK,GAClC,KAGV,C,oDE3Ee,EAAW,iBAAX,EAA0C,qBCyB1CG,IAfb3I,GAGEnB,YAAA,OAAKoB,MAAO/B,GACT8B,EAAM4I,SACP/J,YAAA,QACEoB,MAAO/B,EACPA,MAAO,CAAEkG,MAAOpE,EAAMoE,MAAO2C,SAAU/G,EAAM+G,WAE5C/G,EAAM8F,M,oCCpBf,sFAWO,MAAMpB,EAAqBA,KAGzB,CACL9F,KAAMC,YAACC,IAAI,CAACC,GAAG,sBAAqB,iBACpCC,KAAOC,QACgBvC,IAArBuC,EAAI4J,aACFhK,YAACiK,IAAe,CAACD,aAAc5J,EAAI4J,eACjC,KACNrJ,KAAMC,K,oCClBV,kDAEO,MAAM5C,EAAwBP,IAAa,IAAAyM,EAAAC,EAAAC,EAAAC,EAAA,MAAyB,CACzEnK,GAAIzC,EAAEyC,GACNkE,SAAU3G,EAAE2G,SACZrE,KAAMtC,EAAEsC,KACRQ,OAAQ9C,EAAE8C,OACV0F,UAAoB,QAAXiE,EAAEzM,EAAES,eAAO,IAAAgM,OAAA,EAATA,EAAWhK,GACtBjC,kBAA4B,QAAXkM,EAAE1M,EAAES,eAAO,IAAAiM,OAAA,EAATA,EAAWhM,WAC9B+H,SAAkB,QAAVkE,EAAE3M,EAAE6M,cAAM,IAAAF,OAAA,EAARA,EAAUlK,GACpBqK,eAAwB,QAAVF,EAAE5M,EAAE6M,cAAM,IAAAD,OAAA,EAARA,EAAUG,SAC1BR,aAAcvM,EAAEuM,aAChBlJ,MAAOrD,EAAEqD,MACT8B,YAAanF,EAAEmF,YACf2B,UAAWhG,YAA4Bd,EAAEkB,WAC1C,C,kCChBc,KAAC,eAAiB,2B,gECAlB,EAAgB,sBCmBhBsJ,IATb9G,GAGEnB,YAAC8J,IAAO,CAAC7C,KAAM9F,EAAM8F,KAAM1B,MAAOpE,EAAMoE,MAAO2C,SAAU/G,EAAM+G,UAC7DlI,YAAA,OAAKoB,MAAO/B,I","file":"route-GrowingVTubers.chunk.7bbde.esm.js","sourcesContent":["import { VTuberGrowthData } from '../../types/ApiData/VTuberGrowthData';\nimport { GrowthData } from '../../types/Common/GrowthData';\nimport {\n  GrowthDisplayData,\n  VTuberGrowthDisplayData,\n} from '../../types/TableDisplayData/VTuberGrowthDisplayData';\nimport { VTuberBasicToDisplay } from './BasicTransform';\n\nconst growthDataToDisplayData = (\n  e: GrowthData,\n  subCount?: number\n): GrowthDisplayData => ({\n  ...e,\n  percentage: subCount !== undefined && subCount !== 0 ? e.diff / subCount : 0,\n});\n\nexport const VTuberGrowthToDisplay = (\n  e: VTuberGrowthData\n): VTuberGrowthDisplayData => ({\n  ...VTuberBasicToDisplay(e),\n  YouTubeSubscriber: e.YouTube.subscriber,\n  _7DaysGrowth: growthDataToDisplayData(\n    e.YouTube._7DaysGrowth,\n    e.YouTube.subscriber.count\n  ),\n  _30DaysGrowth: growthDataToDisplayData(\n    e.YouTube._30DaysGrowth,\n    e.YouTube.subscriber.count\n  ),\n});\n","import {\n  TIMEZONE_DIFF_IN_HOUR,\n  TODAY_DATE,\n  TODAY_DATE_STRING,\n} from '../../global/TodayDate';\nimport { DebutInfo, HasDebutInfo } from '../../types/DebutInfo';\nimport { dateDiffInDays, dateStringToDate } from '../DateTimeUtils';\n\nexport const maybeDebutStringToDebutInfo = (\n  debutString?: string\n): DebutInfo => {\n  if (debutString === null || debutString === undefined)\n    return { hasDebutInfo: false };\n\n  return debutStringToDebutInfo(debutString);\n};\n\nexport const debutStringToDebutInfo = (debutString: string): HasDebutInfo => {\n  return {\n    hasDebutInfo: true,\n    debutDate: debutString,\n    isToday: debutString === TODAY_DATE_STRING,\n    isRecentlyDebut:\n      dateDiffInDays(\n        dateStringToDate(debutString, TIMEZONE_DIFF_IN_HOUR),\n        TODAY_DATE\n      ) < 30,\n  };\n};\n","import { TableStyles } from 'react-data-table-component';\n\nexport const CompactTableStyle: TableStyles = {\n  headCells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for head cells\n      paddingRight: '5px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for data cells\n      paddingRight: '5px',\n    },\n  },\n};\n","import {\n  getDateAfterTimezoneAdjustment,\n  getISODateString,\n} from '../utils/DateTimeUtils';\nimport { tryParseInteger } from '../utils/NumberUtils';\n\nconst DEFAULT_TIMEZONE_DIFF_IN_HOUR = 8;\n\nexport const TIMEZONE_DIFF_IN_HOUR: number = tryParseInteger(\n  process.env.TIMEZONE_DIFF_IN_HOUR,\n  DEFAULT_TIMEZONE_DIFF_IN_HOUR\n);\n\nexport const TODAY_DATE: Date = getDateAfterTimezoneAdjustment(\n  new Date(),\n  TIMEZONE_DIFF_IN_HOUR\n);\n\nexport const TODAY_DATE_STRING: string = getISODateString(\n  TODAY_DATE,\n  TIMEZONE_DIFF_IN_HOUR\n);\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ProfileImagePopup from '../components/ProfileImagePopup';\n\nexport interface NameColumnRowData {\n  id: string;\n  imgUrl?: string;\n  name: string;\n}\n\nexport const NameColumn = <\n  RowData extends NameColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.displayName\">Name</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <ProfileImagePopup\n        VTuberId={row.id}\n        imgUrl={row.imgUrl}\n        name={row.name}\n      />\n    ),\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GrowthDisplayData } from '../types/TableDisplayData/VTuberGrowthDisplayData';\nimport { GrowthDisplayDataToString } from '../utils/NumberUtils';\nimport { ENFORCE_YOUTUBE_COMPLIANCE } from '../Config';\n\nexport interface Days7GrowthColumnRowData {\n  _7DaysGrowth: GrowthDisplayData;\n}\n\nexport const _7DaysGrowthColumn = <\n  RowData extends Days7GrowthColumnRowData,\n>(tableTranslation: {\n  noRecord: string;\n  atLeast: string;\n}): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table._7DaysGrowth\">7 Days Growth (Percent)</Text>,\n    cell: (row: RowData): string =>\n      GrowthDisplayDataToString(row._7DaysGrowth, tableTranslation),\n    omit: ENFORCE_YOUTUBE_COMPLIANCE,\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GetRoute } from '../utils/TypeSafeRouting';\n\nexport interface GroupColumnRowData {\n  group?: string;\n}\n\nexport const GroupColumn = <\n  RowData extends GroupColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.group\">Group</Text>,\n    cell: (row: RowData): h.JSX.Element | null =>\n      row.group !== undefined ? (\n        <a href={GetRoute({ type: 'group', name: row.group })}>{row.group}</a>\n      ) : null,\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GrowthDisplayData } from '../types/TableDisplayData/VTuberGrowthDisplayData';\nimport { GrowthDisplayDataToString } from '../utils/NumberUtils';\n\nexport interface Days30GrowthColumnRowData {\n  _30DaysGrowth: GrowthDisplayData;\n}\n\nexport const _30DaysGrowthColumn = <\n  RowData extends Days30GrowthColumnRowData,\n>(tableTranslation: {\n  noRecord: string;\n  atLeast: string;\n}): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table._30DaysGrowth\">30 Days Growth (Percent)</Text>,\n    cell: (row: RowData): string =>\n      GrowthDisplayDataToString(row._30DaysGrowth, tableTranslation),\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__vr1DG\",\"profileImageFlex\":\"profileImageFlex__4VERG\",\"nameFlex\":\"nameFlex__WFOO9\"};","import { FunctionalComponent, h } from 'preact';\nimport ProfileImage from '../ProfileImage';\nimport style from './style.module.css';\n\nexport interface ProfileImagePopupProps {\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n}\n\nconst ProfileImagePopup: FunctionalComponent<ProfileImagePopupProps> = (\n  props: ProfileImagePopupProps\n): h.JSX.Element => {\n  return (\n    <div class={style.container}>\n      <div class={style.profileImageFlex}>\n        <ProfileImage\n          VTuberId={props.VTuberId}\n          imgUrl={props.imgUrl}\n          clickBehavior=\"popup\"\n        />\n      </div>\n      <span class={style.nameFlex}>{props.name}</span>\n    </div>\n  );\n};\n\nexport default ProfileImagePopup;\n","import { GrowthRecordType } from '../types/Common/GrowthData';\n\nexport const PrependSign = (value: number): string => {\n  if (value > 0) return `+${value}`;\n  if (value < 0) return `${value}`;\n\n  return '0';\n};\n\nconst valueToPercentString = (value: number): string =>\n  (value * 100).toFixed(2);\n\nexport const GrowthDisplayDataToString = (\n  e: { diff: number; recordType: GrowthRecordType; percentage?: number },\n  tableTranslation: { noRecord: string; atLeast: string }\n): string => {\n  if (e.percentage) {\n    switch (e.recordType) {\n      case 'none':\n        return tableTranslation.noRecord;\n      case 'partial':\n        return `${tableTranslation.atLeast} ${PrependSign(\n          e.diff\n        )} (${valueToPercentString(e.percentage as number)}%)`;\n      case 'full':\n        return `${PrependSign(e.diff)} (${valueToPercentString(\n          e.percentage\n        )}%)`;\n    }\n  }\n\n  switch (e.recordType) {\n    case 'none':\n      return tableTranslation.noRecord;\n    case 'partial':\n      return `${tableTranslation.atLeast} ${PrependSign(e.diff)}`;\n    case 'full':\n      return `${PrependSign(e.diff)}`;\n  }\n};\n\nexport const tryParseInteger = (\n  str: string | undefined,\n  defaultValue: number\n): number => {\n  if (str !== undefined) {\n    const parsedVal = parseInt(str, 10);\n    if (isNaN(parsedVal) === false) {\n      return parsedVal;\n    }\n  }\n\n  return defaultValue;\n};\n","import { ColumnSortFunction } from 'react-data-table-component/dist/src/DataTable/types';\nimport { GrowthDisplayData } from '../../types/TableDisplayData/VTuberGrowthDisplayData';\n\n// TODO: how do I inject field name _7DaysGrowth using template?\nexport const _7DaysGrowthSort: ColumnSortFunction<{\n  _7DaysGrowth: GrowthDisplayData;\n}> = (rowA, rowB) => {\n  const aCount = rowA._7DaysGrowth.percentage;\n  const bCount = rowB._7DaysGrowth.percentage;\n\n  if (aCount > bCount) return 1;\n\n  if (bCount > aCount) return -1;\n\n  return 0;\n};\n\nexport const _30DaysGrowthSort: ColumnSortFunction<{\n  _30DaysGrowth: GrowthDisplayData;\n}> = (rowA, rowB) => {\n  const aCount = rowA._30DaysGrowth.percentage;\n  const bCount = rowB._30DaysGrowth.percentage;\n\n  if (aCount > bCount) return 1;\n\n  if (bCount > aCount) return -1;\n\n  return 0;\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\n\nexport interface NationalityColumnRowData {\n  nationality?: string;\n}\n\nexport const NationalityColumn = <\n  RowData extends NationalityColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.nationality\">Nationality</Text>,\n    selector: (row: RowData): string => row.nationality ?? '',\n  };\n};\n","export function filterFunction<\n  TargetType extends object,\n  FilterModel extends object,\n>(targetModel: TargetType, filterModel: FilterModel): boolean {\n  const result = Object.entries(filterModel).map((entry) => {\n    const keyTyped = entry[0] as keyof typeof targetModel;\n    const target = targetModel[keyTyped] as string | undefined | null;\n\n    const filter = entry[1] as string | null;\n\n    // if there is no filter applied\n    if (filter === null) {\n      return true;\n    }\n\n    // if target doesn't exist\n    if (target === null || target === undefined || target === '') {\n      return false;\n    }\n\n    return target.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  const someFilterNotMatch = result.some((e) => e === false);\n\n  return !someFilterNotMatch;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__1lsi6\",\"textField\":\"textField__bDpXR\",\"button\":\"button__maFzS\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface SearchBarProps {\n  placeholderText?: string;\n  filterText: string | null;\n  onFilter: (e: unknown) => unknown;\n  onClear: () => unknown;\n}\n\nconst SearchBar: FunctionalComponent<SearchBarProps> = (\n  props: SearchBarProps\n): h.JSX.Element => (\n  <div class={style.container}>\n    <input\n      type=\"text\"\n      class={style.textField}\n      placeholder={props.placeholderText}\n      value={props.filterText ?? ''}\n      onChange={props.onFilter}\n    />\n\n    <button type=\"button\" class={style.button} onClick={props.onClear}>\n      X\n    </button>\n  </div>\n);\n\nexport default SearchBar;\n","import { Activity } from '../types/Common/Activity';\nimport { DebutInfo } from '../types/DebutInfo';\n\nconst ActivityRowStyles = [\n  {\n    when: (row: { activity: Activity }): boolean =>\n      row.activity === 'preparing',\n    style: {\n      backgroundColor: 'rgba(141, 209, 157, 0.9)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity; debutInfo?: DebutInfo }): boolean =>\n      row.activity === 'active' &&\n      row.debutInfo !== undefined &&\n      row.debutInfo.hasDebutInfo === true &&\n      row.debutInfo.isRecentlyDebut === true,\n    style: {\n      backgroundColor: 'rgba(156, 205, 196, 0.5)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity }): boolean => row.activity === 'graduate',\n    style: {\n      backgroundColor: 'rgba(123, 123, 123, 0.9)',\n      color: 'white',\n      '&:hover': {\n        cursor: 'not-allowed',\n      },\n    },\n  },\n];\n\nexport default ActivityRowStyles;\n","import { TableProps } from 'react-data-table-component';\nimport ActivityRowStyles from '../style/ActivityRowStyles';\nimport { Activity } from '../types/Common/Activity';\n\n// columns and data are empty, user should fill them when using DefaultDataTableProps\nconst DefaultDataTableProps = <\n  T extends { activity: Activity },\n>(): TableProps<T> => ({\n  columns: [],\n  data: [],\n  conditionalRowStyles: ActivityRowStyles,\n});\n\nexport default DefaultDataTableProps;\n","import { Fragment, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { getNationalityModifierState } from '../global/DisplayNationality';\nimport { NationalityModifier } from '../types/Common/NationalityModifier';\n\nexport const GetCurrentNationalitySpan = (): JSX.Element | null => {\n  const nationalityModifier: NationalityModifier =\n    getNationalityModifierState();\n\n  switch (nationalityModifier) {\n    case 'TW':\n    case 'HK':\n    case 'MY':\n      return (\n        <>\n          {' '}\n          (<Text id=\"text.onlyShowing\">only showing </Text>\n          <Text id={`nationalityTitle.${nationalityModifier}`}>\n            placeholder\n          </Text>{' '}\n          VTuber)\n        </>\n      );\n    case 'all':\n    default:\n      return null;\n  }\n};\n","import * as Api from '../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useMemo, useEffect } from 'preact/hooks';\nimport DataTable, { TableColumn } from 'react-data-table-component';\nimport QuestionMarkToolTip from '../../components/QuestionMarkToolTip';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport { CompactTableStyle } from '../../style/CompactTableStyle';\nimport { GroupColumn } from '../../tableTypes/GroupColumn';\nimport { NameColumn } from '../../tableTypes/NameColumn';\nimport { NationalityColumn } from '../../tableTypes/NationalityColumn';\nimport { PopularVideoColumn } from '../../tableTypes/PopularVideoColumn';\nimport { YouTubeSubscriberColumn } from '../../tableTypes/YouTubeSubscriberColumn';\nimport { _30DaysGrowthColumn } from '../../tableTypes/_30DaysGrowthColumn';\nimport { _7DaysGrowthColumn } from '../../tableTypes/_7DaysGrowthColumn';\nimport { VTuberGrowthDisplayData } from '../../types/TableDisplayData/VTuberGrowthDisplayData';\nimport DefaultDataTableProps from '../../utils/DefaultDataTableProps';\nimport { GetCurrentNationalitySpan } from '../../utils/NationalityUtils';\nimport { VTuberGrowthToDisplay } from '../../utils/transform/GrowthTransform';\nimport tableStyle from '../../style/DataTableStyle.module.css';\nimport {\n  _30DaysGrowthSort,\n  _7DaysGrowthSort,\n} from '../../utils/sort/GrowthSort';\nimport ActivityRowStyles from '../../style/ActivityRowStyles';\nimport { VTuberGrowthDisplayDataFilterModel } from '../../types/FilterType/VTuberGrowthDisplayDataFilterModel';\nimport { filterFunction } from '../../utils/FilterModelHelper';\nimport FilterWindow from '../../components/FilterWindow';\nimport { ENFORCE_YOUTUBE_COMPLIANCE } from '../../Config';\n\nexport interface GrowingVTubersPageProps {\n  dictionary: Dictionary;\n}\n\nconst GrowingVTubersPage: FunctionalComponent<GrowingVTubersPageProps> = (\n  props: GrowingVTubersPageProps\n) => {\n  document.title = `${props.dictionary.header.growingVTubers} | ${props.dictionary.header.title}`;\n\n  const columns: Array<TableColumn<VTuberGrowthDisplayData>> = [\n    {\n      ...NameColumn(),\n      width: '200px',\n    },\n    {\n      ...YouTubeSubscriberColumn(),\n      sortable: true,\n    },\n    {\n      ..._7DaysGrowthColumn(props.dictionary.table),\n      right: true,\n      sortable: true,\n      sortFunction: _7DaysGrowthSort,\n      omit: ENFORCE_YOUTUBE_COMPLIANCE,\n    },\n    {\n      ..._30DaysGrowthColumn(props.dictionary.table),\n      right: true,\n      sortable: true,\n      sortFunction: _30DaysGrowthSort,\n      omit: ENFORCE_YOUTUBE_COMPLIANCE,\n    },\n    {\n      ...PopularVideoColumn(),\n      width: '100px',\n    },\n    {\n      ...GroupColumn(),\n      width: '100px',\n    },\n    {\n      ...NationalityColumn(),\n      width: '100px',\n    },\n  ];\n\n  // search filter\n  const [data, setData] = useState<Array<VTuberGrowthDisplayData>>([]);\n  const [filterModel, setFilterModel] =\n    useState<VTuberGrowthDisplayDataFilterModel>({\n      name: null,\n      YouTubeId: null,\n      TwitchId: null,\n      group: null,\n      nationality: null,\n    });\n  const filteredData = data.filter((e) => filterFunction(e, filterModel));\n\n  const searchBarComponent = useMemo(() => {\n    const handleFilterWindow = (\n      filterModel: VTuberGrowthDisplayDataFilterModel\n    ): void => {\n      setFilterModel(filterModel);\n    };\n\n    const fieldPlaceHolderMappings: Map<string, string> = new Map<\n      string,\n      string\n    >([\n      ['name', props.dictionary.table.searchByDisplayName],\n      ['YouTubeId', props.dictionary.table.searchByYouTubeId],\n      ['TwitchId', props.dictionary.table.searchByTwitchId],\n      ['group', props.dictionary.table.searchByGroup],\n      ['nationality', props.dictionary.table.searchByNationality],\n    ]);\n\n    return (\n      <div class={tableStyle.searchBarGroup}>\n        <FilterWindow\n          filterModel={filterModel}\n          fieldPlaceHolderMappings={fieldPlaceHolderMappings}\n          openSearchText={props.dictionary.text.openSearch}\n          closeSearchText={props.dictionary.text.closeSearch}\n          onChange={handleFilterWindow}\n        />\n      </div>\n    );\n  }, [filterModel, props.dictionary]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getGrowingVTubers('100').then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .map((e) => VTuberGrowthToDisplay(e))\n          .sort((a, b) => b._7DaysGrowth.percentage - a._7DaysGrowth.percentage)\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h1>\n        <Text id=\"header.growingVTubers\">Growing VTubers</Text>\n        {GetCurrentNationalitySpan()}\n        <QuestionMarkToolTip\n          width=\"300px\"\n          fontSize=\"13px\"\n          text={<Text id=\"toolTip.growingVTubers\">tooltip text</Text>}\n        />\n      </h1>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={filteredData}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        fixedHeader\n        pagination\n        paginationComponentOptions={props.dictionary.table.paginationOptions}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n        subHeader\n        subHeaderComponent={searchBarComponent}\n      />\n    </>\n  );\n};\n\nexport default GrowingVTubersPage;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { HasCountType } from '../types/Common/CountType';\n\nexport interface YouTubeSubscriberColumnRowData {\n  YouTubeSubscriber: HasCountType;\n}\n\nexport const YouTubeSubscriberColumn = <\n  RowData extends YouTubeSubscriberColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.YouTubeSubscriberCount\">YouTube Subscribers</Text>,\n    selector: (row: RowData): number => row.YouTubeSubscriber.count,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"floating\":\"floating__uhu4Y\",\"floatingHidden\":\"floatingHidden__mvSUQ\",\"floatingShowing\":\"floatingShowing__nwzm5\"};","import { h } from 'preact';\nimport { useState } from 'preact/hooks';\nimport { trimOrNullOnEmpty } from '../../utils/StringUtils';\nimport SearchBar from '../SearchBar';\nimport style from './style.module.css';\n\nexport interface FilterWindowProps<FilterModel extends object> {\n  filterModel: FilterModel;\n  fieldPlaceHolderMappings: Map<string, string>;\n  openSearchText: string;\n  closeSearchText: string;\n  onChange?: (e: FilterModel) => void;\n}\n\nfunction FilterWindow<FilterModel extends object>(\n  props: FilterWindowProps<FilterModel>\n): JSX.Element {\n  const [isOpened, setIsOpened] = useState<boolean>(false);\n  const [filter, setFilter] = useState<FilterModel>(props.filterModel);\n\n  function handleOnChange(e: FilterModel): void {\n    if (props.onChange != null) {\n      props.onChange(e);\n    }\n  }\n\n  const createSearchBar = (key: string): JSX.Element => {\n    {\n      const keyTyped = key as keyof typeof filter;\n\n      const handleOnFilterChange = (e: string | null): void => {\n        const nullableString: string | null = trimOrNullOnEmpty(e);\n\n        setFilter({ ...filter, [keyTyped]: nullableString });\n        handleOnChange({ ...filter, [keyTyped]: nullableString });\n      };\n\n      return (\n        <SearchBar\n          key={key}\n          placeholderText={props.fieldPlaceHolderMappings.get(\n            keyTyped as string\n          )}\n          filterText={filter[keyTyped] as string | null}\n          onFilter={(e: any): void => handleOnFilterChange(e.target.value)}\n          onClear={(): void => handleOnFilterChange(null)}\n        />\n      );\n    }\n  };\n\n  const fields: Array<JSX.Element> = Object.keys(props.filterModel).map((key) =>\n    createSearchBar(key)\n  );\n\n  const ToggleButton = (): JSX.Element => (\n    <input\n      type=\"button\"\n      value={isOpened === true ? props.closeSearchText : props.openSearchText}\n      onClick={(): void => setIsOpened(!isOpened)}\n    />\n  );\n\n  const toggleFloatingClass = (): string => {\n    if (isOpened) return `${style.floating} ${style.floatingShowing}`;\n    else return `${style.floating} ${style.floatingHidden}`;\n  };\n\n  return (\n    <div>\n      <ToggleButton />\n      {isOpened === true ? (\n        <div class={toggleFloatingClass()}>{fields}</div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default FilterWindow;\n","export function trimOrNullOnEmpty(\n  value: string | null | undefined\n): string | null {\n  if (value === null || value === undefined) return null;\n\n  const trimmed = value.trim();\n\n  if (trimmed === '') return null;\n\n  return trimmed;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"tooltip__vtGmz\",\"tooltipText\":\"tooltipText__pA-zc\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface ToolTipProps {\n  text: string | React.ReactNode;\n  children: React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst ToolTip: FunctionalComponent<ToolTipProps> = (\n  props: ToolTipProps\n): h.JSX.Element => {\n  return (\n    <div class={style.tooltip}>\n      {props.children}\n      <span\n        class={style.tooltipText}\n        style={{ width: props.width, fontSize: props.fontSize }}\n      >\n        {props.text}\n      </span>\n    </div>\n  );\n};\n\nexport default ToolTip;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ShowVideoButton from '../components/ShowVideoButton';\nimport { VideoInfo } from '../types/Common/VideoInfo';\nimport { ENFORCE_YOUTUBE_COMPLIANCE } from '../Config';\n\nexport interface PopularVideoColumnRowData {\n  popularVideo?: VideoInfo;\n}\n\nexport const PopularVideoColumn = <\n  RowData extends PopularVideoColumnRowData,\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularVideo\">Popular Video</Text>,\n    cell: (row: RowData): JSX.Element | null =>\n      row.popularVideo !== undefined ? (\n        <ShowVideoButton popularVideo={row.popularVideo} />\n      ) : null,\n    omit: ENFORCE_YOUTUBE_COMPLIANCE,\n  };\n};\n","import { VTuberData } from '../../types/ApiData/VTuberData';\nimport { VTuberDisplayData } from '../../types/TableDisplayData/VTuberDisplayData';\nimport { maybeDebutStringToDebutInfo } from './DebutStringToDebutInfo';\n\nexport const VTuberBasicToDisplay = (e: VTuberData): VTuberDisplayData => ({\n  id: e.id,\n  activity: e.activity,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  YouTubeId: e.YouTube?.id,\n  YouTubeSubscriber: e.YouTube?.subscriber,\n  TwitchId: e.Twitch?.id,\n  TwitchFollower: e.Twitch?.follower,\n  popularVideo: e.popularVideo,\n  group: e.group,\n  nationality: e.nationality,\n  debutInfo: maybeDebutStringToDebutInfo(e.debutDate),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"searchBarGroup\":\"R1T8+hwxvBovrVdGHizUFw==\"};","// extracted by mini-css-extract-plugin\nexport default {\"questionMark\":\"questionMark__RT3wD\"};","import { FunctionalComponent, h } from 'preact';\nimport ToolTip from '../ToolTip';\nimport style from './style.module.css';\n\nexport interface QuestionMarkToolTip {\n  text: string | React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst QuestionMarkToolTip: FunctionalComponent<QuestionMarkToolTip> = (\n  props: QuestionMarkToolTip\n): h.JSX.Element => {\n  return (\n    <ToolTip text={props.text} width={props.width} fontSize={props.fontSize}>\n      <img class={style.questionMark} />\n    </ToolTip>\n  );\n};\n\nexport default QuestionMarkToolTip;\n"],"sourceRoot":""}