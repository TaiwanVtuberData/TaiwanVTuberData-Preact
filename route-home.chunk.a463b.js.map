{"version":3,"sources":["webpack:///./utils/transform/GrowthTransform.ts","webpack:///./style/CompactTableStyle.ts","webpack:///./tableTypes/NameColumn.tsx","webpack:///./components/LandingTables/GrowingVTubers/index.tsx","webpack:///./tableTypes/_7DaysGrowthColumn.tsx","webpack:///./components/YouTubeTwitchCount/style.module.css","webpack:///./components/YouTubeTwitchCount/index.tsx","webpack:///./components/ProfileImagePopup/style.module.css","webpack:///./components/ProfileImagePopup/index.tsx","webpack:///./utils/NumberUtils.ts","webpack:///./components/LivestreamComponent/style.module.css","webpack:///./components/LivestreamComponent/index.tsx","webpack:///./components/HorizontalLivestreamsBox/style.module.css","webpack:///./components/HorizontalLivestreamsBox/index.tsx","webpack:///./components/LandingTables/Livestreams/index.tsx","webpack:///./routes/home/style.module.css","webpack:///./routes/home/index.tsx","webpack:///./tableTypes/PopularityColumn.tsx","webpack:///./tableTypes/YouTubeTwitchCountColumn.tsx","webpack:///./style/ActivityRowStyles.ts","webpack:///./utils/DefaultDataTableProps.ts","webpack:///./utils/NationalityUtils.tsx","webpack:///./components/LandingTables/TrendingVTubers/index.tsx","webpack:///./utils/sort/PopularityCountSort.ts","webpack:///./style/IsTodayRowStyles.ts","webpack:///./tableTypes/YouTubeSubscriberColumn.tsx","webpack:///./tableTypes/DebutDateColumn.tsx","webpack:///./utils/transform/PopularityTransform.ts","webpack:///./components/LandingTables/DebutVTubers/index.tsx","webpack:///./tableTypes/RankingColumn.tsx","webpack:///./utils/transform/DebutTransform.ts","webpack:///./components/ToolTip/style.module.css","webpack:///./components/ToolTip/index.tsx","webpack:///./tableTypes/PopularVideoColumn.tsx","webpack:///./utils/transform/BasicTransform.ts","webpack:///./components/LandingTables/TopVTubers/index.tsx","webpack:///./utils/transform/LivestreamTransform.ts","webpack:///./components/VideoLink/style.module.css","webpack:///./components/VideoLink/index.tsx","webpack:///./components/QuestionMarkToolTip/style.module.css","webpack:///./components/QuestionMarkToolTip/index.tsx"],"names":["growthDataToDisplayData","e","subCount","percentage","undefined","diff","VTuberGrowthToDisplay","VTuberBasicToDisplay","YouTubeSubscriber","YouTube","subscriber","_7DaysGrowth","count","_30DaysGrowth","CompactTableStyle","headCells","style","paddingLeft","paddingRight","cells","NameColumn","name","id","cell","row","VTuberId","imgUrl","GrowingVTubersTable","props","columns","YouTubeSubscriberColumn","_7DaysGrowthColumn","dictionary","table","PopularVideoColumn","hide","Media","SM","useState","data","setData","pending","setPending","getVTubers","Api","then","res","VTubers","map","sort","a","b","useEffect","href","GetRoute","type","width","fontSize","text","DefaultDataTableProps","conditionalRowStyles","ActivityRowStyles","customStyles","progressComponent","progressPending","tableTranslation","GrowthDisplayDataToString","YouTubeTwitchCount","YouTubeSpan","YouTubeCount","class","CountFragment","countType","TwitchSpan","TwitchCount","ProfileImagePopup","ProfileImage","clickBehavior","PrependSign","value","valueToPercentString","toFixed","recordType","noRecord","atLeast","LivestreamComponent","VideoLink","thumbnailUrl","videoUrl","getFormattedTimeIfNotToday","startTime","now","HorizontalLivestreamsBox","index","key","LivestreamsTable","getLivestreams","modifier","arrayData","livestreams","LivestreamToDisplayData","getTime","setTimeout","closestToNow","findClosestSortedDateIndex","Date","document","getElementById","Math","min","length","scrollIntoView","behavior","block","inline","textAlign","HomePage","window","title","header","GetCurrentNationalitySpan","Livestreams","TrendingVTubers","DebutVTubers","GrowingVTubers","TopVTubers","numberToCountType","popularity","tag","PopularityColumn","YouTubePopularity","TwitchPopularity","YouTubeTwitchCountColumn","TwitchFollower","when","activity","backgroundColor","cursor","color","nationalityModifier","getNationalityModifierState","TrendingVTubersTable","RankingColumn","VTuberPopularityToDisplay","PopularityCountDescendingSort","ranking","PopularityCountAscendingSort","rowA","rowB","aCount","bCount","IsTodayRowStyle","isToday","selector","DebutDateColumn","debutDate","Twitch","DebutVTubersTable","todayDate","getISODateString","localeCompare","VTuberDebutToDisplay","concat","wrap","ToolTip","children","popularVideo","YouTubeId","TwitchId","follower","group","nationality","TopVTubersTable","target","rel","src","loading","QuestionMarkToolTip"],"mappings":"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","file":"route-home.chunk.a463b.js","sourcesContent":["import { VTuberGrowthData } from '../../types/ApiData/VTuberGrowthData';\nimport { GrowthData } from '../../types/Common/GrowthData';\nimport {\n  GrowthDisplayData,\n  VTuberGrowthDisplayData,\n} from '../../types/TableDisplayData/VTuberGrowthDisplayData';\nimport { VTuberBasicToDisplay } from './BasicTransform';\n\nconst growthDataToDisplayData = (\n  e: GrowthData,\n  subCount?: number\n): GrowthDisplayData => ({\n  ...e,\n  percentage: subCount !== undefined && subCount !== 0 ? e.diff / subCount : 0,\n});\n\nexport const VTuberGrowthToDisplay = (\n  e: VTuberGrowthData\n): VTuberGrowthDisplayData => ({\n  ...VTuberBasicToDisplay(e),\n  YouTubeSubscriber: e.YouTube.subscriber,\n  _7DaysGrowth: growthDataToDisplayData(\n    e.YouTube._7DaysGrowth,\n    e.YouTube.subscriber.count\n  ),\n  _30DaysGrowth: growthDataToDisplayData(\n    e.YouTube._30DaysGrowth,\n    e.YouTube.subscriber.count\n  ),\n});\n","import { TableStyles } from 'react-data-table-component';\n\nexport const CompactTableStyle: TableStyles = {\n  headCells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for head cells\n      paddingRight: '5px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for data cells\n      paddingRight: '5px',\n    },\n  },\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ProfileImagePopup from '../components/ProfileImagePopup';\n\nexport interface NameColumnRowData {\n  id: string;\n  imgUrl?: string;\n  name: string;\n}\n\nexport const NameColumn = <\n  RowData extends NameColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.displayName\">Name</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <ProfileImagePopup\n        VTuberId={row.id}\n        imgUrl={row.imgUrl}\n        name={row.name}\n      />\n    ),\n  };\n};\n","import * as Api from '../../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useEffect } from 'preact/hooks';\nimport DataTable, { Media, TableColumn } from 'react-data-table-component';\nimport { Dictionary } from '../../../i18n/Dictionary';\nimport ActivityRowStyles from '../../../style/ActivityRowStyles';\nimport { CompactTableStyle } from '../../../style/CompactTableStyle';\nimport { NameColumn } from '../../../tableTypes/NameColumn';\nimport { PopularVideoColumn } from '../../../tableTypes/PopularVideoColumn';\nimport { YouTubeSubscriberColumn } from '../../../tableTypes/YouTubeSubscriberColumn';\nimport { _7DaysGrowthColumn } from '../../../tableTypes/_7DaysGrowthColumn';\nimport { VTuberGrowthDisplayData } from '../../../types/TableDisplayData/VTuberGrowthDisplayData';\nimport DefaultDataTableProps from '../../../utils/DefaultDataTableProps';\nimport { VTuberGrowthToDisplay } from '../../../utils/transform/GrowthTransform';\nimport QuestionMarkToolTip from '../../QuestionMarkToolTip';\nimport { GetRoute } from '../../../utils/TypeSafeRouting';\n\nexport interface GrowingVTubersTableProps {\n  dictionary: Dictionary;\n}\n\nconst GrowingVTubersTable: FunctionalComponent<GrowingVTubersTableProps> = (\n  props: GrowingVTubersTableProps\n) => {\n  const columns: Array<TableColumn<VTuberGrowthDisplayData>> = [\n    NameColumn(),\n    YouTubeSubscriberColumn(),\n    _7DaysGrowthColumn(props.dictionary.table),\n    {\n      ...PopularVideoColumn(),\n      hide: Media.SM,\n    },\n  ];\n\n  const [data, setData] = useState<Array<VTuberGrowthDisplayData>>([]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getGrowingVTubers('10').then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .map((e) => VTuberGrowthToDisplay(e))\n          .sort((a, b) => b._7DaysGrowth.percentage - a._7DaysGrowth.percentage)\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h3>\n        <a href={GetRoute({ type: 'growing-vtubers' })}>\n          <Text id=\"header.growingVTubers\">Growing VTubers</Text>\n          <> </>\n          <Text id=\"header.top10\">Top 10</Text>\n        </a>\n        <QuestionMarkToolTip\n          width=\"300px\"\n          fontSize=\"13px\"\n          text={<Text id=\"toolTip.growingVTubers\">tooltip text</Text>}\n        />\n      </h3>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={data}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n      />\n    </>\n  );\n};\n\nexport default GrowingVTubersTable;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GrowthDisplayData } from '../types/TableDisplayData/VTuberGrowthDisplayData';\nimport { GrowthDisplayDataToString } from '../utils/NumberUtils';\n\nexport interface Days7GrowthColumnRowData {\n  _7DaysGrowth: GrowthDisplayData;\n}\n\nexport const _7DaysGrowthColumn = <\n  RowData extends Days7GrowthColumnRowData\n>(tableTranslation: {\n  noRecord: string;\n  atLeast: string;\n}): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table._7DaysGrowth\">7 Days Growth (Percent)</Text>,\n    cell: (row: RowData): string =>\n      GrowthDisplayDataToString(row._7DaysGrowth, tableTranslation),\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"noWrap\":\"noWrap__BzT1O\",\"YouTubeRed\":\"YouTubeRed__1JOkf\",\"TwitchPurple\":\"TwitchPurple__qQQlw\"};","import { Fragment, FunctionalComponent, h } from 'preact';\nimport { CountType } from '../../types/Common/CountType';\nimport CountFragment from '../CountFragment';\nimport style from './style.module.css';\n\nexport interface YouTubeTwitchCountProps {\n  YouTubeCount?: CountType;\n  TwitchCount?: CountType;\n}\n\nconst YouTubeTwitchCount: FunctionalComponent<YouTubeTwitchCountProps> = (\n  props: YouTubeTwitchCountProps\n): h.JSX.Element => {\n  const YouTubeSpan = (YouTubeCount: CountType): h.JSX.Element => {\n    return (\n      <span class={`${style.noWrap} ${style.YouTubeRed}`}>\n        <CountFragment countType={YouTubeCount} />\n      </span>\n    );\n  };\n\n  const TwitchSpan = (TwitchCount: CountType): h.JSX.Element => {\n    return (\n      <span class={`${style.noWrap} ${style.TwitchPurple}`}>\n        <CountFragment countType={TwitchCount} />\n      </span>\n    );\n  };\n\n  const CountSpan = (props: YouTubeTwitchCountProps): h.JSX.Element | null => {\n    if (props.YouTubeCount && props.TwitchCount) {\n      return (\n        <>\n          {YouTubeSpan(props.YouTubeCount)}\n          {/* extra white space. will be rendered as \" + \" */}\n          <span class={style.noWrap}>&nbsp;+&nbsp;</span>\n          {TwitchSpan(props.TwitchCount)}\n        </>\n      );\n    }\n\n    if (props.YouTubeCount) {\n      return <>{YouTubeSpan(props.YouTubeCount)}</>;\n    }\n\n    if (props.TwitchCount) {\n      return <>{TwitchSpan(props.TwitchCount)}</>;\n    }\n\n    return null;\n  };\n\n  return (\n    <Fragment>\n      <CountSpan {...props} />\n    </Fragment>\n  );\n};\n\nexport default YouTubeTwitchCount;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__vr1DG\",\"profileImageFlex\":\"profileImageFlex__4VERG\",\"nameFlex\":\"nameFlex__WFOO9\"};","import { FunctionalComponent, h } from 'preact';\nimport ProfileImage from '../ProfileImage';\nimport style from './style.module.css';\n\nexport interface ProfileImagePopupProps {\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n}\n\nconst ProfileImagePopup: FunctionalComponent<ProfileImagePopupProps> = (\n  props: ProfileImagePopupProps\n): h.JSX.Element => {\n  return (\n    <div class={style.container}>\n      <div class={style.profileImageFlex}>\n        <ProfileImage\n          VTuberId={props.VTuberId}\n          imgUrl={props.imgUrl}\n          clickBehavior=\"popup\"\n        />\n      </div>\n      <span class={style.nameFlex}>{props.name}</span>\n    </div>\n  );\n};\n\nexport default ProfileImagePopup;\n","import { GrowthRecordType } from '../types/Common/GrowthData';\n\nexport const PrependSign = (value: number): string => {\n  if (value > 0) return `+${value}`;\n  if (value < 0) return `${value}`;\n\n  return '0';\n};\n\nconst valueToPercentString = (value: number): string =>\n  (value * 100).toFixed(2);\n\nexport const GrowthDisplayDataToString = (\n  e: { diff: number; recordType: GrowthRecordType; percentage?: number },\n  tableTranslation: { noRecord: string; atLeast: string }\n): string => {\n  if (e.percentage) {\n    switch (e.recordType) {\n      case 'none':\n        return tableTranslation.noRecord;\n      case 'partial':\n        return `${tableTranslation.atLeast} ${PrependSign(\n          e.diff\n        )} (${valueToPercentString(e.percentage as number)}%)`;\n      case 'full':\n        return `${PrependSign(e.diff)} (${valueToPercentString(\n          e.percentage\n        )}%)`;\n    }\n  }\n\n  switch (e.recordType) {\n    case 'none':\n      return tableTranslation.noRecord;\n    case 'partial':\n      return `${tableTranslation.atLeast} ${PrependSign(e.diff)}`;\n    case 'full':\n      return `${PrependSign(e.diff)}`;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"verticalFlex\":\"verticalFlex__i3ZgG\"};","import { FunctionalComponent, h } from 'preact';\nimport {\n  getFormattedDateTime,\n  getFormattedTime,\n  getFormattedTimeIfNotToday,\n} from '../../utils/DateTimeUtils';\nimport ProfileImagePopUp from '../ProfileImagePopup';\nimport VideoLink from '../VideoLink';\nimport style from './style.module.css';\n\nexport interface LivestreamComponentProps {\n  id?: number;\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n  thumbnailUrl: string;\n  videoUrl: string;\n  startTime: Date;\n  now: Date;\n}\n\nconst LivestreamComponent: FunctionalComponent<LivestreamComponentProps> = (\n  props: LivestreamComponentProps\n): h.JSX.Element => {\n  return (\n    <div id={`comp-${props.id}`} class={style.verticalFlex}>\n      <ProfileImagePopUp\n        VTuberId={props.VTuberId}\n        imgUrl={props.imgUrl}\n        name={props.name}\n      />\n      <VideoLink thumbnailUrl={props.thumbnailUrl} videoUrl={props.videoUrl} />\n      <div>\n        <span>{getFormattedTimeIfNotToday(props.startTime, props.now)}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default LivestreamComponent;\n","// extracted by mini-css-extract-plugin\nexport default {\"horizontalFlex\":\"horizontalFlex__u+MYR\"};","import { FunctionalComponent, h } from 'preact';\nimport { LivestreamDisplayData } from '../../types/TableDisplayData/LivestreamDisplayData';\nimport LivestreamComponent from '../LivestreamComponent';\nimport style from './style.module.css';\n\nexport interface HorizontalLivestreamsBoxProps {\n  data: Array<LivestreamDisplayData>;\n  now: Date;\n}\n\nconst HorizontalLivestreamsBox: FunctionalComponent<\n  HorizontalLivestreamsBoxProps\n> = (props: HorizontalLivestreamsBoxProps): h.JSX.Element => {\n  return (\n    <div class={style.horizontalFlex}>\n      {props.data.map((e, index) => (\n        <LivestreamComponent\n          id={index}\n          key={index}\n          VTuberId={e.VTuberId}\n          imgUrl={e.imgUrl}\n          name={e.name}\n          thumbnailUrl={e.thumbnailUrl}\n          videoUrl={e.videoUrl}\n          startTime={e.startTime}\n          now={props.now}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default HorizontalLivestreamsBox;\n","import * as Api from '../../../services/ApiService';\nimport { FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useEffect } from 'preact/hooks';\nimport { LivestreamDisplayData } from '../../../types/TableDisplayData/LivestreamDisplayData';\nimport { findClosestSortedDateIndex } from '../../../utils/DateTimeUtils';\nimport { LivestreamToDisplayData } from '../../../utils/transform/LivestreamTransform';\nimport HorizontalLivestreamsBox from '../../HorizontalLivestreamsBox';\nimport { LivestreamsModifier } from '../../../types/ApiTypes';\n\ninterface LivestreamsTableProps {\n  modifier: LivestreamsModifier;\n  now: Date;\n}\n\nconst LivestreamsTable: FunctionalComponent<LivestreamsTableProps> = (\n  props: LivestreamsTableProps\n) => {\n  // search filter\n  const [data, setData] = useState<Array<LivestreamDisplayData>>();\n  useState<boolean>(false);\n\n  const [pending, setPending] = useState(true);\n\n  const getLivestreams = async (): Promise<void> => {\n    await Api.getLivestreams(props.modifier).then((res) => {\n      const arrayData: Array<LivestreamDisplayData> = res.data.livestreams\n        .map((e) => e)\n        .map((e, index) => LivestreamToDisplayData(e, index))\n        // what a great Date API, thanks javascript\n        .sort((a, b) => a.startTime.getTime() - b.startTime.getTime());\n      // thanks to JavaScript sorting being mutable, I have to convert ReadonlyArray to Array first\n      setData(arrayData);\n      setPending(false);\n\n      // TODO: this is a hack to find the closest livestream\n      setTimeout(() => {\n        // Note: document.getElementById('comp-{index}') only work because array data id is set to their index\n        const closestToNow = findClosestSortedDateIndex(arrayData, new Date());\n\n        document\n          .getElementById(\n            `comp-${Math.min(arrayData.length - 1, closestToNow)}`\n          )\n          ?.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n            inline: 'start',\n          });\n      }, 500);\n    });\n  };\n\n  useEffect(() => {\n    getLivestreams();\n  }, []);\n\n  const GetLivestreamsBox = (): JSX.Element => {\n    if (pending) {\n      return (\n        <div style={{ textAlign: 'center' }}>\n          <span>\n            <Text id=\"text.loading\">Loading...</Text>\n          </span>\n        </div>\n      );\n    }\n\n    if (data === undefined || data.length === 0) {\n      return (\n        <div style={{ textAlign: 'center' }}>\n          <span>\n            <Text id=\"text.noData\">No Data</Text>\n          </span>\n        </div>\n      );\n    }\n\n    return <HorizontalLivestreamsBox data={data} now={props.now} />;\n  };\n\n  return <GetLivestreamsBox />;\n};\n\nexport default LivestreamsTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"tableGrid\":\"tableGrid__Ju0u9\",\"tableItem\":\"tableItem__iikA+\",\"streamingSection\":\"streamingSection__unwHH\"};","import { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport DebutVTubersTable from '../../components/LandingTables/DebutVTubers';\nimport GrowingVTubersTable from '../../components/LandingTables/GrowingVTubers';\nimport LivestreamsTable from '../../components/LandingTables/Livestreams';\nimport TopVTubersTable from '../../components/LandingTables/TopVTubers';\nimport TrendingVTubersTable from '../../components/LandingTables/TrendingVTubers';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport '../../style/index.css';\nimport { GetCurrentNationalitySpan } from '../../utils/NationalityUtils';\nimport { GetRoute } from '../../utils/TypeSafeRouting';\nimport style from './style.module.css';\n\nexport interface HomePageProps {\n  dictionary: Dictionary;\n}\n\nconst HomePage: FunctionalComponent<HomePageProps> = (props: HomePageProps) => {\n  if (typeof window !== 'undefined') {\n    document.title = `${props.dictionary.header.title}`;\n  }\n\n  const LivestreamsSection = (): JSX.Element => {\n    const now = new Date();\n\n    return (\n      <div class={style.streamingSection}>\n        <div>\n          <h3>\n            <a href={GetRoute({ type: 'livestreams' })}>\n              <Text id=\"header.debutToday\">Debut Today</Text>\n            </a>\n          </h3>\n          <LivestreamsTable modifier=\"debut-no-title\" now={now} />\n        </div>\n        <div>\n          <h3>\n            <a href={GetRoute({ type: 'livestreams' })}>\n              <Text id=\"header.livestreaming\">Streaming Now</Text>\n            </a>\n          </h3>\n          <LivestreamsTable modifier=\"all-no-title\" now={now} />\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Fragment>\n      <h1>\n        <Text id=\"header.title\">Taiwan VTuber Data</Text>\n        {GetCurrentNationalitySpan()}\n      </h1>\n\n      <LivestreamsSection />\n      <div class={style.tableGrid}>\n        <div class={style.tableItem}>\n          <TrendingVTubersTable />\n        </div>\n        <div class={style.tableItem}>\n          <DebutVTubersTable />\n        </div>\n        <div class={style.tableItem}>\n          <GrowingVTubersTable dictionary={props.dictionary} />\n        </div>\n        <div class={style.tableItem}>\n          <TopVTubersTable />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default HomePage;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport YouTubeTwitchCount from '../components/YouTubeTwitchCount';\nimport { CountType } from '../types/Common/CountType';\n\nconst numberToCountType = (popularity?: number): CountType | undefined => {\n  if (popularity) return { tag: 'has', count: popularity };\n  return undefined;\n};\n\nexport interface PopularityColumnRowData {\n  YouTubePopularity?: number;\n  TwitchPopularity?: number;\n}\n\nexport const PopularityColumn = <\n  RowData extends PopularityColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularity\">Popularity</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <YouTubeTwitchCount\n        YouTubeCount={numberToCountType(row.YouTubePopularity)}\n        TwitchCount={numberToCountType(row.TwitchPopularity)}\n      />\n    ),\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport YouTubeTwitchCount from '../components/YouTubeTwitchCount';\nimport { CountType } from '../types/Common/CountType';\n\nexport interface YouTubeTwitchCountColumnRowData {\n  YouTubeSubscriber?: CountType;\n  TwitchFollower?: CountType;\n}\n\nexport const YouTubeTwitchCountColumn = <\n  RowData extends YouTubeTwitchCountColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: (\n      <Text id=\"table.YouTubeTwitchCount\">\n        YouTube Subscribers + Twitch Followers\n      </Text>\n    ),\n    cell: (row: RowData): JSX.Element => (\n      <YouTubeTwitchCount\n        YouTubeCount={row.YouTubeSubscriber}\n        TwitchCount={row.TwitchFollower}\n      />\n    ),\n  };\n};\n","import { Activity } from '../types/Common/Activity';\n\nconst ActivityRowStyles = [\n  {\n    when: (row: { activity: Activity }): boolean =>\n      row.activity === 'preparing',\n    style: {\n      backgroundColor: 'rgba(141, 209, 157, 0.9)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity }): boolean => row.activity === 'graduate',\n    style: {\n      backgroundColor: 'rgba(123, 123, 123, 0.9)',\n      color: 'white',\n      '&:hover': {\n        cursor: 'not-allowed',\n      },\n    },\n  },\n];\n\nexport default ActivityRowStyles;\n","import { TableProps } from 'react-data-table-component';\nimport ActivityRowStyles from '../style/ActivityRowStyles';\nimport { Activity } from '../types/Common/Activity';\n\n// columns and data are empty, user should fill them when using DefaultDataTableProps\nconst DefaultDataTableProps = <\n  T extends { activity: Activity }\n>(): TableProps<T> => ({\n  columns: [],\n  data: [],\n  conditionalRowStyles: ActivityRowStyles,\n});\n\nexport default DefaultDataTableProps;\n","import { Fragment, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { getNationalityModifierState } from '../global/DisplayNationality';\nimport { NationalityModifier } from '../types/Common/NationalityModifier';\n\nexport const GetCurrentNationalitySpan = (): JSX.Element | null => {\n  const nationalityModifier: NationalityModifier =\n    getNationalityModifierState();\n\n  switch (nationalityModifier) {\n    case 'TW':\n    case 'HK':\n    case 'MY':\n      return (\n        <>\n          {' '}\n          (<Text id=\"text.onlyShowing\">only showing </Text>\n          <Text id={`nationalityTitle.${nationalityModifier}`}>\n            placeholder\n          </Text>{' '}\n          VTuber)\n        </>\n      );\n    case 'all':\n    default:\n      return null;\n  }\n};\n","import * as Api from '../../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useEffect, useState } from 'preact/hooks';\nimport DataTable, { Media, TableColumn } from 'react-data-table-component';\nimport { CompactTableStyle } from '../../../style/CompactTableStyle';\nimport { NameColumn } from '../../../tableTypes/NameColumn';\nimport { PopularityColumn } from '../../../tableTypes/PopularityColumn';\nimport { YouTubeTwitchCountColumn } from '../../../tableTypes/YouTubeTwitchCountColumn';\nimport { VTuberPopularityDisplayData } from '../../../types/TableDisplayData/VTuberPopularityDisplayData';\nimport DefaultDataTableProps from '../../../utils/DefaultDataTableProps';\nimport { PopularityCountDescendingSort } from '../../../utils/sort/PopularityCountSort';\nimport { VTuberPopularityToDisplay } from '../../../utils/transform/PopularityTransform';\nimport QuestionMarkToolTip from '../../QuestionMarkToolTip';\nimport { PopularVideoColumn } from '../../../tableTypes/PopularVideoColumn';\nimport { RankingColumn } from '../../../tableTypes/RankingColumn';\nimport ActivityRowStyles from '../../../style/ActivityRowStyles';\nimport { GetRoute } from '../../../utils/TypeSafeRouting';\n\nconst TrendingVTubersTable: FunctionalComponent = () => {\n  const columns: Array<TableColumn<VTuberPopularityDisplayData>> = [\n    {\n      ...RankingColumn(),\n      width: '30px',\n    },\n    NameColumn(),\n    PopularityColumn(),\n    YouTubeTwitchCountColumn(),\n    {\n      ...PopularVideoColumn(),\n      hide: Media.SM,\n    },\n  ];\n\n  const [data, setData] = useState<Array<VTuberPopularityDisplayData>>([]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getTrendingVTubers('10').then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .map((e, index) => VTuberPopularityToDisplay(e, index + 1))\n          .sort(PopularityCountDescendingSort)\n          .map((e, index) => ({ ...e, ranking: index + 1 }))\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h3>\n        <a href={GetRoute({ type: 'trending-vtubers' })}>\n          <Text id=\"header.trendingVTubers\">Trending VTubers</Text>\n          {/* Yes. Adding a space between two texts require a Fragment */}\n          <> </>\n          <Text id=\"header.top10\">Top 10</Text>\n        </a>\n        <QuestionMarkToolTip\n          width=\"300px\"\n          fontSize=\"13px\"\n          text={<Text id=\"toolTip.trendingVTubers\">tooltip text</Text>}\n        />\n      </h3>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={data}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n      />\n    </>\n  );\n};\n\nexport default TrendingVTubersTable;\n","export const PopularityCountAscendingSort = <\n  T extends { YouTubePopularity?: number; TwitchPopularity?: number }\n>(\n  rowA: T,\n  rowB: T\n): number => {\n  const aCount = (rowA.YouTubePopularity ?? 0) + (rowA.TwitchPopularity ?? 0);\n  const bCount = (rowB.YouTubePopularity ?? 0) + (rowB.TwitchPopularity ?? 0);\n\n  if (aCount > bCount) return 1;\n\n  if (bCount > aCount) return -1;\n\n  return 0;\n};\n\nexport const PopularityCountDescendingSort = <\n  T extends { YouTubePopularity?: number; TwitchPopularity?: number }\n>(\n  rowA: T,\n  rowB: T\n): number => PopularityCountAscendingSort(rowA, rowB) * -1;\n","const IsTodayRowStyle = [\n  {\n    when: (row: { isToday: boolean }): boolean => row.isToday,\n    style: {\n      color: 'mediumblue',\n    },\n  },\n];\n\nexport default IsTodayRowStyle;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { HasCountType } from '../types/Common/CountType';\n\nexport interface YouTubeSubscriberColumnRowData {\n  YouTubeSubscriber: HasCountType;\n}\n\nexport const YouTubeSubscriberColumn = <\n  RowData extends YouTubeSubscriberColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.YouTubeSubscriberCount\">YouTube Subscribers</Text>,\n    selector: (row: RowData): number => row.YouTubeSubscriber.count,\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\n\nexport interface DebutDateColumnRowData {\n  debutDate: string;\n}\n\nexport const DebutDateColumn = <\n  RowData extends DebutDateColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.debutDate\">Debut Date</Text>,\n    selector: (row: { debutDate: string }): string => row.debutDate,\n  };\n};\n","import { VTuberPopularityData } from '../../types/ApiData/VTuberPopularityData';\nimport { VTuberPopularityDisplayData } from '../../types/TableDisplayData/VTuberPopularityDisplayData';\nimport { VTuberBasicToDisplay } from './BasicTransform';\n\nexport const VTuberPopularityToDisplay = (\n  e: VTuberPopularityData,\n  ranking: number\n): VTuberPopularityDisplayData => ({\n  ...VTuberBasicToDisplay(e),\n  YouTubePopularity: e.YouTube?.popularity,\n  TwitchPopularity: e.Twitch?.popularity,\n  ranking: ranking,\n});\n","import * as Api from '../../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useEffect } from 'preact/hooks';\nimport DataTable, { Media, TableColumn } from 'react-data-table-component';\nimport ActivityRowStyles from '../../../style/ActivityRowStyles';\nimport { CompactTableStyle } from '../../../style/CompactTableStyle';\nimport IsTodayRowStyle from '../../../style/IsTodayRowStyles';\nimport { NameColumn } from '../../../tableTypes/NameColumn';\nimport { PopularVideoColumn } from '../../../tableTypes/PopularVideoColumn';\nimport { YouTubeTwitchCountColumn } from '../../../tableTypes/YouTubeTwitchCountColumn';\nimport { VTuberDebutDisplayData } from '../../../types/TableDisplayData/VTuberDebutDisplayData';\nimport { getISODateString } from '../../../utils/DateTimeUtils';\nimport DefaultDataTableProps from '../../../utils/DefaultDataTableProps';\nimport { VTuberDebutToDisplay } from '../../../utils/transform/DebutTransform';\nimport { DebutDateColumn } from '../../../tableTypes/DebutDateColumn';\nimport { GetRoute } from '../../../utils/TypeSafeRouting';\n\nconst DebutVTubersTable: FunctionalComponent = () => {\n  const columns: Array<TableColumn<VTuberDebutDisplayData>> = [\n    DebutDateColumn(),\n    NameColumn(),\n    YouTubeTwitchCountColumn(),\n    {\n      ...PopularVideoColumn(),\n      hide: Media.SM,\n    },\n  ];\n\n  // search filter\n  const [data, setData] = useState<Array<VTuberDebutDisplayData>>([]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    const todayDate: string = getISODateString(new Date(), 8);\n    await Api.getDebutVTubers('next-7-days').then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .sort((a, b) => a.debutDate.localeCompare(b.debutDate))\n          .map((e) => VTuberDebutToDisplay(e, todayDate))\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h3>\n        <a href={GetRoute({ type: 'debut-vtubers' })}>\n          <Text id=\"header.debutVTubersIn7Days\">VTubers Debut in 7 days</Text>\n        </a>\n      </h3>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={data}\n        // Typescript does not accept concat two array of different types\n        conditionalRowStyles={ActivityRowStyles.concat(\n          IsTodayRowStyle as Array<any>\n        )}\n        customStyles={CompactTableStyle}\n        progressPending={pending}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n      />\n    </>\n  );\n};\n\nexport default DebutVTubersTable;\n","import { TableColumn } from 'react-data-table-component';\n\nexport interface RankingColumnRowData {\n  ranking: number;\n}\n\nexport const RankingColumn = <\n  RowData extends RankingColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: '#',\n    selector: (row: RowData): number => row.ranking,\n    wrap: false,\n  };\n};\n","import { VTuberDebutData } from '../../types/ApiData/VTuberDebutData';\nimport { VTuberDebutDisplayData } from '../../types/TableDisplayData/VTuberDebutDisplayData';\nimport { VTuberBasicToDisplay } from './BasicTransform';\n\nexport const VTuberDebutToDisplay = (\n  e: VTuberDebutData,\n  todayDate: string\n): VTuberDebutDisplayData => ({\n  ...VTuberBasicToDisplay(e),\n  debutDate: e.debutDate,\n  isToday: e.debutDate === todayDate,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"tooltip__vtGmz\",\"tooltipText\":\"tooltipText__pA-zc\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface ToolTipProps {\n  text: string | React.ReactNode;\n  children: React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst ToolTip: FunctionalComponent<ToolTipProps> = (\n  props: ToolTipProps\n): h.JSX.Element => {\n  return (\n    <div class={style.tooltip}>\n      {props.children}\n      <span\n        class={style.tooltipText}\n        style={{ width: props.width, fontSize: props.fontSize }}\n      >\n        {props.text}\n      </span>\n    </div>\n  );\n};\n\nexport default ToolTip;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ShowVideoButton from '../components/ShowVideoButton';\nimport { VideoInfo } from '../types/Common/VideoInfo';\n\nexport interface PopularVideoColumnRowData {\n  popularVideo?: VideoInfo;\n}\n\nexport const PopularVideoColumn = <\n  RowData extends PopularVideoColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularVideo\">Popular Video</Text>,\n    cell: (row: RowData): JSX.Element | null =>\n      row.popularVideo !== undefined ? (\n        <ShowVideoButton popularVideo={row.popularVideo} />\n      ) : null,\n  };\n};\n","import { VTuberData } from '../../types/ApiData/VTuberData';\nimport { VTuberDisplayData } from '../../types/TableDisplayData/VTuberDisplayData';\n\nexport const VTuberBasicToDisplay = (e: VTuberData): VTuberDisplayData => ({\n  id: e.id,\n  activity: e.activity,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  YouTubeId: e.YouTube?.id,\n  YouTubeSubscriber: e.YouTube?.subscriber,\n  TwitchId: e.Twitch?.id,\n  TwitchFollower: e.Twitch?.follower,\n  popularVideo: e.popularVideo,\n  group: e.group,\n  nationality: e.nationality,\n});\n","import * as Api from '../../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useEffect } from 'preact/hooks';\nimport DataTable, { TableColumn } from 'react-data-table-component';\nimport ActivityRowStyles from '../../../style/ActivityRowStyles';\nimport { CompactTableStyle } from '../../../style/CompactTableStyle';\nimport { NameColumn } from '../../../tableTypes/NameColumn';\nimport { PopularVideoColumn } from '../../../tableTypes/PopularVideoColumn';\nimport { YouTubeTwitchCountColumn } from '../../../tableTypes/YouTubeTwitchCountColumn';\nimport { VTuberDisplayData } from '../../../types/TableDisplayData/VTuberDisplayData';\nimport DefaultDataTableProps from '../../../utils/DefaultDataTableProps';\nimport { VTuberBasicToDisplay } from '../../../utils/transform/BasicTransform';\nimport { GetRoute } from '../../../utils/TypeSafeRouting';\n\nconst TopVTubersTable: FunctionalComponent = () => {\n  const columns: Array<TableColumn<VTuberDisplayData>> = [\n    NameColumn(),\n    YouTubeTwitchCountColumn(),\n    PopularVideoColumn(),\n  ];\n\n  const [data, setData] = useState<Array<VTuberDisplayData>>([]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getVTubers('10').then((res) => {\n      setData(res.data.VTubers.map((e) => VTuberBasicToDisplay(e)));\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h3>\n        <a href={GetRoute({ type: 'all-vtubers' })}>\n          <Text id=\"header.YouTubeSubPlusTwitchFollowers\">\n            YouTube Subscribers + Twitch Followers\n          </Text>\n          <> </>\n          <Text id=\"header.top10\">Top 10</Text>\n        </a>\n      </h3>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={data}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n      />\n    </>\n  );\n};\n\nexport default TopVTubersTable;\n","import { LivestreamData } from '../../types/ApiData/LivestreamData';\nimport { LivestreamDisplayData } from '../../types/TableDisplayData/LivestreamDisplayData';\n\nexport const LivestreamToDisplayData = (\n  e: LivestreamData,\n  index: number\n): LivestreamDisplayData => ({\n  id: index,\n  VTuberId: e.id,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  title: e.title,\n  thumbnailUrl: e.thumbnailUrl,\n  videoUrl: e.videoUrl,\n  startTime: new Date(e.startTime),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"thumbnail\":\"thumbnail__BdvoG\",\"placeholder\":\"placeholder__1JmTb\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface VideoLinkProps {\n  thumbnailUrl: string;\n  videoUrl: string;\n}\n\nconst VideoLink: FunctionalComponent<VideoLinkProps> = (\n  props: VideoLinkProps\n): h.JSX.Element => {\n  return (\n    <a href={props.videoUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n      {props.thumbnailUrl === undefined ? (\n        <img\n          class={style.placeholder}\n          src={props.thumbnailUrl}\n          loading=\"lazy\"\n        />\n      ) : (\n        <img class={style.thumbnail} src={props.thumbnailUrl} loading=\"lazy\" />\n      )}\n    </a>\n  );\n};\n\nexport default VideoLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"questionMark\":\"questionMark__RT3wD\"};","import { FunctionalComponent, h } from 'preact';\nimport ToolTip from '../ToolTip';\nimport style from './style.module.css';\n\nexport interface QuestionMarkToolTip {\n  text: string | React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst QuestionMarkToolTip: FunctionalComponent<QuestionMarkToolTip> = (\n  props: QuestionMarkToolTip\n): h.JSX.Element => {\n  return (\n    <ToolTip text={props.text} width={props.width} fontSize={props.fontSize}>\n      <img class={style.questionMark} />\n    </ToolTip>\n  );\n};\n\nexport default QuestionMarkToolTip;\n"],"sourceRoot":""}