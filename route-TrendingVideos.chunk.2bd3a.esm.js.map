{"version":3,"sources":["webpack:///./tableTypes/VideoColumn.tsx","webpack:///./tableTypes/NameColumn.tsx","webpack:///./components/ProfileImagePopup/style.module.css","webpack:///./components/ProfileImagePopup/index.tsx","webpack:///./components/DropDownList/style.module.css","webpack:///./components/DropDownList/index.tsx","webpack:///./utils/transform/PopularVideoTransform.ts","webpack:///./components/SearchBar/style.module.css","webpack:///./components/SearchBar/index.tsx","webpack:///./style/ActivityRowStyles.ts","webpack:///./utils/DefaultDataTableProps.ts","webpack:///./utils/NationalityUtils.tsx","webpack:///./tableTypes/RankingColumn.tsx","webpack:///./style/DataTableStyle.module.css","webpack:///./components/VideoLink/style.module.css","webpack:///./components/VideoLink/index.tsx","webpack:///./routes/TrendingVideos/index.tsx"],"names":["VideoColumn","name","id","cell","row","VideoLink","thumbnailUrl","videoUrl","NameColumn","VTuberId","imgUrl","ProfileImagePopup","props","class","style","ProfileImage","DropDownList","tipText","dropDownStyle","dropDown","value","onChange","undefined","optionValue","map","e","key","option","PopularVideoToDisplayData","ranking","title","viewCount","uploadTime","Date","SearchBar","type","placeholder","placeholderText","filterText","onFilter","onClick","onClear","ActivityRowStyles","when","activity","backgroundColor","cursor","color","DefaultDataTableProps","columns","data","conditionalRowStyles","GetCurrentNationalitySpan","nationalityModifier","getNationalityModifierState","RankingColumn","selector","wrap","href","target","rel","src","loading","TrendingVideosPage","document","dictionary","header","trendingVideos","sortable","width","right","getFormattedDateTime","setData","useState","filterName","setFilterName","filterTitle","setFilterTitle","resetPaginationToggle","setResetPaginationToggle","filteredData","filter","item","toLowerCase","includes","searchBarComponent","useMemo","tableStyle","searchBarGroup","table","options","modifier","GoToPage","viewCountSortOrder","searchByDisplayName","searchByTitle","pending","setPending","useEffect","async","Api","then","res","videos","sort","a","b","index","getVideos","customStyles","maxHeight","rows","minHeight","headCells","paddingLeft","paddingRight","cells","fixedHeader","pagination","paginationComponentOptions","paginationOptions","progressComponent","progressPending","subHeader","subHeaderComponent"],"mappings":"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","file":"route-TrendingVideos.chunk.2bd3a.esm.js","sourcesContent":["import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport VideoLink from '../components/VideoLink';\n\nexport interface VideoColumnRowData {\n  thumbnailUrl: string;\n  videoUrl: string;\n}\n\nexport const VideoColumn = <\n  RowData extends VideoColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.video\">Video</Text>,\n    cell: (row: RowData): JSX.Element | null =>\n      VideoLink({\n        thumbnailUrl: row.thumbnailUrl,\n        videoUrl: row.videoUrl,\n      }),\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ProfileImagePopup from '../components/ProfileImagePopup';\n\nexport interface NameColumnRowData {\n  id: string;\n  imgUrl?: string;\n  name: string;\n}\n\nexport const NameColumn = <\n  RowData extends NameColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.displayName\">Name</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <ProfileImagePopup\n        VTuberId={row.id}\n        imgUrl={row.imgUrl}\n        name={row.name}\n      />\n    ),\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__vr1DG\",\"profileImageFlex\":\"profileImageFlex__4VERG\",\"nameFlex\":\"nameFlex__WFOO9\"};","import { FunctionalComponent, h } from 'preact';\nimport ProfileImage from '../ProfileImage';\nimport style from './style.module.css';\n\nexport interface ProfileImagePopupProps {\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n}\n\nconst ProfileImagePopup: FunctionalComponent<ProfileImagePopupProps> = (\n  props: ProfileImagePopupProps\n): h.JSX.Element => {\n  return (\n    <div class={style.container}>\n      <div class={style.profileImageFlex}>\n        <ProfileImage VTuberId={props.VTuberId} imgUrl={props.imgUrl} />\n      </div>\n      <span class={style.nameFlex}>{props.name}</span>\n    </div>\n  );\n};\n\nexport default ProfileImagePopup;\n","// extracted by mini-css-extract-plugin\nexport default {\"tipText\":\"tipText__4DHD3\"};","import { h } from 'preact';\nimport style from './style.module.css';\nimport dropDownStyle from '../../style/DropDownStyle.module.css';\n\nexport interface DropDownListProps<ValueType> {\n  tipText?: string;\n  optionValue?: Array<{ option: any; value: ValueType }>;\n  value?: ValueType;\n  onChange?: (e: unknown) => unknown;\n}\n\nfunction DropDownList<ValueType extends string | number>(\n  props: DropDownListProps<ValueType>\n): h.JSX.Element {\n  return (\n    <div>\n      <span class={style.tipText}>{props.tipText}</span>\n      <select\n        class={dropDownStyle.dropDown}\n        value={props.value}\n        onChange={props.onChange}\n      >\n        {props.optionValue !== undefined\n          ? props.optionValue.map((e) => (\n              <option key={e.value} value={e.value}>\n                {e.option}\n              </option>\n            ))\n          : null}\n      </select>\n    </div>\n  );\n}\n\nexport default DropDownList;\n","import { VideoPopularityData } from '../../types/ApiData/VideoPopularityData';\nimport { VideoPopularityDisplayData } from '../../types/TableDisplayData/VideoPopularityDisplayData';\n\nexport const PopularVideoToDisplayData = (\n  e: VideoPopularityData,\n  ranking: number\n): VideoPopularityDisplayData => ({\n  id: e.id,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  title: e.title,\n  thumbnailUrl: e.thumbnailUrl,\n  videoUrl: e.videoUrl,\n  viewCount: e.viewCount,\n  uploadTime: new Date(e.uploadTime),\n  ranking: ranking,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__1lsi6\",\"textField\":\"textField__bDpXR\",\"button\":\"button__maFzS\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface SearchBarProps {\n  placeholderText?: string;\n  filterText: string;\n  onFilter: (e: unknown) => unknown;\n  onClear: () => unknown;\n}\n\nconst SearchBar: FunctionalComponent<SearchBarProps> = (\n  props: SearchBarProps\n): h.JSX.Element => (\n  <div class={style.container}>\n    <input\n      type=\"text\"\n      class={style.textField}\n      placeholder={props.placeholderText}\n      value={props.filterText}\n      onChange={props.onFilter}\n    />\n\n    <button type=\"button\" class={style.button} onClick={props.onClear}>\n      X\n    </button>\n  </div>\n);\n\nexport default SearchBar;\n","import { Activity } from '../types/Common/Activity';\n\nconst ActivityRowStyles = [\n  {\n    when: (row: { activity: Activity }): boolean =>\n      row.activity === 'preparing',\n    style: {\n      backgroundColor: 'rgba(141, 209, 157, 0.9)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity }): boolean => row.activity === 'graduate',\n    style: {\n      backgroundColor: 'rgba(123, 123, 123, 0.9)',\n      color: 'white',\n      '&:hover': {\n        cursor: 'not-allowed',\n      },\n    },\n  },\n];\n\nexport default ActivityRowStyles;\n","import { TableProps } from 'react-data-table-component';\nimport ActivityRowStyles from '../style/ActivityRowStyles';\nimport { Activity } from '../types/Common/Activity';\n\n// columns and data are empty, user should fill them when using DefaultDataTableProps\nconst DefaultDataTableProps = <\n  T extends { activity: Activity }\n>(): TableProps<T> => ({\n  columns: [],\n  data: [],\n  conditionalRowStyles: ActivityRowStyles,\n});\n\nexport default DefaultDataTableProps;\n","import { Fragment, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { getNationalityModifierState } from '../global/DisplayNationality';\nimport { NationalityModifier } from '../types/Common/NationalityModifier';\n\nexport const GetCurrentNationalitySpan = (): JSX.Element | null => {\n  const nationalityModifier: NationalityModifier =\n    getNationalityModifierState();\n\n  switch (nationalityModifier) {\n    case 'TW':\n    case 'HK':\n    case 'MY':\n      return (\n        <>\n          {' '}\n          (<Text id=\"text.onlyShowing\">only showing </Text>\n          <Text id={`nationalityTitle.${nationalityModifier}`}>\n            placeholder\n          </Text>{' '}\n          VTuber)\n        </>\n      );\n    case 'all':\n    default:\n      return null;\n  }\n};\n","import { TableColumn } from 'react-data-table-component';\n\nexport interface RankingColumnRowData {\n  ranking: number;\n}\n\nexport const RankingColumn = <\n  RowData extends RankingColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: '#',\n    selector: (row: RowData): number => row.ranking,\n    wrap: false,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchBarGroup\":\"R1T8+hwxvBovrVdGHizUFw==\"};","// extracted by mini-css-extract-plugin\nexport default {\"thumbnail\":\"thumbnail__BdvoG\",\"placeholder\":\"placeholder__1JmTb\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface VideoLinkProps {\n  thumbnailUrl: string;\n  videoUrl: string;\n}\n\nconst VideoLink: FunctionalComponent<VideoLinkProps> = (\n  props: VideoLinkProps\n): h.JSX.Element => {\n  return (\n    <a href={props.videoUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n      {props.thumbnailUrl === undefined ? (\n        <img\n          class={style.placeholder}\n          src={props.thumbnailUrl}\n          loading=\"lazy\"\n        />\n      ) : (\n        <img class={style.thumbnail} src={props.thumbnailUrl} loading=\"lazy\" />\n      )}\n    </a>\n  );\n};\n\nexport default VideoLink;\n","import * as Api from '../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useMemo, useEffect } from 'preact/hooks';\nimport DataTable, {\n  TableColumn,\n  TableStyles,\n} from 'react-data-table-component';\nimport DropDownList from '../../components/DropDownList';\nimport SearchBar from '../../components/SearchBar';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport { NameColumn } from '../../tableTypes/NameColumn';\nimport { VideoColumn } from '../../tableTypes/VideoColumn';\nimport { TrendingVideosModifier } from '../../types/ApiTypes';\nimport { VideoPopularityDisplayData } from '../../types/TableDisplayData/VideoPopularityDisplayData';\nimport { getFormattedDateTime } from '../../utils/DateTimeUtils';\nimport DefaultDataTableProps from '../../utils/DefaultDataTableProps';\nimport { GetCurrentNationalitySpan } from '../../utils/NationalityUtils';\nimport { PopularVideoToDisplayData } from '../../utils/transform/PopularVideoTransform';\nimport { GoToPage } from '../../utils/TypeSafeRouting';\nimport tableStyle from '../../style/DataTableStyle.module.css';\nimport { RankingColumn } from '../../tableTypes/RankingColumn';\n\nexport interface TrendingVideosPageProps {\n  dictionary: Dictionary;\n  modifier: TrendingVideosModifier;\n}\n\nconst TrendingVideosPage: FunctionalComponent<TrendingVideosPageProps> = (\n  props: TrendingVideosPageProps\n) => {\n  document.title = `${props.dictionary.header.trendingVideos} | ${props.dictionary.header.title}`;\n\n  const columns: Array<TableColumn<VideoPopularityDisplayData>> = [\n    {\n      ...RankingColumn(),\n      sortable: true,\n      width: '40px',\n    },\n    {\n      ...NameColumn(),\n      width: '200px',\n    },\n    {\n      name: <Text id=\"table.title\">Title</Text>,\n      selector: (row: { title: string }): string => row.title,\n      wrap: true,\n    },\n    {\n      ...VideoColumn(),\n      width: '200px',\n    },\n    {\n      name: <Text id=\"table.viewCount\">View Count</Text>,\n      selector: (row: { viewCount: number }): number => row.viewCount,\n      right: true,\n      sortable: true,\n      width: '80px',\n    },\n    {\n      name: <Text id=\"table.uploadTime\">Upload Time</Text>,\n      selector: (row: { uploadTime: Date }): string =>\n        getFormattedDateTime(row.uploadTime),\n      sortable: true,\n      width: '175px',\n    },\n  ];\n\n  // search filter\n  const [data, setData] = useState<Array<VideoPopularityDisplayData>>([]);\n  const [filterName, setFilterName] = useState<string>('');\n  const [filterTitle, setFilterTitle] = useState<string>('');\n  const [resetPaginationToggle, setResetPaginationToggle] =\n    useState<boolean>(false);\n  const filteredData = data\n    .filter(\n      (item) =>\n        item.name && item.name.toLowerCase().includes(filterName.toLowerCase())\n    )\n    .filter((item) => {\n      if (item.title === undefined) return true;\n      return item.title.toLowerCase().includes(filterTitle.toLowerCase());\n    });\n\n  const searchBarComponent = useMemo(() => {\n    const handleClearName = (): void => {\n      if (filterName) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterName('');\n      }\n    };\n\n    const handleClearTitle = (): void => {\n      if (filterTitle) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterTitle('');\n      }\n    };\n\n    const optionValue: Array<{\n      option: h.JSX.Element;\n      value: TrendingVideosModifier;\n    }> = [\n      {\n        option: <Text id=\"table.noDuplicate\">One video per VTuber</Text>,\n        value: 'no-duplicate',\n      },\n      {\n        option: <Text id=\"table.allVideos\">All videos</Text>,\n        value: 'all',\n      },\n    ];\n\n    return (\n      <div class={tableStyle.searchBarGroup}>\n        <DropDownList\n          tipText={props.dictionary.table.options}\n          value={props.modifier}\n          optionValue={optionValue}\n          onChange={(e: any) =>\n            GoToPage({\n              type: 'trending-videos',\n              viewCountSortOrder: e.target.value,\n            })\n          }\n        />\n        <SearchBar\n          placeholderText={props.dictionary.table.searchByDisplayName}\n          onFilter={(e: any): void => setFilterName(e.target.value)}\n          onClear={handleClearName}\n          filterText={filterName}\n        />\n        <SearchBar\n          placeholderText={props.dictionary.table.searchByTitle}\n          onFilter={(e: any): void => setFilterTitle(e.target.value)}\n          onClear={handleClearTitle}\n          filterText={filterTitle}\n        />\n      </div>\n    );\n  }, [\n    filterName,\n    filterTitle,\n    resetPaginationToggle,\n    props.modifier,\n    props.dictionary,\n  ]);\n  const [pending, setPending] = useState(true);\n\n  const getVideos = async (): Promise<void> => {\n    await Api.getTrendingVideos(props.modifier).then((res) => {\n      // thanks to JavaScript sorting being mutable, I have to convert ReadonlyArray to Array first\n      setData(\n        res.data.videos\n          .map((e) => e)\n          .sort((a, b) => b.viewCount - a.viewCount)\n          .map((e, index) => PopularVideoToDisplayData(e, index + 1))\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVideos();\n  }, [props.modifier]);\n\n  const customStyles: TableStyles = {\n    table: {\n      style: {\n        maxHeight: '80vh',\n      },\n    },\n    rows: {\n      style: {\n        minHeight: '36px', // override the row height\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '5px', // override the cell padding for head cells\n        paddingRight: '5px',\n      },\n    },\n    cells: {\n      style: {\n        paddingLeft: '5px', // override the cell padding for data cells\n        paddingRight: '5px',\n      },\n    },\n  };\n\n  return (\n    <>\n      <h1>\n        <Text id=\"header.trendingVideos\">Trending Videos</Text>\n        {GetCurrentNationalitySpan()}\n      </h1>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={filteredData}\n        customStyles={customStyles}\n        fixedHeader\n        pagination\n        paginationComponentOptions={props.dictionary.table.paginationOptions}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n        subHeader\n        subHeaderComponent={searchBarComponent}\n      />\n    </>\n  );\n};\n\nexport default TrendingVideosPage;\n"],"sourceRoot":""}