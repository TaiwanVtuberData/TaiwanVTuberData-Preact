{"version":3,"sources":["webpack:///./routes/VTuber/index.tsx"],"names":["VTuberPage","props","data","setData","useState","document","title","name","dictionary","header","useEffect","async","Api","id","then","res","VTuberFullToDisplay","VTuber","getVTuber","undefined"],"mappings":"4FAAA,2GA0CeA,UA1BbC,IACG,QACH,MAAOC,EAAMC,GAAWC,cAExBC,SAASC,MAAS,GAAD,UAAGJ,aAAH,EAAGA,EAAMK,YAAT,QAAiB,QAAQN,EAAMO,WAAWC,OAAOH,QAYlE,OAJAI,aAAU,KANQC,iBACVC,IAAcX,EAAMY,IAAIC,MAAMC,IAClCZ,EAAQa,YAAoBD,EAAIb,KAAKe,aAKvCC,KACC,IAGD,mBACE,sBACE,sCAAQhB,aAAR,EAAQA,EAAMK,YAAd,QAAsB,YAAC,IAAD,CAAMM,GAAG,gBAAT,cAAtB,WAEQM,IAATjB,EAAqB,YAAC,IAAD,CAAmBe,OAAQf,IAAW,Q","file":"route-VTuber.chunk.b75fa.esm.js","sourcesContent":["import { Fragment, FunctionalComponent, h } from 'preact';\nimport { useEffect, useState } from 'preact/hooks';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport * as Api from '../../services/ApiService';\nimport '../../style/index.css';\nimport VTuberInformation from '../../components/VTuberInformation';\nimport { VTuberDisplayFullData } from '../../types/TableDisplayData/VTuberDisplayFullData';\nimport { VTuberFullToDisplay } from '../../utils/transform/FullTransform';\nimport { Text } from 'preact-i18n';\n\nexport interface VTuberPageProps {\n  id: string;\n  dictionary: Dictionary;\n}\n\nconst VTuberPage: FunctionalComponent<VTuberPageProps> = (\n  props: VTuberPageProps\n) => {\n  const [data, setData] = useState<VTuberDisplayFullData>();\n\n  document.title = `${data?.name ?? ''} | ${props.dictionary.header.title}`;\n\n  const getVTuber = async (): Promise<void> => {\n    await Api.getVTuber(props.id).then((res) => {\n      setData(VTuberFullToDisplay(res.data.VTuber));\n    });\n  };\n\n  useEffect(() => {\n    getVTuber();\n  }, []);\n\n  return (\n    <>\n      <h1>\n        <span> {data?.name ?? <Text id=\"text.loading\">Loading...</Text>} </span>\n      </h1>\n      {data !== undefined ? <VTuberInformation VTuber={data} /> : null}\n    </>\n  );\n};\n\nexport default VTuberPage;\n"],"sourceRoot":""}