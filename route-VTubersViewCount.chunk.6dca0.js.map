{"version":3,"sources":["webpack:///./style/CompactTableStyle.ts","webpack:///./tableTypes/NameColumn.tsx","webpack:///./routes/VTubersViewCount/index.tsx","webpack:///./tableTypes/GroupColumn.tsx","webpack:///./components/ProfileImagePopup/style.module.css","webpack:///./components/ProfileImagePopup/index.tsx","webpack:///./utils/NumberUtils.ts","webpack:///./components/DropDownList/style.module.css","webpack:///./components/DropDownList/index.tsx","webpack:///./tableTypes/NationalityColumn.tsx","webpack:///./utils/FilterModelHelper.ts","webpack:///./components/SearchBar/style.module.css","webpack:///./components/SearchBar/index.tsx","webpack:///./style/ActivityRowStyles.ts","webpack:///./utils/DefaultDataTableProps.ts","webpack:///./utils/NationalityUtils.tsx","webpack:///./components/FilterWindow/style.module.css","webpack:///./components/FilterWindow/index.tsx","webpack:///./utils/StringUtils.ts","webpack:///./utils/transform/ViewCountTransform.ts","webpack:///./tableTypes/RankingColumn.tsx","webpack:///./tableTypes/PopularVideoColumn.tsx","webpack:///./style/DataTableStyle.module.css"],"names":["CompactTableStyle","headCells","style","paddingLeft","paddingRight","cells","NameColumn","name","h","Text","id","cell","row","ProfileImagePopup","VTuberId","imgUrl","VTubersViewCountPage","props","document","title","concat","dictionary","header","VTubersViewCount","columns","_objectSpread","RankingColumn","sortable","width","selector","totalViewCount","compact","GrowthDisplayDataToString","_7DaysGrowth","table","right","_30DaysGrowth","PopularVideoColumn","GroupColumn","NationalityColumn","_useState2","_slicedToArray","useState","data","setData","_useState4","YouTubeId","TwitchId","group","nationality","filterModel","setFilterModel","filteredData","filter","e","filterFunction","searchBarComponent","useMemo","optionValue","option","value","fieldPlaceHolderMappings","Map","searchByDisplayName","searchByYouTubeId","searchByTwitchId","searchByGroup","searchByNationality","class","tableStyle","searchBarGroup","DropDownList","tipText","sortingMethod","modifier","onChange","GoToPage","type","sortOrder","target","FilterWindow","openSearchText","text","openSearch","closeSearchText","closeSearch","_useState6","pending","setPending","_7DaysDescendingSort","rowA","rowB","YouTube","diff","_30DaysDescendingSort","getVTubers","_ref","Api","sortBy","count","then","res","VTubers","map","sort","GetSortingMethod","index","VTuberViewCountToDisplay","apply","arguments","useEffect","Fragment","GetCurrentNationalitySpan","DataTable","_extends","DefaultDataTableProps","conditionalRowStyles","ActivityRowStyles","customStyles","fixedHeader","pagination","paginationComponentOptions","paginationOptions","progressComponent","progressPending","subHeader","subHeaderComponent","undefined","href","GetRoute","ProfileImage","clickBehavior","PrependSign","valueToPercentString","toFixed","tableTranslation","percentage","recordType","noRecord","atLeast","tryParseInteger","str","defaultValue","parsedVal","parseInt","isNaN","dropDownStyle","dropDown","key","_row$nationality","targetModel","Object","entries","entry","toLowerCase","includes","some","SearchBar","_props$filterText","placeholder","placeholderText","filterText","onFilter","onClick","onClear","when","activity","backgroundColor","cursor","debutInfo","hasDebutInfo","isRecentlyDebut","color","nationalityModifier","getNationalityModifierState","isOpened","setIsOpened","setFilter","createSearchBar","keyTyped","handleOnFilterChange","nullableString","trimmed","trim","trimOrNullOnEmpty","_defineProperty","handleOnChange","get","fields","keys","ranking","_e$Twitch","Twitch","popularVideo","wrap","ShowVideoButton"],"mappings":"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","file":"route-VTubersViewCount.chunk.6dca0.js","sourcesContent":["import { TableStyles } from 'react-data-table-component';\n\nexport const CompactTableStyle: TableStyles = {\n  headCells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for head cells\n      paddingRight: '5px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for data cells\n      paddingRight: '5px',\n    },\n  },\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ProfileImagePopup from '../components/ProfileImagePopup';\n\nexport interface NameColumnRowData {\n  id: string;\n  imgUrl?: string;\n  name: string;\n}\n\nexport const NameColumn = <\n  RowData extends NameColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.displayName\">Name</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <ProfileImagePopup\n        VTuberId={row.id}\n        imgUrl={row.imgUrl}\n        name={row.name}\n      />\n    ),\n  };\n};\n","import * as Api from '../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useMemo, useEffect } from 'preact/hooks';\nimport DataTable, { TableColumn } from 'react-data-table-component';\nimport DropDownList from '../../components/DropDownList';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport { CompactTableStyle } from '../../style/CompactTableStyle';\nimport { GroupColumn } from '../../tableTypes/GroupColumn';\nimport { NameColumn } from '../../tableTypes/NameColumn';\nimport { NationalityColumn } from '../../tableTypes/NationalityColumn';\nimport { PopularVideoColumn } from '../../tableTypes/PopularVideoColumn';\nimport { RankingColumn } from '../../tableTypes/RankingColumn';\nimport { GrowthData } from '../../types/Common/GrowthData';\nimport { YouTubeViewCountGrowthData } from '../../types/Common/YouTube/YouTubeViewCountGrowthData';\nimport { VTuberViewCountGrowthDisplayData } from '../../types/TableDisplayData/VTuberViewCountGrowthDisplayData';\nimport DefaultDataTableProps from '../../utils/DefaultDataTableProps';\nimport { GetCurrentNationalitySpan } from '../../utils/NationalityUtils';\nimport { GrowthDisplayDataToString } from '../../utils/NumberUtils';\nimport { VTuberViewCountToDisplay } from '../../utils/transform/ViewCountTransform';\nimport { GoToPage } from '../../utils/TypeSafeRouting';\nimport tableStyle from '../../style/DataTableStyle.module.css';\nimport { DayRangeSortOrder } from '../../types/ApiTypes';\nimport ActivityRowStyles from '../../style/ActivityRowStyles';\nimport { VTuberViewCountGrowthDisplayDataFilterModel } from '../../types/FilterType/VTuberViewCountGrowthDisplayDataFilterModel';\nimport FilterWindow from '../../components/FilterWindow';\nimport { filterFunction } from '../../utils/FilterModelHelper';\n\nexport interface VTubersViewCountPageProps {\n  dictionary: Dictionary;\n  modifier: DayRangeSortOrder;\n}\n\nconst VTubersViewCountPage: FunctionalComponent<VTubersViewCountPageProps> = (\n  props: VTubersViewCountPageProps\n) => {\n  document.title = `${props.dictionary.header.VTubersViewCount} | ${props.dictionary.header.title}`;\n\n  const columns: Array<TableColumn<VTuberViewCountGrowthDisplayData>> = [\n    {\n      ...RankingColumn(),\n      sortable: true,\n      width: '40px',\n    },\n    {\n      ...NameColumn(),\n      width: '200px',\n    },\n    {\n      name: (\n        <Text id=\"table.YouTubeTotalViewCount\">YouTube Total View Count</Text>\n      ),\n      selector: (row: { totalViewCount: number }): number => row.totalViewCount,\n      compact: true,\n      sortable: true,\n    },\n    {\n      name: <Text id=\"table._7DaysViewCountGrowth\">7 Days Growth</Text>,\n      cell: (row: { _7DaysGrowth: GrowthData }): string =>\n        GrowthDisplayDataToString(row._7DaysGrowth, props.dictionary.table),\n      compact: true,\n      right: true,\n    },\n    {\n      name: <Text id=\"table._30DaysViewCountGrowth\">30 Days Growth</Text>,\n      cell: (row: { _30DaysGrowth: GrowthData }): string =>\n        GrowthDisplayDataToString(row._30DaysGrowth, props.dictionary.table),\n      compact: true,\n      right: true,\n    },\n    {\n      ...PopularVideoColumn(),\n      width: '100px',\n    },\n    {\n      ...GroupColumn(),\n      width: '150px',\n    },\n    {\n      ...NationalityColumn(),\n      width: '125px',\n    },\n  ];\n\n  // search filter\n  const [data, setData] = useState<Array<VTuberViewCountGrowthDisplayData>>([]);\n  const [filterModel, setFilterModel] =\n    useState<VTuberViewCountGrowthDisplayDataFilterModel>({\n      name: null,\n      YouTubeId: null,\n      TwitchId: null,\n      group: null,\n      nationality: null,\n    });\n  const filteredData = data.filter((e) => filterFunction(e, filterModel));\n\n  const searchBarComponent = useMemo(() => {\n    const optionValue: Array<{\n      option: h.JSX.Element;\n      value: DayRangeSortOrder;\n    }> = [\n      {\n        option: <Text id=\"table._7DaysViewCountGrowth\">7 Days Growth</Text>,\n        value: '7-days',\n      },\n      {\n        option: <Text id=\"table._30DaysViewCountGrowth\">30 Days Growth</Text>,\n        value: '30-days',\n      },\n    ];\n\n    const handleFilterWindow = (\n      filterModel: VTuberViewCountGrowthDisplayDataFilterModel\n    ): void => {\n      setFilterModel(filterModel);\n    };\n\n    const fieldPlaceHolderMappings: Map<string, string> = new Map<\n      string,\n      string\n    >([\n      ['name', props.dictionary.table.searchByDisplayName],\n      ['YouTubeId', props.dictionary.table.searchByYouTubeId],\n      ['TwitchId', props.dictionary.table.searchByTwitchId],\n      ['group', props.dictionary.table.searchByGroup],\n      ['nationality', props.dictionary.table.searchByNationality],\n    ]);\n\n    return (\n      <div class={tableStyle.searchBarGroup}>\n        <DropDownList\n          tipText={props.dictionary.table.sortingMethod}\n          value={props.modifier}\n          optionValue={optionValue}\n          onChange={(e: any) =>\n            GoToPage({\n              type: 'vtubers-view-count',\n              sortOrder: e.target.value,\n            })\n          }\n        />\n        <FilterWindow\n          filterModel={filterModel}\n          fieldPlaceHolderMappings={fieldPlaceHolderMappings}\n          openSearchText={props.dictionary.text.openSearch}\n          closeSearchText={props.dictionary.text.closeSearch}\n          onChange={handleFilterWindow}\n        />\n      </div>\n    );\n  }, [filterModel, props.modifier, props.dictionary]);\n\n  const [pending, setPending] = useState(true);\n\n  const _7DaysDescendingSort = <\n    T extends { YouTube: YouTubeViewCountGrowthData }\n  >(\n    rowA: T,\n    rowB: T\n  ): number => {\n    return rowB.YouTube._7DaysGrowth.diff - rowA.YouTube._7DaysGrowth.diff;\n  };\n\n  const _30DaysDescendingSort = <\n    T extends { YouTube: YouTubeViewCountGrowthData }\n  >(\n    rowA: T,\n    rowB: T\n  ): number => {\n    return rowB.YouTube._30DaysGrowth.diff - rowA.YouTube._30DaysGrowth.diff;\n  };\n\n  const GetSortingMethod = (sortBy: DayRangeSortOrder) => {\n    switch (sortBy) {\n      case '7-days':\n        return _7DaysDescendingSort;\n      case '30-days':\n        return _30DaysDescendingSort;\n    }\n  };\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getVTubersViewCountChange({\n      sortBy: props.modifier,\n      count: '100',\n    }).then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .map((e) => e)\n          .sort(GetSortingMethod(props.modifier))\n          .map((e, index) => VTuberViewCountToDisplay(e, index + 1))\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h1>\n        <Text id=\"header.VTubersViewCount\">VTubers View Count Change</Text>\n        {GetCurrentNationalitySpan()}\n      </h1>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={filteredData}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        fixedHeader\n        pagination\n        paginationComponentOptions={props.dictionary.table.paginationOptions}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n        subHeader\n        subHeaderComponent={searchBarComponent}\n      />\n    </>\n  );\n};\n\nexport default VTubersViewCountPage;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GetRoute } from '../utils/TypeSafeRouting';\n\nexport interface GroupColumnRowData {\n  group?: string;\n}\n\nexport const GroupColumn = <\n  RowData extends GroupColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.group\">Group</Text>,\n    cell: (row: RowData): h.JSX.Element | null =>\n      row.group !== undefined ? (\n        <a href={GetRoute({ type: 'group', name: row.group })}>{row.group}</a>\n      ) : null,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__vr1DG\",\"profileImageFlex\":\"profileImageFlex__4VERG\",\"nameFlex\":\"nameFlex__WFOO9\"};","import { FunctionalComponent, h } from 'preact';\nimport ProfileImage from '../ProfileImage';\nimport style from './style.module.css';\n\nexport interface ProfileImagePopupProps {\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n}\n\nconst ProfileImagePopup: FunctionalComponent<ProfileImagePopupProps> = (\n  props: ProfileImagePopupProps\n): h.JSX.Element => {\n  return (\n    <div class={style.container}>\n      <div class={style.profileImageFlex}>\n        <ProfileImage\n          VTuberId={props.VTuberId}\n          imgUrl={props.imgUrl}\n          clickBehavior=\"popup\"\n        />\n      </div>\n      <span class={style.nameFlex}>{props.name}</span>\n    </div>\n  );\n};\n\nexport default ProfileImagePopup;\n","import { GrowthRecordType } from '../types/Common/GrowthData';\n\nexport const PrependSign = (value: number): string => {\n  if (value > 0) return `+${value}`;\n  if (value < 0) return `${value}`;\n\n  return '0';\n};\n\nconst valueToPercentString = (value: number): string =>\n  (value * 100).toFixed(2);\n\nexport const GrowthDisplayDataToString = (\n  e: { diff: number; recordType: GrowthRecordType; percentage?: number },\n  tableTranslation: { noRecord: string; atLeast: string }\n): string => {\n  if (e.percentage) {\n    switch (e.recordType) {\n      case 'none':\n        return tableTranslation.noRecord;\n      case 'partial':\n        return `${tableTranslation.atLeast} ${PrependSign(\n          e.diff\n        )} (${valueToPercentString(e.percentage as number)}%)`;\n      case 'full':\n        return `${PrependSign(e.diff)} (${valueToPercentString(\n          e.percentage\n        )}%)`;\n    }\n  }\n\n  switch (e.recordType) {\n    case 'none':\n      return tableTranslation.noRecord;\n    case 'partial':\n      return `${tableTranslation.atLeast} ${PrependSign(e.diff)}`;\n    case 'full':\n      return `${PrependSign(e.diff)}`;\n  }\n};\n\nexport const tryParseInteger = (\n  str: string | undefined,\n  defaultValue: number\n): number => {\n  if (str !== undefined) {\n    const parsedVal = parseInt(str, 10);\n    if (isNaN(parsedVal) === false) {\n      return parsedVal;\n    }\n  }\n\n  return defaultValue;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tipText\":\"tipText__4DHD3\"};","import { h } from 'preact';\nimport style from './style.module.css';\nimport dropDownStyle from '../../style/DropDownStyle.module.css';\n\nexport interface DropDownListProps<ValueType> {\n  tipText?: string;\n  optionValue?: Array<{ option: any; value: ValueType }>;\n  value?: ValueType;\n  onChange?: (e: unknown) => unknown;\n}\n\nfunction DropDownList<ValueType extends string | number>(\n  props: DropDownListProps<ValueType>\n): h.JSX.Element {\n  return (\n    <div>\n      <span class={style.tipText}>{props.tipText}</span>\n      <select\n        class={dropDownStyle.dropDown}\n        value={props.value}\n        onChange={props.onChange}\n      >\n        {props.optionValue !== undefined\n          ? props.optionValue.map((e) => (\n              <option key={e.value} value={e.value}>\n                {e.option}\n              </option>\n            ))\n          : null}\n      </select>\n    </div>\n  );\n}\n\nexport default DropDownList;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\n\nexport interface NationalityColumnRowData {\n  nationality?: string;\n}\n\nexport const NationalityColumn = <\n  RowData extends NationalityColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.nationality\">Nationality</Text>,\n    selector: (row: RowData): string => row.nationality ?? '',\n  };\n};\n","export function filterFunction<\n  TargetType extends object,\n  FilterModel extends object\n>(targetModel: TargetType, filterModel: FilterModel): boolean {\n  const result = Object.entries(filterModel).map((entry) => {\n    const keyTyped = entry[0] as keyof typeof targetModel;\n    const target = targetModel[keyTyped] as string | undefined | null;\n\n    const filter = entry[1] as string | null;\n\n    // if there is no filter applied\n    if (filter === null) {\n      return true;\n    }\n\n    // if target doesn't exist\n    if (target === null || target === undefined || target === '') {\n      return false;\n    }\n\n    return target.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  const someFilterNotMatch = result.some((e) => e === false);\n\n  return !someFilterNotMatch;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__1lsi6\",\"textField\":\"textField__bDpXR\",\"button\":\"button__maFzS\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface SearchBarProps {\n  placeholderText?: string;\n  filterText: string | null;\n  onFilter: (e: unknown) => unknown;\n  onClear: () => unknown;\n}\n\nconst SearchBar: FunctionalComponent<SearchBarProps> = (\n  props: SearchBarProps\n): h.JSX.Element => (\n  <div class={style.container}>\n    <input\n      type=\"text\"\n      class={style.textField}\n      placeholder={props.placeholderText}\n      value={props.filterText ?? ''}\n      onChange={props.onFilter}\n    />\n\n    <button type=\"button\" class={style.button} onClick={props.onClear}>\n      X\n    </button>\n  </div>\n);\n\nexport default SearchBar;\n","import { Activity } from '../types/Common/Activity';\nimport { DebutInfo } from '../types/DebutInfo';\n\nconst ActivityRowStyles = [\n  {\n    when: (row: { activity: Activity }): boolean =>\n      row.activity === 'preparing',\n    style: {\n      backgroundColor: 'rgba(141, 209, 157, 0.9)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity; debutInfo?: DebutInfo }): boolean =>\n      row.activity === 'active' &&\n      row.debutInfo !== undefined &&\n      row.debutInfo.hasDebutInfo === true &&\n      row.debutInfo.isRecentlyDebut === true,\n    style: {\n      backgroundColor: 'rgba(156, 205, 196, 0.5)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity }): boolean => row.activity === 'graduate',\n    style: {\n      backgroundColor: 'rgba(123, 123, 123, 0.9)',\n      color: 'white',\n      '&:hover': {\n        cursor: 'not-allowed',\n      },\n    },\n  },\n];\n\nexport default ActivityRowStyles;\n","import { TableProps } from 'react-data-table-component';\nimport ActivityRowStyles from '../style/ActivityRowStyles';\nimport { Activity } from '../types/Common/Activity';\n\n// columns and data are empty, user should fill them when using DefaultDataTableProps\nconst DefaultDataTableProps = <\n  T extends { activity: Activity }\n>(): TableProps<T> => ({\n  columns: [],\n  data: [],\n  conditionalRowStyles: ActivityRowStyles,\n});\n\nexport default DefaultDataTableProps;\n","import { Fragment, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { getNationalityModifierState } from '../global/DisplayNationality';\nimport { NationalityModifier } from '../types/Common/NationalityModifier';\n\nexport const GetCurrentNationalitySpan = (): JSX.Element | null => {\n  const nationalityModifier: NationalityModifier =\n    getNationalityModifierState();\n\n  switch (nationalityModifier) {\n    case 'TW':\n    case 'HK':\n    case 'MY':\n      return (\n        <>\n          {' '}\n          (<Text id=\"text.onlyShowing\">only showing </Text>\n          <Text id={`nationalityTitle.${nationalityModifier}`}>\n            placeholder\n          </Text>{' '}\n          VTuber)\n        </>\n      );\n    case 'all':\n    default:\n      return null;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"floating\":\"floating__uhu4Y\",\"floatingHidden\":\"floatingHidden__mvSUQ\",\"floatingShowing\":\"floatingShowing__nwzm5\"};","import { h } from 'preact';\nimport { useState } from 'preact/hooks';\nimport { trimOrNullOnEmpty } from '../../utils/StringUtils';\nimport SearchBar from '../SearchBar';\nimport style from './style.module.css';\n\nexport interface FilterWindowProps<FilterModel extends object> {\n  filterModel: FilterModel;\n  fieldPlaceHolderMappings: Map<string, string>;\n  openSearchText: string;\n  closeSearchText: string;\n  onChange?: (e: FilterModel) => void;\n}\n\nfunction FilterWindow<FilterModel extends object>(\n  props: FilterWindowProps<FilterModel>\n): JSX.Element {\n  const [isOpened, setIsOpened] = useState<boolean>(false);\n  const [filter, setFilter] = useState<FilterModel>(props.filterModel);\n\n  function handleOnChange(e: FilterModel): void {\n    if (props.onChange != null) {\n      props.onChange(e);\n    }\n  }\n\n  const createSearchBar = (key: string): JSX.Element => {\n    {\n      const keyTyped = key as keyof typeof filter;\n\n      const handleOnFilterChange = (e: string | null): void => {\n        const nullableString: string | null = trimOrNullOnEmpty(e);\n\n        setFilter({ ...filter, [keyTyped]: nullableString });\n        handleOnChange({ ...filter, [keyTyped]: nullableString });\n      };\n\n      return (\n        <SearchBar\n          key={key}\n          placeholderText={props.fieldPlaceHolderMappings.get(\n            keyTyped as string\n          )}\n          filterText={filter[keyTyped] as string | null}\n          onFilter={(e: any): void => handleOnFilterChange(e.target.value)}\n          onClear={(): void => handleOnFilterChange(null)}\n        />\n      );\n    }\n  };\n\n  const fields: Array<JSX.Element> = Object.keys(props.filterModel).map((key) =>\n    createSearchBar(key)\n  );\n\n  const ToggleButton = (): JSX.Element => (\n    <input\n      type=\"button\"\n      value={isOpened === true ? props.closeSearchText : props.openSearchText}\n      onClick={(): void => setIsOpened(!isOpened)}\n    />\n  );\n\n  const toggleFloatingClass = (): string => {\n    if (isOpened) return `${style.floating} ${style.floatingShowing}`;\n    else return `${style.floating} ${style.floatingHidden}`;\n  };\n\n  return (\n    <div>\n      <ToggleButton />\n      {isOpened === true ? (\n        <div class={toggleFloatingClass()}>{fields}</div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default FilterWindow;\n","export function trimOrNullOnEmpty(\n  value: string | null | undefined\n): string | null {\n  if (value === null || value === undefined) return null;\n\n  const trimmed = value.trim();\n\n  if (trimmed === '') return null;\n\n  return trimmed;\n}\n","import { VTuberViewCountGrowthData } from '../../types/ApiData/VTuberViewCountChangeData';\nimport { VTuberViewCountGrowthDisplayData } from '../../types/TableDisplayData/VTuberViewCountGrowthDisplayData';\n\nexport const VTuberViewCountToDisplay = (\n  e: VTuberViewCountGrowthData,\n  ranking: number\n): VTuberViewCountGrowthDisplayData => ({\n  id: e.id,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  YouTubeId: e.YouTube.id,\n  TwitchId: e.Twitch?.id,\n  totalViewCount: e.YouTube.totalViewCount,\n  _7DaysGrowth: e.YouTube._7DaysGrowth,\n  _30DaysGrowth: e.YouTube._30DaysGrowth,\n  popularVideo: e.popularVideo,\n  group: e.group,\n  nationality: e.nationality,\n  activity: e.activity,\n  ranking: ranking,\n});\n","import { TableColumn } from 'react-data-table-component';\n\nexport interface RankingColumnRowData {\n  ranking: number;\n}\n\nexport const RankingColumn = <\n  RowData extends RankingColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: '#',\n    selector: (row: RowData): number => row.ranking,\n    wrap: false,\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ShowVideoButton from '../components/ShowVideoButton';\nimport { VideoInfo } from '../types/Common/VideoInfo';\n\nexport interface PopularVideoColumnRowData {\n  popularVideo?: VideoInfo;\n}\n\nexport const PopularVideoColumn = <\n  RowData extends PopularVideoColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularVideo\">Popular Video</Text>,\n    cell: (row: RowData): JSX.Element | null =>\n      row.popularVideo !== undefined ? (\n        <ShowVideoButton popularVideo={row.popularVideo} />\n      ) : null,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchBarGroup\":\"R1T8+hwxvBovrVdGHizUFw==\"};"],"sourceRoot":""}