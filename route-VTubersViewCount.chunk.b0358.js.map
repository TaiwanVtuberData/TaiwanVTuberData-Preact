{"version":3,"sources":["webpack:///./style/CompactTableStyle.ts","webpack:///./components/ProfileImagePopup/style.module.css","webpack:///./components/ProfileImagePopup/index.tsx","webpack:///./tableTypes/NameColumn.tsx","webpack:///./tableTypes/GroupColumn.tsx","webpack:///./utils/NumberUtils.ts","webpack:///./components/DropDownList/style.module.css","webpack:///./components/DropDownList/index.tsx","webpack:///./tableTypes/NationalityColumn.tsx","webpack:///./components/SearchBar/style.module.css","webpack:///./components/SearchBar/index.tsx","webpack:///./style/ActivityRowStyles.ts","webpack:///./utils/DefaultDataTableProps.ts","webpack:///./utils/NationalityUtils.tsx","webpack:///./routes/VTubersViewCount/index.tsx","webpack:///./utils/transform/ViewCountTransform.ts","webpack:///./tableTypes/RankingColumn.tsx","webpack:///./tableTypes/PopularVideoColumn.tsx","webpack:///./style/DataTableStyle.module.css"],"names":["CompactTableStyle","headCells","style","paddingLeft","paddingRight","cells","ProfileImagePopup","props","class","ProfileImage","VTuberId","imgUrl","name","NameColumn","id","cell","row","GroupColumn","undefined","group","tableStyle","groupLink","href","GetRoute","type","PrependSign","value","valueToPercentString","toFixed","GrowthDisplayDataToString","e","tableTranslation","percentage","recordType","noRecord","atLeast","diff","DropDownList","tipText","dropDownStyle","dropDown","onChange","optionValue","map","key","option","NationalityColumn","selector","nationality","SearchBar","placeholder","placeholderText","filterText","onFilter","onClick","onClear","ActivityRowStyles","when","activity","backgroundColor","cursor","color","DefaultDataTableProps","columns","data","conditionalRowStyles","GetCurrentNationalitySpan","nationalityModifier","getNationalityModifierState","VTubersViewCountPage","document","title","dictionary","header","VTubersViewCount","RankingColumn","sortable","width","totalViewCount","compact","_7DaysGrowth","table","right","_30DaysGrowth","PopularVideoColumn","useState","setData","filterName","setFilterName","filterGroup","setFilterGroup","resetPaginationToggle","setResetPaginationToggle","filteredData","filter","item","toLowerCase","includes","searchBarComponent","useMemo","searchBarGroup","sortingMethod","modifier","GoToPage","viewCountSortOrder","target","searchByDisplayName","searchByGroup","pending","setPending","_7DaysDescendingSort","rowA","rowB","YouTube","_30DaysDescendingSort","getVTubers","Api","sortBy","count","then","res","VTubers","sort","GetSortingMethod","index","VTuberViewCountToDisplay","useEffect","customStyles","fixedHeader","pagination","paginationComponentOptions","paginationOptions","progressComponent","progressPending","subHeader","subHeaderComponent","ranking","YouTubeId","TwitchId","Twitch","popularVideo","wrap"],"mappings":"8FAEA,kCAAO,IAAMA,EAAiC,CAC5CC,UAAW,CACTC,MAAO,CACLC,YAAa,MACbC,aAAc,QAGlBC,MAAO,CACLH,MAAO,CACLC,YAAa,MACbC,aAAc,U,8GCXL,EAAa,mBAAb,EAAmD,0BAAnD,EAAwF,kBCsBxFE,EAbwD,SACrEC,GAEA,OACE,mBAAKC,MAAON,GACV,mBAAKM,MAAON,GACV,YAACO,EAAA,EAAD,CAAcC,SAAUH,EAAMG,SAAUC,OAAQJ,EAAMI,UAExD,oBAAMH,MAAON,GAAiBK,EAAMK,QCP7BC,EAAa,WAGxB,MAAO,CACLD,KAAM,YAAC,IAAD,CAAME,GAAG,qBAAT,QACNC,KAAM,SAACC,GAAD,OACJ,YAAC,EAAD,CACEN,SAAUM,EAAIF,GACdH,OAAQK,EAAIL,OACZC,KAAMI,EAAIJ,W,oCCpBlB,sFAUaK,EAAc,WAGzB,MAAO,CACLL,KAAM,YAAC,IAAD,CAAME,GAAG,eAAT,SACNC,KAAM,SAACC,GAAD,YACUE,IAAdF,EAAIG,MACF,iBACEX,MAAOY,IAAWC,UAClBC,KAAMC,YAAS,CAAEC,KAAM,QAASZ,KAAMI,EAAIG,SAEzCH,EAAIG,OAEL,S,kCCrBV,kCAAO,IAAMM,EAAc,SAACC,GAC1B,OAAIA,EAAQ,EAAU,IAAP,OAAWA,GACtBA,EAAQ,EAAU,GAAP,OAAUA,GAElB,KAGHC,EAAuB,SAACD,GAAD,OAClB,IAARA,GAAaE,QAAQ,IAEXC,EAA4B,SACvCC,EACAC,GAEA,GAAID,EAAEE,WACJ,OAAQF,EAAEG,YACR,IAAK,OACH,OAAOF,EAAiBG,SAC1B,IAAK,UACH,gBAAUH,EAAiBI,QAA3B,YAAsCV,EACpCK,EAAEM,MADJ,aAEMT,EAAqBG,EAAEE,YAF7B,MAGF,IAAK,OACH,gBAAUP,EAAYK,EAAEM,MAAxB,aAAkCT,EAChCG,EAAEE,YADJ,MAMN,OAAQF,EAAEG,YACR,IAAK,OACH,OAAOF,EAAiBG,SAC1B,IAAK,UACH,gBAAUH,EAAiBI,QAA3B,YAAsCV,EAAYK,EAAEM,OACtD,IAAK,OACH,gBAAUX,EAAYK,EAAEM,U,kDCpCf,EAAW,iB,YCiCXC,IAvBf,SACE9B,GAEA,OACE,uBACE,oBAAMC,MAAON,GAAgBK,EAAM+B,SACnC,sBACE9B,MAAO+B,IAAcC,SACrBd,MAAOnB,EAAMmB,MACbe,SAAUlC,EAAMkC,eAEOvB,IAAtBX,EAAMmC,YACHnC,EAAMmC,YAAYC,KAAI,SAACb,GAAD,OACpB,sBAAQc,IAAKd,EAAEJ,MAAOA,MAAOI,EAAEJ,OAC5BI,EAAEe,WAGP,S,oCC5BZ,8DAQaC,EAAoB,WAG/B,MAAO,CACLlC,KAAM,YAAC,IAAD,CAAME,GAAG,qBAAT,eACNiC,SAAU,SAAC/B,GAAD,uBAA0BA,EAAIgC,mBAA9B,QAA6C,O,kDCZ5C,EAAa,mBAAb,EAA4C,mBAA5C,EAAwE,gBC2BxEC,IAlBwC,SACrD1C,GADqD,OAGrD,mBAAKC,MAAON,GACV,qBACEsB,KAAK,OACLhB,MAAON,EACPgD,YAAa3C,EAAM4C,gBACnBzB,MAAOnB,EAAM6C,WACbX,SAAUlC,EAAM8C,WAGlB,sBAAQ7B,KAAK,SAAShB,MAAON,EAAcoD,QAAS/C,EAAMgD,SAA1D,Q,gCCGWC,IAvBW,CACxB,CACEC,KAAM,SAACzC,GAAD,MACa,cAAjBA,EAAI0C,UACNxD,MAAO,CACLyD,gBAAiB,2BACjB,UAAW,CACTC,OAAQ,aAId,CACEH,KAAM,SAACzC,GAAD,MAA2D,aAAjBA,EAAI0C,UACpDxD,MAAO,CACLyD,gBAAiB,2BACjBE,MAAO,QACP,UAAW,CACTD,OAAQ,mB,kCClBhB,gBAYeE,IARe,iBAEP,CACrBC,QAAS,GACTC,KAAM,GACNC,qBAAsBT,O,mCCVxB,sFAKaU,EAA4B,WACvC,IAAMC,EACJC,cAEF,OAAQD,GACN,IAAK,KACL,IAAK,KACL,IAAK,KACH,OACE,mBACG,IADH,IAEG,YAAC,IAAD,CAAMrD,GAAG,oBAAT,iBACD,YAAC,IAAD,CAAMA,GAAE,2BAAsBqD,IAA9B,eAEQ,IALV,WAUJ,QACE,OAAO,S,wxECiNEE,UA3M8D,SAC3E9D,GAEA+D,SAASC,MAAT,UAAoBhE,EAAMiE,WAAWC,OAAOC,iBAA5C,cAAkEnE,EAAMiE,WAAWC,OAAOF,OAE1F,IAAMR,EAAgE,CAAC,EAAD,KAE/DY,eAF+D,IAGlEC,UAAU,EACVC,MAAO,SAJ2D,OAO/DhE,eAP+D,IAQlEgE,MAAO,UAET,CACEjE,KACE,YAAC,IAAD,CAAME,GAAG,+BAAT,4BAEFiC,SAAU,SAAC/B,GAAD,OAA6CA,EAAI8D,gBAC3DC,SAAS,EACTH,UAAU,GAEZ,CACEhE,KAAM,YAAC,IAAD,CAAME,GAAG,+BAAT,iBACNC,KAAM,SAACC,GAAD,OACJa,YAA0Bb,EAAIgE,aAAczE,EAAMiE,WAAWS,QAC/DF,SAAS,EACTG,OAAO,GAET,CACEtE,KAAM,YAAC,IAAD,CAAME,GAAG,gCAAT,kBACNC,KAAM,SAACC,GAAD,OACJa,YAA0Bb,EAAImE,cAAe5E,EAAMiE,WAAWS,QAChEF,SAAS,EACTG,OAAO,GA9B2D,OAiC/DE,eAjC+D,IAkClEP,MAAO,UAlC2D,OAqC/D5D,eArC+D,IAsClE4D,MAAO,UAtC2D,OAyC/D/B,eAzC+D,IA0ClE+B,MAAO,WAKX,IAAwBQ,YAAkD,IAA1E,GAAOrB,EAAP,KAAasB,EAAb,KACA,IAAoCD,YAAiB,IAArD,GAAOE,EAAP,KAAmBC,EAAnB,KACA,IAAsCH,YAAiB,IAAvD,GAAOI,EAAP,KAAoBC,EAApB,KACA,IACEL,aAAkB,GADpB,GAAOM,EAAP,KAA8BC,EAA9B,KAEMC,EAAe7B,EAClB8B,QACC,SAACC,GAAD,OACEA,EAAKnF,MAAQmF,EAAKnF,KAAKoF,cAAcC,SAASV,EAAWS,kBAE5DF,QAAO,SAACC,GACP,MAAoB,KAAhBN,QACevE,IAAf6E,EAAK5E,OACF4E,EAAK5E,MAAM6E,cAAcC,SAASR,EAAYO,kBAGnDE,EAAqBC,aAAQ,WACjC,IAcMzD,EAGD,CACH,CACEG,OAAQ,YAAC,IAAD,CAAM/B,GAAG,+BAAT,iBACRY,MAAO,UAET,CACEmB,OAAQ,YAAC,IAAD,CAAM/B,GAAG,gCAAT,kBACRY,MAAO,YAIX,OACE,mBAAKlB,MAAOY,IAAWgF,gBACrB,YAAC,IAAD,CACE9D,QAAS/B,EAAMiE,WAAWS,MAAMoB,cAChC3E,MAAOnB,EAAM+F,SACb5D,YAAaA,EACbD,SAAU,SAACX,GAAD,OACRyE,YAAS,CACP/E,KAAM,qBACNgF,mBAAoB1E,EAAE2E,OAAO/E,WAInC,YAAC,IAAD,CACEyB,gBAAiB5C,EAAMiE,WAAWS,MAAMyB,oBACxCrD,SAAU,SAACvB,GAAD,OAAkB0D,EAAc1D,EAAE2E,OAAO/E,QACnD6B,QA5CkB,WAClBgC,IACFK,GAA0BD,GAC1BH,EAAc,MA0CZpC,WAAYmC,IAEd,YAAC,IAAD,CACEpC,gBAAiB5C,EAAMiE,WAAWS,MAAM0B,cACxCtD,SAAU,SAACvB,GAAD,OAAkB4D,EAAe5D,EAAE2E,OAAO/E,QACpD6B,QA3CmB,WACnBkC,IACFG,GAA0BD,GAC1BD,EAAe,MAyCbtC,WAAYqC,OAIjB,CACDF,EACAE,EACAE,EACApF,EAAM+F,SACN/F,EAAMiE,aAER,IAA8Ba,aAAS,GAAvC,GAAOuB,EAAP,KAAgBC,EAAhB,KAEMC,EAAuB,SAG3BC,EACAC,GAEA,OAAOA,EAAKC,QAAQjC,aAAa5C,KAAO2E,EAAKE,QAAQjC,aAAa5C,MAG9D8E,EAAwB,SAG5BH,EACAC,GAEA,OAAOA,EAAKC,QAAQ9B,cAAc/C,KAAO2E,EAAKE,QAAQ9B,cAAc/C,MAYhE+E,EAAU,e,EAAA,G,EAAG,kBACXC,IAA8B,CAClCC,OAAQ9G,EAAM+F,SACdgB,MAAO,QACNC,MAAK,SAACC,GACPlC,EACEkC,EAAIxD,KAAKyD,QAAQ9E,KAAI,SAACb,GAAD,OAAOA,KACzBa,KAAI,SAACb,GAAD,OAAOA,KACX4F,KAjBgB,SAACL,GACxB,OAAQA,GACN,IAAK,SACH,OAAOP,EACT,IAAK,UACH,OAAOI,GAYCS,CAAiBpH,EAAM+F,WAC5B3D,KAAI,SAACb,EAAG8F,GAAJ,OAAcC,YAAyB/F,EAAG8F,EAAQ,OAE3Df,GAAW,O,+KAXC,qDAmBhB,OAJAiB,aAAU,WACRX,MACC,IAGD,mBACE,sBACE,YAAC,IAAD,CAAMrG,GAAG,2BAAT,6BACCoD,eAEH,YAAC,IAAD,KACMJ,IADN,CAEEC,QAASA,EACTC,KAAM6B,EACN5B,qBAAsBT,IACtBuE,aAAc/H,IACdgI,aAAW,EACXC,YAAU,EACVC,2BAA4B3H,EAAMiE,WAAWS,MAAMkD,kBACnDC,kBAAmB,YAAC,IAAD,CAAMtH,GAAG,gBAAT,cACnBuH,gBAAiBzB,EACjB0B,WAAS,EACTC,mBAAoBrC,Q,iECjO5B,kCAAO,IAAM2B,EAA2B,SACtC/F,EACA0G,GAFsC,YAGA,CACtC1H,GAAIgB,EAAEhB,GACNF,KAAMkB,EAAElB,KACRD,OAAQmB,EAAEnB,OACV8H,UAAW3G,EAAEmF,QAAQnG,GACrB4H,SAAQ,UAAE5G,EAAE6G,cAAJ,aAAE,EAAU7H,GACpBgE,eAAgBhD,EAAEmF,QAAQnC,eAC1BE,aAAclD,EAAEmF,QAAQjC,aACxBG,cAAerD,EAAEmF,QAAQ9B,cACzByD,aAAc9G,EAAE8G,aAChBzH,MAAOW,EAAEX,MACT6B,YAAalB,EAAEkB,YACfU,SAAU5B,EAAE4B,SACZ8E,QAASA,K,kCCbX,kCAAO,IAAM7D,EAAgB,WAG3B,MAAO,CACL/D,KAAM,IACNmC,SAAU,SAAC/B,GAAD,OAA0BA,EAAIwH,SACxCK,MAAM,K,kCCZV,0EAUazD,EAAqB,WAGhC,MAAO,CACLxE,KAAM,YAAC,IAAD,CAAME,GAAG,sBAAT,iBACNC,KAAM,SAACC,GAAD,YACiBE,IAArBF,EAAI4H,aACF,YAAC,IAAD,CAAiBA,aAAc5H,EAAI4H,eACjC,S,gCCjBK,KAAC,UAAY,2BAA2B,eAAiB","file":"route-VTubersViewCount.chunk.b0358.js","sourcesContent":["import { TableStyles } from 'react-data-table-component';\n\nexport const CompactTableStyle: TableStyles = {\n  headCells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for head cells\n      paddingRight: '5px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for data cells\n      paddingRight: '5px',\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__vr1DG\",\"profileImageFlex\":\"profileImageFlex__4VERG\",\"nameFlex\":\"nameFlex__WFOO9\"};","import { FunctionalComponent, h } from 'preact';\nimport ProfileImage from '../ProfileImage';\nimport style from './style.module.css';\n\nexport interface ProfileImagePopupProps {\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n}\n\nconst ProfileImagePopup: FunctionalComponent<ProfileImagePopupProps> = (\n  props: ProfileImagePopupProps\n): h.JSX.Element => {\n  return (\n    <div class={style.container}>\n      <div class={style.profileImageFlex}>\n        <ProfileImage VTuberId={props.VTuberId} imgUrl={props.imgUrl} />\n      </div>\n      <span class={style.nameFlex}>{props.name}</span>\n    </div>\n  );\n};\n\nexport default ProfileImagePopup;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ProfileImagePopup from '../components/ProfileImagePopup';\n\nexport interface NameColumnRowData {\n  id: string;\n  imgUrl?: string;\n  name: string;\n}\n\nexport const NameColumn = <\n  RowData extends NameColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.displayName\">Name</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <ProfileImagePopup\n        VTuberId={row.id}\n        imgUrl={row.imgUrl}\n        name={row.name}\n      />\n    ),\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GetRoute } from '../utils/TypeSafeRouting';\nimport tableStyle from '../style/DataTableStyle.module.css';\n\nexport interface GroupColumnRowData {\n  group?: string;\n}\n\nexport const GroupColumn = <\n  RowData extends GroupColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.group\">Group</Text>,\n    cell: (row: RowData): h.JSX.Element | null =>\n      row.group !== undefined ? (\n        <a\n          class={tableStyle.groupLink}\n          href={GetRoute({ type: 'group', name: row.group })}\n        >\n          {row.group}\n        </a>\n      ) : null,\n  };\n};\n","import { GrowthRecordType } from '../types/Common/GrowthData';\n\nexport const PrependSign = (value: number): string => {\n  if (value > 0) return `+${value}`;\n  if (value < 0) return `${value}`;\n\n  return '0';\n};\n\nconst valueToPercentString = (value: number): string =>\n  (value * 100).toFixed(2);\n\nexport const GrowthDisplayDataToString = (\n  e: { diff: number; recordType: GrowthRecordType; percentage?: number },\n  tableTranslation: { noRecord: string; atLeast: string }\n): string => {\n  if (e.percentage) {\n    switch (e.recordType) {\n      case 'none':\n        return tableTranslation.noRecord;\n      case 'partial':\n        return `${tableTranslation.atLeast} ${PrependSign(\n          e.diff\n        )} (${valueToPercentString(e.percentage as number)}%)`;\n      case 'full':\n        return `${PrependSign(e.diff)} (${valueToPercentString(\n          e.percentage\n        )}%)`;\n    }\n  }\n\n  switch (e.recordType) {\n    case 'none':\n      return tableTranslation.noRecord;\n    case 'partial':\n      return `${tableTranslation.atLeast} ${PrependSign(e.diff)}`;\n    case 'full':\n      return `${PrependSign(e.diff)}`;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tipText\":\"tipText__4DHD3\"};","import { h } from 'preact';\nimport style from './style.module.css';\nimport dropDownStyle from '../../style/DropDownStyle.module.css';\n\nexport interface DropDownListProps<ValueType> {\n  tipText?: string;\n  optionValue?: Array<{ option: any; value: ValueType }>;\n  value?: ValueType;\n  onChange?: (e: unknown) => unknown;\n}\n\nfunction DropDownList<ValueType extends string | number>(\n  props: DropDownListProps<ValueType>\n): h.JSX.Element {\n  return (\n    <div>\n      <span class={style.tipText}>{props.tipText}</span>\n      <select\n        class={dropDownStyle.dropDown}\n        value={props.value}\n        onChange={props.onChange}\n      >\n        {props.optionValue !== undefined\n          ? props.optionValue.map((e) => (\n              <option key={e.value} value={e.value}>\n                {e.option}\n              </option>\n            ))\n          : null}\n      </select>\n    </div>\n  );\n}\n\nexport default DropDownList;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\n\nexport interface NationalityColumnRowData {\n  nationality?: string;\n}\n\nexport const NationalityColumn = <\n  RowData extends NationalityColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.nationality\">Nationality</Text>,\n    selector: (row: RowData): string => row.nationality ?? '',\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__1lsi6\",\"textField\":\"textField__bDpXR\",\"button\":\"button__maFzS\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface SearchBarProps {\n  placeholderText?: string;\n  filterText: string;\n  onFilter: (e: unknown) => unknown;\n  onClear: () => unknown;\n}\n\nconst SearchBar: FunctionalComponent<SearchBarProps> = (\n  props: SearchBarProps\n): h.JSX.Element => (\n  <div class={style.container}>\n    <input\n      type=\"text\"\n      class={style.textField}\n      placeholder={props.placeholderText}\n      value={props.filterText}\n      onChange={props.onFilter}\n    />\n\n    <button type=\"button\" class={style.button} onClick={props.onClear}>\n      X\n    </button>\n  </div>\n);\n\nexport default SearchBar;\n","import { Activity } from '../types/Common/Activity';\n\nconst ActivityRowStyles = [\n  {\n    when: (row: { activity: Activity }): boolean =>\n      row.activity === 'preparing',\n    style: {\n      backgroundColor: 'rgba(141, 209, 157, 0.9)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity }): boolean => row.activity === 'graduate',\n    style: {\n      backgroundColor: 'rgba(123, 123, 123, 0.9)',\n      color: 'white',\n      '&:hover': {\n        cursor: 'not-allowed',\n      },\n    },\n  },\n];\n\nexport default ActivityRowStyles;\n","import { TableProps } from 'react-data-table-component';\nimport ActivityRowStyles from '../style/ActivityRowStyles';\nimport { Activity } from '../types/Common/Activity';\n\n// columns and data are empty, user should fill them when using DefaultDataTableProps\nconst DefaultDataTableProps = <\n  T extends { activity: Activity }\n>(): TableProps<T> => ({\n  columns: [],\n  data: [],\n  conditionalRowStyles: ActivityRowStyles,\n});\n\nexport default DefaultDataTableProps;\n","import { Fragment, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { getNationalityModifierState } from '../global/DisplayNationality';\nimport { NationalityModifier } from '../types/Common/NationalityModifier';\n\nexport const GetCurrentNationalitySpan = (): JSX.Element | null => {\n  const nationalityModifier: NationalityModifier =\n    getNationalityModifierState();\n\n  switch (nationalityModifier) {\n    case 'TW':\n    case 'HK':\n    case 'MY':\n      return (\n        <>\n          {' '}\n          (<Text id=\"text.onlyShowing\">only showing </Text>\n          <Text id={`nationalityTitle.${nationalityModifier}`}>\n            placeholder\n          </Text>{' '}\n          VTuber)\n        </>\n      );\n    case 'all':\n    default:\n      return null;\n  }\n};\n","import * as Api from '../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useMemo, useEffect } from 'preact/hooks';\nimport DataTable, { TableColumn } from 'react-data-table-component';\nimport DropDownList from '../../components/DropDownList';\nimport SearchBar from '../../components/SearchBar';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport { CompactTableStyle } from '../../style/CompactTableStyle';\nimport { GroupColumn } from '../../tableTypes/GroupColumn';\nimport { NameColumn } from '../../tableTypes/NameColumn';\nimport { NationalityColumn } from '../../tableTypes/NationalityColumn';\nimport { PopularVideoColumn } from '../../tableTypes/PopularVideoColumn';\nimport { RankingColumn } from '../../tableTypes/RankingColumn';\nimport { GrowthData } from '../../types/Common/GrowthData';\nimport { YouTubeViewCountGrowthData } from '../../types/Common/YouTube/YouTubeViewCountGrowthData';\nimport { VTuberViewCountGrowthDisplayData } from '../../types/TableDisplayData/VTuberViewCountGrowthDisplayData';\nimport DefaultDataTableProps from '../../utils/DefaultDataTableProps';\nimport { GetCurrentNationalitySpan } from '../../utils/NationalityUtils';\nimport { GrowthDisplayDataToString } from '../../utils/NumberUtils';\nimport { VTuberViewCountToDisplay } from '../../utils/transform/ViewCountTransform';\nimport { GoToPage } from '../../utils/TypeSafeRouting';\nimport tableStyle from '../../style/DataTableStyle.module.css';\nimport { SortOrder } from '../../types/ApiTypes';\nimport ActivityRowStyles from '../../style/ActivityRowStyles';\n\nexport interface VTubersViewCountPageProps {\n  dictionary: Dictionary;\n  modifier: SortOrder;\n}\n\nconst VTubersViewCountPage: FunctionalComponent<VTubersViewCountPageProps> = (\n  props: VTubersViewCountPageProps\n) => {\n  document.title = `${props.dictionary.header.VTubersViewCount} | ${props.dictionary.header.title}`;\n\n  const columns: Array<TableColumn<VTuberViewCountGrowthDisplayData>> = [\n    {\n      ...RankingColumn(),\n      sortable: true,\n      width: '40px',\n    },\n    {\n      ...NameColumn(),\n      width: '200px',\n    },\n    {\n      name: (\n        <Text id=\"table.YouTubeTotalViewCount\">YouTube Total View Count</Text>\n      ),\n      selector: (row: { totalViewCount: number }): number => row.totalViewCount,\n      compact: true,\n      sortable: true,\n    },\n    {\n      name: <Text id=\"table._7DaysViewCountGrowth\">7 Days Growth</Text>,\n      cell: (row: { _7DaysGrowth: GrowthData }): string =>\n        GrowthDisplayDataToString(row._7DaysGrowth, props.dictionary.table),\n      compact: true,\n      right: true,\n    },\n    {\n      name: <Text id=\"table._30DaysViewCountGrowth\">30 Days Growth</Text>,\n      cell: (row: { _30DaysGrowth: GrowthData }): string =>\n        GrowthDisplayDataToString(row._30DaysGrowth, props.dictionary.table),\n      compact: true,\n      right: true,\n    },\n    {\n      ...PopularVideoColumn(),\n      width: '100px',\n    },\n    {\n      ...GroupColumn(),\n      width: '150px',\n    },\n    {\n      ...NationalityColumn(),\n      width: '125px',\n    },\n  ];\n\n  // search filter\n  const [data, setData] = useState<Array<VTuberViewCountGrowthDisplayData>>([]);\n  const [filterName, setFilterName] = useState<string>('');\n  const [filterGroup, setFilterGroup] = useState<string>('');\n  const [resetPaginationToggle, setResetPaginationToggle] =\n    useState<boolean>(false);\n  const filteredData = data\n    .filter(\n      (item) =>\n        item.name && item.name.toLowerCase().includes(filterName.toLowerCase())\n    )\n    .filter((item) => {\n      if (filterGroup === '') return true;\n      if (item.group === undefined) return false;\n      return item.group.toLowerCase().includes(filterGroup.toLowerCase());\n    });\n\n  const searchBarComponent = useMemo(() => {\n    const handleClearName = (): void => {\n      if (filterName) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterName('');\n      }\n    };\n\n    const handleClearGroup = (): void => {\n      if (filterGroup) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterGroup('');\n      }\n    };\n\n    const optionValue: Array<{\n      option: h.JSX.Element;\n      value: SortOrder;\n    }> = [\n      {\n        option: <Text id=\"table._7DaysViewCountGrowth\">7 Days Growth</Text>,\n        value: '7-days',\n      },\n      {\n        option: <Text id=\"table._30DaysViewCountGrowth\">30 Days Growth</Text>,\n        value: '30-days',\n      },\n    ];\n\n    return (\n      <div class={tableStyle.searchBarGroup}>\n        <DropDownList\n          tipText={props.dictionary.table.sortingMethod}\n          value={props.modifier}\n          optionValue={optionValue}\n          onChange={(e: any) =>\n            GoToPage({\n              type: 'vtubers-view-count',\n              viewCountSortOrder: e.target.value,\n            })\n          }\n        />\n        <SearchBar\n          placeholderText={props.dictionary.table.searchByDisplayName}\n          onFilter={(e: any): void => setFilterName(e.target.value)}\n          onClear={handleClearName}\n          filterText={filterName}\n        />\n        <SearchBar\n          placeholderText={props.dictionary.table.searchByGroup}\n          onFilter={(e: any): void => setFilterGroup(e.target.value)}\n          onClear={handleClearGroup}\n          filterText={filterGroup}\n        />\n      </div>\n    );\n  }, [\n    filterName,\n    filterGroup,\n    resetPaginationToggle,\n    props.modifier,\n    props.dictionary,\n  ]);\n  const [pending, setPending] = useState(true);\n\n  const _7DaysDescendingSort = <\n    T extends { YouTube: YouTubeViewCountGrowthData }\n  >(\n    rowA: T,\n    rowB: T\n  ): number => {\n    return rowB.YouTube._7DaysGrowth.diff - rowA.YouTube._7DaysGrowth.diff;\n  };\n\n  const _30DaysDescendingSort = <\n    T extends { YouTube: YouTubeViewCountGrowthData }\n  >(\n    rowA: T,\n    rowB: T\n  ): number => {\n    return rowB.YouTube._30DaysGrowth.diff - rowA.YouTube._30DaysGrowth.diff;\n  };\n\n  const GetSortingMethod = (sortBy: SortOrder) => {\n    switch (sortBy) {\n      case '7-days':\n        return _7DaysDescendingSort;\n      case '30-days':\n        return _30DaysDescendingSort;\n    }\n  };\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getVTubersViewCountChange({\n      sortBy: props.modifier,\n      count: '100',\n    }).then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .map((e) => e)\n          .sort(GetSortingMethod(props.modifier))\n          .map((e, index) => VTuberViewCountToDisplay(e, index + 1))\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h1>\n        <Text id=\"header.VTubersViewCount\">VTubers View Count Change</Text>\n        {GetCurrentNationalitySpan()}\n      </h1>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={filteredData}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        fixedHeader\n        pagination\n        paginationComponentOptions={props.dictionary.table.paginationOptions}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n        subHeader\n        subHeaderComponent={searchBarComponent}\n      />\n    </>\n  );\n};\n\nexport default VTubersViewCountPage;\n","import { VTuberViewCountGrowthData } from '../../types/ApiData/VTuberViewCountChangeData';\nimport { VTuberViewCountGrowthDisplayData } from '../../types/TableDisplayData/VTuberViewCountGrowthDisplayData';\n\nexport const VTuberViewCountToDisplay = (\n  e: VTuberViewCountGrowthData,\n  ranking: number\n): VTuberViewCountGrowthDisplayData => ({\n  id: e.id,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  YouTubeId: e.YouTube.id,\n  TwitchId: e.Twitch?.id,\n  totalViewCount: e.YouTube.totalViewCount,\n  _7DaysGrowth: e.YouTube._7DaysGrowth,\n  _30DaysGrowth: e.YouTube._30DaysGrowth,\n  popularVideo: e.popularVideo,\n  group: e.group,\n  nationality: e.nationality,\n  activity: e.activity,\n  ranking: ranking,\n});\n","import { TableColumn } from 'react-data-table-component';\n\nexport interface RankingColumnRowData {\n  ranking: number;\n}\n\nexport const RankingColumn = <\n  RowData extends RankingColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: '#',\n    selector: (row: RowData): number => row.ranking,\n    wrap: false,\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ShowVideoButton from '../components/ShowVideoButton';\nimport { VideoInfo } from '../types/Common/VideoInfo';\n\nexport interface PopularVideoColumnRowData {\n  popularVideo?: VideoInfo;\n}\n\nexport const PopularVideoColumn = <\n  RowData extends PopularVideoColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularVideo\">Popular Video</Text>,\n    cell: (row: RowData): JSX.Element | null =>\n      row.popularVideo !== undefined ? (\n        <ShowVideoButton popularVideo={row.popularVideo} />\n      ) : null,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"groupLink\":\"x4dKXRdnDI9qgFfe4BsDUQ==\",\"searchBarGroup\":\"R1T8+hwxvBovrVdGHizUFw==\"};"],"sourceRoot":""}