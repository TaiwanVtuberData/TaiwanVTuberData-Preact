{"version":3,"sources":["webpack:///./components/VideoLink/style.module.css","webpack:///./components/VideoLink/index.tsx","webpack:///./tableTypes/VideoColumn.tsx","webpack:///./components/ProfileImagePopup/style.module.css","webpack:///./components/ProfileImagePopup/index.tsx","webpack:///./tableTypes/NameColumn.tsx","webpack:///./components/DropDownList/style.module.css","webpack:///./components/DropDownList/index.tsx","webpack:///./utils/transform/PopularVideoTransform.ts","webpack:///./components/SearchBar/style.module.css","webpack:///./components/SearchBar/index.tsx","webpack:///./style/ActivityRowStyles.ts","webpack:///./utils/DefaultDataTableProps.ts","webpack:///./utils/NationalityUtils.tsx","webpack:///./tableTypes/RankingColumn.tsx","webpack:///./style/DataTableStyle.module.css","webpack:///./routes/TrendingVideos/index.tsx"],"names":["VideoLink","props","href","videoUrl","target","rel","class","style","src","thumbnailUrl","loading","VideoColumn","name","id","cell","row","ProfileImagePopup","ProfileImage","VTuberId","imgUrl","NameColumn","DropDownList","tipText","value","onChange","undefined","optionValue","map","e","key","option","PopularVideoToDisplayData","ranking","title","viewCount","uploadTime","Date","SearchBar","type","placeholder","placeholderText","filterText","onFilter","onClick","onClear","ActivityRowStyles","when","activity","backgroundColor","cursor","color","DefaultDataTableProps","columns","data","conditionalRowStyles","GetCurrentNationalitySpan","nationalityModifier","getNationalityModifierState","RankingColumn","selector","wrap","TrendingVideosPage","document","dictionary","header","trendingVideos","sortable","width","right","getFormattedDateTime","useState","setData","filterName","setFilterName","filterTitle","setFilterTitle","resetPaginationToggle","setResetPaginationToggle","filteredData","filter","item","toLowerCase","includes","searchBarComponent","useMemo","tableStyle","searchBarGroup","table","options","modifier","GoToPage","viewCountSortOrder","searchByDisplayName","searchByTitle","pending","setPending","getVideos","Api","then","res","videos","sort","a","b","index","useEffect","customStyles","maxHeight","rows","minHeight","headCells","paddingLeft","paddingRight","cells","fixedHeader","pagination","paginationComponentOptions","paginationOptions","progressComponent","progressPending","subHeader","subHeaderComponent"],"mappings":"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","file":"route-TrendingVideos.chunk.2a504.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"thumbnail\":\"thumbnail__BdvoG\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface VideoLinkProps {\n  thumbnailUrl: string;\n  videoUrl: string;\n}\n\nconst VideoLink: FunctionalComponent<VideoLinkProps> = (\n  props: VideoLinkProps\n): h.JSX.Element => {\n  return (\n    <a href={props.videoUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n      <img class={style.thumbnail} src={props.thumbnailUrl} loading=\"lazy\" />\n    </a>\n  );\n};\n\nexport default VideoLink;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport VideoLink from '../components/VideoLink';\n\nexport interface VideoColumnRowData {\n  thumbnailUrl: string;\n  videoUrl: string;\n}\n\nexport const VideoColumn = <\n  RowData extends VideoColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.video\">Video</Text>,\n    cell: (row: RowData): JSX.Element | null =>\n      VideoLink({\n        thumbnailUrl: row.thumbnailUrl,\n        videoUrl: row.videoUrl,\n      }),\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__vr1DG\",\"profileImageFlex\":\"profileImageFlex__4VERG\",\"nameFlex\":\"nameFlex__WFOO9\"};","import { FunctionalComponent, h } from 'preact';\nimport ProfileImage from '../ProfileImage';\nimport style from './style.module.css';\n\nexport interface ProfileImagePopupProps {\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n}\n\nconst ProfileImagePopup: FunctionalComponent<ProfileImagePopupProps> = (\n  props: ProfileImagePopupProps\n): h.JSX.Element => {\n  return (\n    <div class={style.container}>\n      <div class={style.profileImageFlex}>\n        <ProfileImage VTuberId={props.VTuberId} imgUrl={props.imgUrl} />\n      </div>\n      <span class={style.nameFlex}>{props.name}</span>\n    </div>\n  );\n};\n\nexport default ProfileImagePopup;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ProfileImagePopup from '../components/ProfileImagePopup';\n\nexport interface NameColumnRowData {\n  id: string;\n  imgUrl?: string;\n  name: string;\n}\n\nexport const NameColumn = <\n  RowData extends NameColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.displayName\">Name</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <ProfileImagePopup\n        VTuberId={row.id}\n        imgUrl={row.imgUrl}\n        name={row.name}\n      />\n    ),\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tipText\":\"tipText__4DHD3\",\"dropDown\":\"dropDown__6WU99\"};","import { h } from 'preact';\nimport style from './style.module.css';\n\nexport interface DropDownListProps<ValueType> {\n  tipText?: string;\n  optionValue?: Array<{ option: any; value: ValueType }>;\n  value?: ValueType;\n  onChange?: (e: unknown) => unknown;\n}\n\nfunction DropDownList<ValueType extends string | number>(\n  props: DropDownListProps<ValueType>\n): h.JSX.Element {\n  return (\n    <div>\n      <span class={style.tipText}>{props.tipText}</span>\n      <select\n        class={style.dropDown}\n        value={props.value}\n        onChange={props.onChange}\n      >\n        {props.optionValue !== undefined\n          ? props.optionValue.map((e) => (\n              <option key={e.value} value={e.value}>\n                {e.option}\n              </option>\n            ))\n          : null}\n      </select>\n    </div>\n  );\n}\n\nexport default DropDownList;\n","import { VideoPopularityData } from '../../types/ApiData/VideoPopularityData';\nimport { VideoPopularityDisplayData } from '../../types/TableDisplayData/VideoPopularityDisplayData';\n\nexport const PopularVideoToDisplayData = (\n  e: VideoPopularityData,\n  ranking: number\n): VideoPopularityDisplayData => ({\n  id: e.id,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  title: e.title,\n  thumbnailUrl: e.thumbnailUrl,\n  videoUrl: e.videoUrl,\n  viewCount: e.viewCount,\n  uploadTime: new Date(e.uploadTime),\n  ranking: ranking,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__1lsi6\",\"textField\":\"textField__bDpXR\",\"button\":\"button__maFzS\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface SearchBarProps {\n  placeholderText?: string;\n  filterText: string;\n  onFilter: (e: unknown) => unknown;\n  onClear: () => unknown;\n}\n\nconst SearchBar: FunctionalComponent<SearchBarProps> = (\n  props: SearchBarProps\n): h.JSX.Element => (\n  <div class={style.container}>\n    <input\n      type=\"text\"\n      class={style.textField}\n      placeholder={props.placeholderText}\n      value={props.filterText}\n      onChange={props.onFilter}\n    />\n\n    <button type=\"button\" class={style.button} onClick={props.onClear}>\n      X\n    </button>\n  </div>\n);\n\nexport default SearchBar;\n","import { Activity } from '../types/Common/Activity';\n\nconst ActivityRowStyles = [\n  {\n    when: (row: { activity: Activity }): boolean =>\n      row.activity === 'preparing',\n    style: {\n      backgroundColor: 'rgba(141, 209, 157, 0.9)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity }): boolean => row.activity === 'graduate',\n    style: {\n      backgroundColor: 'rgba(123, 123, 123, 0.9)',\n      color: 'white',\n      '&:hover': {\n        cursor: 'not-allowed',\n      },\n    },\n  },\n];\n\nexport default ActivityRowStyles;\n","import { TableProps } from 'react-data-table-component';\nimport ActivityRowStyles from '../style/ActivityRowStyles';\nimport { Activity } from '../types/Common/Activity';\n\n// columns and data are empty, user should fill them when using DefaultDataTableProps\nconst DefaultDataTableProps = <\n  T extends { activity: Activity }\n>(): TableProps<T> => ({\n  columns: [],\n  data: [],\n  conditionalRowStyles: ActivityRowStyles,\n});\n\nexport default DefaultDataTableProps;\n","import { Fragment, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { getNationalityModifierState } from '../global/DisplayNationality';\nimport { NationalityModifier } from '../types/Common/NationalityModifier';\n\nexport const GetCurrentNationalitySpan = (): JSX.Element | null => {\n  const nationalityModifier: NationalityModifier =\n    getNationalityModifierState();\n\n  switch (nationalityModifier) {\n    case 'TW':\n    case 'HK':\n    case 'MY':\n      return (\n        <>\n          {' '}\n          (<Text id=\"text.onlyShowing\">only showing </Text>\n          <Text id={`nationalityTitle.${nationalityModifier}`}>\n            placeholder\n          </Text>{' '}\n          VTuber)\n        </>\n      );\n    case 'all':\n    default:\n      return null;\n  }\n};\n","import { TableColumn } from 'react-data-table-component';\n\nexport interface RankingColumnRowData {\n  ranking: number;\n}\n\nexport const RankingColumn = <\n  RowData extends RankingColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: '#',\n    selector: (row: RowData): number => row.ranking,\n    wrap: false,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"groupLink\":\"x4dKXRdnDI9qgFfe4BsDUQ==\",\"searchBarGroup\":\"R1T8+hwxvBovrVdGHizUFw==\"};","import * as Api from '../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useMemo, useEffect } from 'preact/hooks';\nimport DataTable, {\n  TableColumn,\n  TableStyles,\n} from 'react-data-table-component';\nimport DropDownList from '../../components/DropDownList';\nimport SearchBar from '../../components/SearchBar';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport { NameColumn } from '../../tableTypes/NameColumn';\nimport { VideoColumn } from '../../tableTypes/VideoColumn';\nimport { TrendingVideosModifier } from '../../types/ApiTypes';\nimport { VideoPopularityDisplayData } from '../../types/TableDisplayData/VideoPopularityDisplayData';\nimport { getFormattedDateTime } from '../../utils/DateTimeUtils';\nimport DefaultDataTableProps from '../../utils/DefaultDataTableProps';\nimport { GetCurrentNationalitySpan } from '../../utils/NationalityUtils';\nimport { PopularVideoToDisplayData } from '../../utils/transform/PopularVideoTransform';\nimport { GoToPage } from '../../utils/TypeSafeRouting';\nimport tableStyle from '../../style/DataTableStyle.module.css';\nimport { RankingColumn } from '../../tableTypes/RankingColumn';\n\nexport interface TrendingVideosPageProps {\n  dictionary: Dictionary;\n  modifier: TrendingVideosModifier;\n}\n\nconst TrendingVideosPage: FunctionalComponent<TrendingVideosPageProps> = (\n  props: TrendingVideosPageProps\n) => {\n  document.title = `${props.dictionary.header.trendingVideos} | ${props.dictionary.header.title}`;\n\n  const columns: Array<TableColumn<VideoPopularityDisplayData>> = [\n    {\n      ...RankingColumn(),\n      sortable: true,\n      width: '40px',\n    },\n    {\n      ...NameColumn(),\n      width: '200px',\n    },\n    {\n      name: <Text id=\"table.title\">Title</Text>,\n      selector: (row: { title: string }): string => row.title,\n      wrap: true,\n    },\n    {\n      ...VideoColumn(),\n      width: '200px',\n    },\n    {\n      name: <Text id=\"table.viewCount\">View Count</Text>,\n      selector: (row: { viewCount: number }): number => row.viewCount,\n      right: true,\n      sortable: true,\n      width: '80px',\n    },\n    {\n      name: <Text id=\"table.uploadTime\">Upload Time</Text>,\n      selector: (row: { uploadTime: Date }): string =>\n        getFormattedDateTime(row.uploadTime),\n      sortable: true,\n      width: '175px',\n    },\n  ];\n\n  // search filter\n  const [data, setData] = useState<Array<VideoPopularityDisplayData>>([]);\n  const [filterName, setFilterName] = useState<string>('');\n  const [filterTitle, setFilterTitle] = useState<string>('');\n  const [resetPaginationToggle, setResetPaginationToggle] =\n    useState<boolean>(false);\n  const filteredData = data\n    .filter(\n      (item) =>\n        item.name && item.name.toLowerCase().includes(filterName.toLowerCase())\n    )\n    .filter((item) => {\n      if (item.title === undefined) return true;\n      return item.title.toLowerCase().includes(filterTitle.toLowerCase());\n    });\n\n  const searchBarComponent = useMemo(() => {\n    const handleClearName = (): void => {\n      if (filterName) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterName('');\n      }\n    };\n\n    const handleClearTitle = (): void => {\n      if (filterTitle) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterTitle('');\n      }\n    };\n\n    const optionValue: Array<{\n      option: h.JSX.Element;\n      value: TrendingVideosModifier;\n    }> = [\n      {\n        option: <Text id=\"table.noDuplicate\">One video per VTuber</Text>,\n        value: 'no-duplicate',\n      },\n      {\n        option: <Text id=\"table.allVideos\">All videos</Text>,\n        value: 'all',\n      },\n    ];\n\n    return (\n      <div class={tableStyle.searchBarGroup}>\n        <DropDownList\n          tipText={props.dictionary.table.options}\n          value={props.modifier}\n          optionValue={optionValue}\n          onChange={(e: any) =>\n            GoToPage({\n              type: 'trending-videos',\n              viewCountSortOrder: e.target.value,\n            })\n          }\n        />\n        <SearchBar\n          placeholderText={props.dictionary.table.searchByDisplayName}\n          onFilter={(e: any): void => setFilterName(e.target.value)}\n          onClear={handleClearName}\n          filterText={filterName}\n        />\n        <SearchBar\n          placeholderText={props.dictionary.table.searchByTitle}\n          onFilter={(e: any): void => setFilterTitle(e.target.value)}\n          onClear={handleClearTitle}\n          filterText={filterTitle}\n        />\n      </div>\n    );\n  }, [\n    filterName,\n    filterTitle,\n    resetPaginationToggle,\n    props.modifier,\n    props.dictionary,\n  ]);\n  const [pending, setPending] = useState(true);\n\n  const getVideos = async (): Promise<void> => {\n    await Api.getTrendingVideos(props.modifier).then((res) => {\n      // thanks to JavaScript sorting being mutable, I have to convert ReadonlyArray to Array first\n      setData(\n        res.data.videos\n          .map((e) => e)\n          .sort((a, b) => b.viewCount - a.viewCount)\n          .map((e, index) => PopularVideoToDisplayData(e, index + 1))\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVideos();\n  }, [props.modifier]);\n\n  const customStyles: TableStyles = {\n    table: {\n      style: {\n        maxHeight: '80vh',\n      },\n    },\n    rows: {\n      style: {\n        minHeight: '36px', // override the row height\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '5px', // override the cell padding for head cells\n        paddingRight: '5px',\n      },\n    },\n    cells: {\n      style: {\n        paddingLeft: '5px', // override the cell padding for data cells\n        paddingRight: '5px',\n      },\n    },\n  };\n\n  return (\n    <>\n      <h1>\n        <Text id=\"header.trendingVideos\">Trending Videos</Text>\n        {GetCurrentNationalitySpan()}\n      </h1>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={filteredData}\n        customStyles={customStyles}\n        fixedHeader\n        pagination\n        paginationComponentOptions={props.dictionary.table.paginationOptions}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n        subHeader\n        subHeaderComponent={searchBarComponent}\n      />\n    </>\n  );\n};\n\nexport default TrendingVideosPage;\n"],"sourceRoot":""}