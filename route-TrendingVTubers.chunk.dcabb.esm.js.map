{"version":3,"sources":["webpack:///./style/CompactTableStyle.ts","webpack:///./utils/sort/SubscriberCountSort.ts","webpack:///./tableTypes/NameColumn.tsx","webpack:///./tableTypes/GroupColumn.tsx","webpack:///./components/YouTubeTwitchCount/style.module.css","webpack:///./components/YouTubeTwitchCount/index.tsx","webpack:///./components/ProfileImagePopup/style.module.css","webpack:///./components/ProfileImagePopup/index.tsx","webpack:///./tableTypes/PopularityColumn.tsx","webpack:///./tableTypes/YouTubeTwitchCountColumn.tsx","webpack:///./tableTypes/NationalityColumn.tsx","webpack:///./utils/FilterModelHelper.ts","webpack:///./components/SearchBar/style.module.css","webpack:///./components/SearchBar/index.tsx","webpack:///./style/ActivityRowStyles.ts","webpack:///./utils/DefaultDataTableProps.ts","webpack:///./utils/NationalityUtils.tsx","webpack:///./utils/sort/PopularityCountSort.ts","webpack:///./routes/TrendingVTubers/index.tsx","webpack:///./components/FilterWindow/style.module.css","webpack:///./components/FilterWindow/index.tsx","webpack:///./utils/StringUtils.ts","webpack:///./utils/transform/PopularityTransform.ts","webpack:///./tableTypes/RankingColumn.tsx","webpack:///./components/ToolTip/style.module.css","webpack:///./components/ToolTip/index.tsx","webpack:///./utils/CountTypeUtils.ts","webpack:///./tableTypes/PopularVideoColumn.tsx","webpack:///./utils/transform/BasicTransform.ts","webpack:///./style/DataTableStyle.module.css","webpack:///./components/QuestionMarkToolTip/style.module.css","webpack:///./components/QuestionMarkToolTip/index.tsx"],"names":["CompactTableStyle","headCells","style","paddingLeft","paddingRight","cells","YouTubeSubscriberCountDescendingSort","rowA","rowB","aExist","undefined","YouTubeSubscriber","bExist","CountTypeCompare","TwitchFollowerCountDescendingSort","TwitchFollower","YouTubeSubscriberCountPlusTwitchFollowerCountAscendingSort","aCount","GetCount","bCount","YouTubeSubscriberCountPlusTwitchFollowerCountDescendingSort","SubscriberCountDescendingSort","sortMethod","NameColumn","name","id","cell","row","VTuberId","imgUrl","GroupColumn","group","href","GetRoute","type","YouTubeTwitchCount","props","YouTubeSpan","YouTubeCount","class","CountFragment","countType","TwitchSpan","TwitchCount","ProfileImagePopup","ProfileImage","clickBehavior","numberToCountType","popularity","tag","count","PopularityColumn","YouTubePopularity","TwitchPopularity","YouTubeTwitchCountColumn","NationalityColumn","selector","nationality","filterFunction","targetModel","filterModel","Object","entries","map","entry","target","filter","toLowerCase","includes","some","e","SearchBar","placeholder","placeholderText","value","filterText","onChange","onFilter","onClick","onClear","ActivityRowStyles","when","activity","backgroundColor","cursor","color","DefaultDataTableProps","columns","data","conditionalRowStyles","GetCurrentNationalitySpan","nationalityModifier","getNationalityModifierState","PopularityCountAscendingSort","PopularityCountDescendingSort","TrendingVTubersPage","document","title","dictionary","header","trendingVTubers","RankingColumn","sortable","width","sortFunction","PopularVideoColumn","setData","useState","setFilterModel","YouTubeId","TwitchId","filteredData","searchBarComponent","useMemo","fieldPlaceHolderMappings","Map","table","searchByDisplayName","searchByYouTubeId","searchByTwitchId","searchByGroup","searchByNationality","tableStyle","searchBarGroup","openSearchText","text","openSearch","closeSearchText","closeSearch","pending","setPending","useEffect","async","Api","then","res","VTubers","index","VTuberPopularityToDisplay","sort","ranking","getVTubers","fontSize","customStyles","fixedHeader","pagination","paginationComponentOptions","paginationOptions","progressComponent","progressPending","subHeader","subHeaderComponent","FilterWindow","isOpened","setIsOpened","setFilter","createSearchBar","key","keyTyped","handleOnFilterChange","nullableString","trimmed","trim","trimOrNullOnEmpty","handleOnChange","get","fields","keys","VTuberBasicToDisplay","YouTube","Twitch","wrap","ToolTip","children","a","b","popularVideo","subscriber","follower","QuestionMarkToolTip"],"mappings":"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","file":"route-TrendingVTubers.chunk.dcabb.esm.js","sourcesContent":["import { TableStyles } from 'react-data-table-component';\n\nexport const CompactTableStyle: TableStyles = {\n  headCells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for head cells\n      paddingRight: '5px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for data cells\n      paddingRight: '5px',\n    },\n  },\n};\n","import { CountType } from '../../types/Common/CountType';\nimport { CountTypeCompare, GetCount } from '../CountTypeUtils';\n\nexport type SortMethod = 'YouTube+Twitch' | 'YouTube' | 'Twitch';\n\nconst YouTubeSubscriberCountDescendingSort = <\n  T extends { YouTubeSubscriber?: CountType }\n>(\n  rowA: T,\n  rowB: T\n): number => {\n  const aExist: boolean = rowA.YouTubeSubscriber !== undefined;\n  const bExist: boolean = rowB.YouTubeSubscriber !== undefined;\n\n  if (!aExist && !bExist) return 0;\n\n  if (!bExist) return -1;\n\n  if (!aExist) return 1;\n\n  // This line does nothing but to stop TypeScript from\n  // whining about YouTubeSubscriber might be undefined\n  if (!(rowA.YouTubeSubscriber && rowB.YouTubeSubscriber)) return 0;\n\n  return CountTypeCompare(rowA.YouTubeSubscriber, rowB.YouTubeSubscriber) * -1;\n};\n\nconst TwitchFollowerCountDescendingSort = <\n  T extends { TwitchFollower?: CountType }\n>(\n  rowA: T,\n  rowB: T\n): number => {\n  const aExist: boolean = rowA.TwitchFollower !== undefined;\n  const bExist: boolean = rowB.TwitchFollower !== undefined;\n\n  if (!aExist && !bExist) return 0;\n\n  if (!bExist) return -1;\n\n  if (!aExist) return 1;\n\n  // This line does nothing but to stop TypeScript from\n  // whining about TwitchFollower might be undefined\n  if (!(rowA.TwitchFollower && rowB.TwitchFollower)) return 0;\n\n  return CountTypeCompare(rowA.TwitchFollower, rowB.TwitchFollower) * -1;\n};\n\nexport const YouTubeSubscriberCountPlusTwitchFollowerCountAscendingSort = <\n  T extends { YouTubeSubscriber?: CountType; TwitchFollower?: CountType }\n>(\n  rowA: T,\n  rowB: T\n): number => {\n  const aCount =\n    (GetCount(rowA.YouTubeSubscriber) ?? 0) +\n    (GetCount(rowA.TwitchFollower) ?? 0);\n  const bCount =\n    (GetCount(rowB.YouTubeSubscriber) ?? 0) +\n    (GetCount(rowB.TwitchFollower) ?? 0);\n\n  if (aCount > bCount) return 1;\n\n  if (bCount > aCount) return -1;\n\n  return 0;\n};\n\n// TODO: Merge the logic of descending and ascending functions\nexport const YouTubeSubscriberCountPlusTwitchFollowerCountDescendingSort = <\n  T extends { YouTubeSubscriber?: CountType; TwitchFollower?: CountType }\n>(\n  rowA: T,\n  rowB: T\n): number =>\n  YouTubeSubscriberCountPlusTwitchFollowerCountAscendingSort(rowA, rowB) * -1;\n\nexport const SubscriberCountDescendingSort = (sortMethod: SortMethod) => {\n  switch (sortMethod) {\n    case 'YouTube+Twitch':\n      return YouTubeSubscriberCountPlusTwitchFollowerCountDescendingSort;\n    case 'YouTube':\n      return YouTubeSubscriberCountDescendingSort;\n    case 'Twitch':\n      return TwitchFollowerCountDescendingSort;\n  }\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ProfileImagePopup from '../components/ProfileImagePopup';\n\nexport interface NameColumnRowData {\n  id: string;\n  imgUrl?: string;\n  name: string;\n}\n\nexport const NameColumn = <\n  RowData extends NameColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.displayName\">Name</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <ProfileImagePopup\n        VTuberId={row.id}\n        imgUrl={row.imgUrl}\n        name={row.name}\n      />\n    ),\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GetRoute } from '../utils/TypeSafeRouting';\n\nexport interface GroupColumnRowData {\n  group?: string;\n}\n\nexport const GroupColumn = <\n  RowData extends GroupColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.group\">Group</Text>,\n    cell: (row: RowData): h.JSX.Element | null =>\n      row.group !== undefined ? (\n        <a href={GetRoute({ type: 'group', name: row.group })}>{row.group}</a>\n      ) : null,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"noWrap\":\"noWrap__BzT1O\",\"YouTubeRed\":\"YouTubeRed__1JOkf\",\"TwitchPurple\":\"TwitchPurple__qQQlw\"};","import { Fragment, FunctionalComponent, h } from 'preact';\nimport { CountType } from '../../types/Common/CountType';\nimport CountFragment from '../CountFragment';\nimport style from './style.module.css';\n\nexport interface YouTubeTwitchCountProps {\n  YouTubeCount?: CountType;\n  TwitchCount?: CountType;\n}\n\nconst YouTubeTwitchCount: FunctionalComponent<YouTubeTwitchCountProps> = (\n  props: YouTubeTwitchCountProps\n): h.JSX.Element => {\n  const YouTubeSpan = (YouTubeCount: CountType): h.JSX.Element => {\n    return (\n      <span class={`${style.noWrap} ${style.YouTubeRed}`}>\n        <CountFragment countType={YouTubeCount} />\n      </span>\n    );\n  };\n\n  const TwitchSpan = (TwitchCount: CountType): h.JSX.Element => {\n    return (\n      <span class={`${style.noWrap} ${style.TwitchPurple}`}>\n        <CountFragment countType={TwitchCount} />\n      </span>\n    );\n  };\n\n  const CountSpan = (props: YouTubeTwitchCountProps): h.JSX.Element | null => {\n    if (props.YouTubeCount && props.TwitchCount) {\n      return (\n        <>\n          {YouTubeSpan(props.YouTubeCount)}\n          {/* extra white space. will be rendered as \" + \" */}\n          <span class={style.noWrap}>&nbsp;+&nbsp;</span>\n          {TwitchSpan(props.TwitchCount)}\n        </>\n      );\n    }\n\n    if (props.YouTubeCount) {\n      return <>{YouTubeSpan(props.YouTubeCount)}</>;\n    }\n\n    if (props.TwitchCount) {\n      return <>{TwitchSpan(props.TwitchCount)}</>;\n    }\n\n    return null;\n  };\n\n  return (\n    <Fragment>\n      <CountSpan {...props} />\n    </Fragment>\n  );\n};\n\nexport default YouTubeTwitchCount;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__vr1DG\",\"profileImageFlex\":\"profileImageFlex__4VERG\",\"nameFlex\":\"nameFlex__WFOO9\"};","import { FunctionalComponent, h } from 'preact';\nimport ProfileImage from '../ProfileImage';\nimport style from './style.module.css';\n\nexport interface ProfileImagePopupProps {\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n}\n\nconst ProfileImagePopup: FunctionalComponent<ProfileImagePopupProps> = (\n  props: ProfileImagePopupProps\n): h.JSX.Element => {\n  return (\n    <div class={style.container}>\n      <div class={style.profileImageFlex}>\n        <ProfileImage\n          VTuberId={props.VTuberId}\n          imgUrl={props.imgUrl}\n          clickBehavior=\"popup\"\n        />\n      </div>\n      <span class={style.nameFlex}>{props.name}</span>\n    </div>\n  );\n};\n\nexport default ProfileImagePopup;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport YouTubeTwitchCount from '../components/YouTubeTwitchCount';\nimport { CountType } from '../types/Common/CountType';\n\nconst numberToCountType = (popularity?: number): CountType | undefined => {\n  if (popularity) return { tag: 'has', count: popularity };\n  return undefined;\n};\n\nexport interface PopularityColumnRowData {\n  YouTubePopularity?: number;\n  TwitchPopularity?: number;\n}\n\nexport const PopularityColumn = <\n  RowData extends PopularityColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularity\">Popularity</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <YouTubeTwitchCount\n        YouTubeCount={numberToCountType(row.YouTubePopularity)}\n        TwitchCount={numberToCountType(row.TwitchPopularity)}\n      />\n    ),\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport YouTubeTwitchCount from '../components/YouTubeTwitchCount';\nimport { CountType } from '../types/Common/CountType';\n\nexport interface YouTubeTwitchCountColumnRowData {\n  YouTubeSubscriber?: CountType;\n  TwitchFollower?: CountType;\n}\n\nexport const YouTubeTwitchCountColumn = <\n  RowData extends YouTubeTwitchCountColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: (\n      <Text id=\"table.YouTubeTwitchCount\">\n        YouTube Subscribers + Twitch Followers\n      </Text>\n    ),\n    cell: (row: RowData): JSX.Element => (\n      <YouTubeTwitchCount\n        YouTubeCount={row.YouTubeSubscriber}\n        TwitchCount={row.TwitchFollower}\n      />\n    ),\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\n\nexport interface NationalityColumnRowData {\n  nationality?: string;\n}\n\nexport const NationalityColumn = <\n  RowData extends NationalityColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.nationality\">Nationality</Text>,\n    selector: (row: RowData): string => row.nationality ?? '',\n  };\n};\n","export function filterFunction<\n  TargetType extends object,\n  FilterModel extends object\n>(targetModel: TargetType, filterModel: FilterModel): boolean {\n  const result = Object.entries(filterModel).map((entry) => {\n    const keyTyped = entry[0] as keyof typeof targetModel;\n    const target = targetModel[keyTyped] as string | undefined | null;\n\n    const filter = entry[1] as string | null;\n\n    // if there is no filter applied\n    if (filter === null) {\n      return true;\n    }\n\n    // if target doesn't exist\n    if (target === null || target === undefined || target === '') {\n      return false;\n    }\n\n    return target.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  const someFilterNotMatch = result.some((e) => e === false);\n\n  return !someFilterNotMatch;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__1lsi6\",\"textField\":\"textField__bDpXR\",\"button\":\"button__maFzS\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface SearchBarProps {\n  placeholderText?: string;\n  filterText: string | null;\n  onFilter: (e: unknown) => unknown;\n  onClear: () => unknown;\n}\n\nconst SearchBar: FunctionalComponent<SearchBarProps> = (\n  props: SearchBarProps\n): h.JSX.Element => (\n  <div class={style.container}>\n    <input\n      type=\"text\"\n      class={style.textField}\n      placeholder={props.placeholderText}\n      value={props.filterText ?? ''}\n      onChange={props.onFilter}\n    />\n\n    <button type=\"button\" class={style.button} onClick={props.onClear}>\n      X\n    </button>\n  </div>\n);\n\nexport default SearchBar;\n","import { Activity } from '../types/Common/Activity';\n\nconst ActivityRowStyles = [\n  {\n    when: (row: { activity: Activity }): boolean =>\n      row.activity === 'preparing',\n    style: {\n      backgroundColor: 'rgba(141, 209, 157, 0.9)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity }): boolean => row.activity === 'graduate',\n    style: {\n      backgroundColor: 'rgba(123, 123, 123, 0.9)',\n      color: 'white',\n      '&:hover': {\n        cursor: 'not-allowed',\n      },\n    },\n  },\n];\n\nexport default ActivityRowStyles;\n","import { TableProps } from 'react-data-table-component';\nimport ActivityRowStyles from '../style/ActivityRowStyles';\nimport { Activity } from '../types/Common/Activity';\n\n// columns and data are empty, user should fill them when using DefaultDataTableProps\nconst DefaultDataTableProps = <\n  T extends { activity: Activity }\n>(): TableProps<T> => ({\n  columns: [],\n  data: [],\n  conditionalRowStyles: ActivityRowStyles,\n});\n\nexport default DefaultDataTableProps;\n","import { Fragment, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { getNationalityModifierState } from '../global/DisplayNationality';\nimport { NationalityModifier } from '../types/Common/NationalityModifier';\n\nexport const GetCurrentNationalitySpan = (): JSX.Element | null => {\n  const nationalityModifier: NationalityModifier =\n    getNationalityModifierState();\n\n  switch (nationalityModifier) {\n    case 'TW':\n    case 'HK':\n    case 'MY':\n      return (\n        <>\n          {' '}\n          (<Text id=\"text.onlyShowing\">only showing </Text>\n          <Text id={`nationalityTitle.${nationalityModifier}`}>\n            placeholder\n          </Text>{' '}\n          VTuber)\n        </>\n      );\n    case 'all':\n    default:\n      return null;\n  }\n};\n","export const PopularityCountAscendingSort = <\n  T extends { YouTubePopularity?: number; TwitchPopularity?: number }\n>(\n  rowA: T,\n  rowB: T\n): number => {\n  const aCount = (rowA.YouTubePopularity ?? 0) + (rowA.TwitchPopularity ?? 0);\n  const bCount = (rowB.YouTubePopularity ?? 0) + (rowB.TwitchPopularity ?? 0);\n\n  if (aCount > bCount) return 1;\n\n  if (bCount > aCount) return -1;\n\n  return 0;\n};\n\nexport const PopularityCountDescendingSort = <\n  T extends { YouTubePopularity?: number; TwitchPopularity?: number }\n>(\n  rowA: T,\n  rowB: T\n): number => PopularityCountAscendingSort(rowA, rowB) * -1;\n","import * as Api from '../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useMemo, useEffect } from 'preact/hooks';\nimport DataTable, { TableColumn } from 'react-data-table-component';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport { CompactTableStyle } from '../../style/CompactTableStyle';\nimport { GroupColumn } from '../../tableTypes/GroupColumn';\nimport { NameColumn } from '../../tableTypes/NameColumn';\nimport { NationalityColumn } from '../../tableTypes/NationalityColumn';\nimport { PopularityColumn } from '../../tableTypes/PopularityColumn';\nimport { PopularVideoColumn } from '../../tableTypes/PopularVideoColumn';\nimport { YouTubeTwitchCountColumn } from '../../tableTypes/YouTubeTwitchCountColumn';\nimport { VTuberPopularityDisplayData } from '../../types/TableDisplayData/VTuberPopularityDisplayData';\nimport DefaultDataTableProps from '../../utils/DefaultDataTableProps';\nimport { GetCurrentNationalitySpan } from '../../utils/NationalityUtils';\nimport {\n  PopularityCountAscendingSort,\n  PopularityCountDescendingSort,\n} from '../../utils/sort/PopularityCountSort';\nimport { YouTubeSubscriberCountPlusTwitchFollowerCountAscendingSort } from '../../utils/sort/SubscriberCountSort';\nimport { VTuberPopularityToDisplay } from '../../utils/transform/PopularityTransform';\nimport QuestionMarkToolTip from '../../components/QuestionMarkToolTip';\nimport tableStyle from '../../style/DataTableStyle.module.css';\nimport { RankingColumn } from '../../tableTypes/RankingColumn';\nimport ActivityRowStyles from '../../style/ActivityRowStyles';\nimport FilterWindow from '../../components/FilterWindow';\nimport { filterFunction } from '../../utils/FilterModelHelper';\nimport { VTuberPopularityDisplayDataFilterModel } from '../../types/FilterType/VTuberPopularityDisplayDataFilterModel';\n\nexport interface TrendingVTubersPageProps {\n  dictionary: Dictionary;\n}\n\nconst TrendingVTubersPage: FunctionalComponent<TrendingVTubersPageProps> = (\n  props: TrendingVTubersPageProps\n) => {\n  document.title = `${props.dictionary.header.trendingVTubers} | ${props.dictionary.header.title}`;\n\n  const columns: Array<TableColumn<VTuberPopularityDisplayData>> = [\n    {\n      ...RankingColumn(),\n      sortable: true,\n      width: '40px',\n    },\n    NameColumn(),\n    {\n      ...PopularityColumn(),\n      sortFunction: PopularityCountAscendingSort,\n      sortable: true,\n    },\n    {\n      ...YouTubeTwitchCountColumn(),\n      sortFunction: YouTubeSubscriberCountPlusTwitchFollowerCountAscendingSort,\n      sortable: true,\n    },\n    PopularVideoColumn(),\n    GroupColumn(),\n    NationalityColumn(),\n  ];\n\n  // search filter\n  const [data, setData] = useState<Array<VTuberPopularityDisplayData>>([]);\n  const [filterModel, setFilterModel] =\n    useState<VTuberPopularityDisplayDataFilterModel>({\n      name: null,\n      YouTubeId: null,\n      TwitchId: null,\n      group: null,\n      nationality: null,\n    });\n  const filteredData = data.filter((e) => filterFunction(e, filterModel));\n\n  const searchBarComponent = useMemo(() => {\n    const handleFilterWindow = (\n      filterModel: VTuberPopularityDisplayDataFilterModel\n    ): void => {\n      setFilterModel(filterModel);\n    };\n\n    const fieldPlaceHolderMappings: Map<string, string> = new Map<\n      string,\n      string\n    >([\n      ['name', props.dictionary.table.searchByDisplayName],\n      ['YouTubeId', props.dictionary.table.searchByYouTubeId],\n      ['TwitchId', props.dictionary.table.searchByTwitchId],\n      ['group', props.dictionary.table.searchByGroup],\n      ['nationality', props.dictionary.table.searchByNationality],\n    ]);\n\n    return (\n      <div class={tableStyle.searchBarGroup}>\n        <FilterWindow\n          filterModel={filterModel}\n          fieldPlaceHolderMappings={fieldPlaceHolderMappings}\n          openSearchText={props.dictionary.text.openSearch}\n          closeSearchText={props.dictionary.text.closeSearch}\n          onChange={handleFilterWindow}\n        />\n      </div>\n    );\n  }, [filterModel, props.dictionary]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getTrendingVTubers('100').then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .map((e, index) => VTuberPopularityToDisplay(e, index + 1))\n          .sort(PopularityCountDescendingSort)\n          .map((e, index) => ({ ...e, ranking: index + 1 }))\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h1>\n        <Text id=\"header.trendingVTubers\">Trending VTubers</Text>\n        {GetCurrentNationalitySpan()}\n        <QuestionMarkToolTip\n          width=\"300px\"\n          fontSize=\"13px\"\n          text={<Text id=\"toolTip.trendingVTubers\">tooltip text</Text>}\n        />\n      </h1>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={filteredData}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        fixedHeader\n        pagination\n        paginationComponentOptions={props.dictionary.table.paginationOptions}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n        subHeader\n        subHeaderComponent={searchBarComponent}\n      />\n    </>\n  );\n};\n\nexport default TrendingVTubersPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"floating\":\"floating__uhu4Y\",\"floatingHidden\":\"floatingHidden__mvSUQ\",\"floatingShowing\":\"floatingShowing__nwzm5\"};","import { h } from 'preact';\nimport { useState } from 'preact/hooks';\nimport { trimOrNullOnEmpty } from '../../utils/StringUtils';\nimport SearchBar from '../SearchBar';\nimport style from './style.module.css';\n\nexport interface FilterWindowProps<FilterModel extends object> {\n  filterModel: FilterModel;\n  fieldPlaceHolderMappings: Map<string, string>;\n  openSearchText: string;\n  closeSearchText: string;\n  onChange?: (e: FilterModel) => void;\n}\n\nfunction FilterWindow<FilterModel extends object>(\n  props: FilterWindowProps<FilterModel>\n): JSX.Element {\n  const [isOpened, setIsOpened] = useState<boolean>(false);\n  const [filter, setFilter] = useState<FilterModel>(props.filterModel);\n\n  function handleOnChange(e: FilterModel): void {\n    if (props.onChange != null) {\n      props.onChange(e);\n    }\n  }\n\n  const createSearchBar = (key: string): JSX.Element => {\n    {\n      const keyTyped = key as keyof typeof filter;\n\n      const handleOnFilterChange = (e: string | null): void => {\n        const nullableString: string | null = trimOrNullOnEmpty(e);\n\n        setFilter({ ...filter, [keyTyped]: nullableString });\n        handleOnChange({ ...filter, [keyTyped]: nullableString });\n      };\n\n      return (\n        <SearchBar\n          key={key}\n          placeholderText={props.fieldPlaceHolderMappings.get(\n            keyTyped as string\n          )}\n          filterText={filter[keyTyped] as string | null}\n          onFilter={(e: any): void => handleOnFilterChange(e.target.value)}\n          onClear={(): void => handleOnFilterChange(null)}\n        />\n      );\n    }\n  };\n\n  const fields: Array<JSX.Element> = Object.keys(props.filterModel).map((key) =>\n    createSearchBar(key)\n  );\n\n  const ToggleButton = (): JSX.Element => (\n    <input\n      type=\"button\"\n      value={isOpened === true ? props.closeSearchText : props.openSearchText}\n      onClick={(): void => setIsOpened(!isOpened)}\n    />\n  );\n\n  const toggleFloatingClass = (): string => {\n    if (isOpened) return `${style.floating} ${style.floatingShowing}`;\n    else return `${style.floating} ${style.floatingHidden}`;\n  };\n\n  return (\n    <div>\n      <ToggleButton />\n      {isOpened === true ? (\n        <div class={toggleFloatingClass()}>{fields}</div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default FilterWindow;\n","export function trimOrNullOnEmpty(\n  value: string | null | undefined\n): string | null {\n  if (value === null || value === undefined) return null;\n\n  const trimmed = value.trim();\n\n  if (trimmed === '') return null;\n\n  return trimmed;\n}\n","import { VTuberPopularityData } from '../../types/ApiData/VTuberPopularityData';\nimport { VTuberPopularityDisplayData } from '../../types/TableDisplayData/VTuberPopularityDisplayData';\nimport { VTuberBasicToDisplay } from './BasicTransform';\n\nexport const VTuberPopularityToDisplay = (\n  e: VTuberPopularityData,\n  ranking: number\n): VTuberPopularityDisplayData => ({\n  ...VTuberBasicToDisplay(e),\n  YouTubePopularity: e.YouTube?.popularity,\n  TwitchPopularity: e.Twitch?.popularity,\n  ranking: ranking,\n});\n","import { TableColumn } from 'react-data-table-component';\n\nexport interface RankingColumnRowData {\n  ranking: number;\n}\n\nexport const RankingColumn = <\n  RowData extends RankingColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: '#',\n    selector: (row: RowData): number => row.ranking,\n    wrap: false,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"tooltip__vtGmz\",\"tooltipText\":\"tooltipText__pA-zc\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface ToolTipProps {\n  text: string | React.ReactNode;\n  children: React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst ToolTip: FunctionalComponent<ToolTipProps> = (\n  props: ToolTipProps\n): h.JSX.Element => {\n  return (\n    <div class={style.tooltip}>\n      {props.children}\n      <span\n        class={style.tooltipText}\n        style={{ width: props.width, fontSize: props.fontSize }}\n      >\n        {props.text}\n      </span>\n    </div>\n  );\n};\n\nexport default ToolTip;\n","/* eslint-disable no-fallthrough */\nimport { CountType } from '../types/Common/CountType';\n\nexport const GetCount = (countType?: CountType): number | null => {\n  if (countType === undefined) return null;\n\n  switch (countType.tag) {\n    case 'has':\n      return countType.count;\n    case 'hidden':\n    case 'no':\n      return null;\n  }\n};\n\n// Sort order: no < hidden < 100 < 300\nexport const CountTypeCompare = (a: CountType, b: CountType): number => {\n  switch (a.tag) {\n    case 'has':\n      {\n        switch (b.tag) {\n          case 'has':\n            return a.count - b.count;\n          case 'hidden':\n            return 1;\n          case 'no':\n            return 1;\n        }\n      }\n\n    case 'hidden':\n      {\n        switch (b.tag) {\n          case 'has':\n            return -1;\n          case 'hidden':\n            return 0;\n          case 'no':\n            return 1;\n        }\n      }\n\n    case 'no':\n      {\n        switch (b.tag) {\n          case 'has':\n            return -1;\n          case 'hidden':\n            return -1;\n          case 'no':\n            return 0;\n        }\n      }\n  }\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ShowVideoButton from '../components/ShowVideoButton';\nimport { VideoInfo } from '../types/Common/VideoInfo';\n\nexport interface PopularVideoColumnRowData {\n  popularVideo?: VideoInfo;\n}\n\nexport const PopularVideoColumn = <\n  RowData extends PopularVideoColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularVideo\">Popular Video</Text>,\n    cell: (row: RowData): JSX.Element | null =>\n      row.popularVideo !== undefined ? (\n        <ShowVideoButton popularVideo={row.popularVideo} />\n      ) : null,\n  };\n};\n","import { VTuberData } from '../../types/ApiData/VTuberData';\nimport { VTuberDisplayData } from '../../types/TableDisplayData/VTuberDisplayData';\n\nexport const VTuberBasicToDisplay = (e: VTuberData): VTuberDisplayData => ({\n  id: e.id,\n  activity: e.activity,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  YouTubeId: e.YouTube?.id,\n  YouTubeSubscriber: e.YouTube?.subscriber,\n  TwitchId: e.Twitch?.id,\n  TwitchFollower: e.Twitch?.follower,\n  popularVideo: e.popularVideo,\n  group: e.group,\n  nationality: e.nationality,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"searchBarGroup\":\"R1T8+hwxvBovrVdGHizUFw==\"};","// extracted by mini-css-extract-plugin\nexport default {\"questionMark\":\"questionMark__RT3wD\"};","import { FunctionalComponent, h } from 'preact';\nimport ToolTip from '../ToolTip';\nimport style from './style.module.css';\n\nexport interface QuestionMarkToolTip {\n  text: string | React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst QuestionMarkToolTip: FunctionalComponent<QuestionMarkToolTip> = (\n  props: QuestionMarkToolTip\n): h.JSX.Element => {\n  return (\n    <ToolTip text={props.text} width={props.width} fontSize={props.fontSize}>\n      <img class={style.questionMark} />\n    </ToolTip>\n  );\n};\n\nexport default QuestionMarkToolTip;\n"],"sourceRoot":""}