{"version":3,"sources":["webpack:///./utils/transform/GrowthTransform.ts","webpack:///./style/CompactTableStyle.ts","webpack:///./tableTypes/NameColumn.tsx","webpack:///./components/LandingTables/GrowingVTubers/index.tsx","webpack:///./tableTypes/_7DaysGrowthColumn.tsx","webpack:///./components/YouTubeTwitchCount/style.module.css","webpack:///./components/YouTubeTwitchCount/index.tsx","webpack:///./components/LandingTables/Livestreams/index.tsx","webpack:///./components/ProfileImagePopup/style.module.css","webpack:///./components/ProfileImagePopup/index.tsx","webpack:///./utils/NumberUtils.ts","webpack:///./routes/home/style.module.css","webpack:///./routes/home/index.tsx","webpack:///./tableTypes/PopularityColumn.tsx","webpack:///./tableTypes/YouTubeTwitchCountColumn.tsx","webpack:///./style/ActivityRowStyles.ts","webpack:///./components/LivestreamComponent/style.module.css","webpack:///./components/LivestreamComponent/index.tsx","webpack:///./components/HorizontalLivestreamsBox/style.module.css","webpack:///./components/HorizontalLivestreamsBox/index.tsx","webpack:///./utils/DefaultDataTableProps.ts","webpack:///./utils/NationalityUtils.tsx","webpack:///./components/LandingTables/TrendingVTubers/index.tsx","webpack:///./utils/sort/PopularityCountSort.ts","webpack:///./style/IsTodayRowStyles.ts","webpack:///./tableTypes/YouTubeSubscriberColumn.tsx","webpack:///./tableTypes/DebutDateColumn.tsx","webpack:///./utils/transform/PopularityTransform.ts","webpack:///./components/LandingTables/DebutVTubers/index.tsx","webpack:///./tableTypes/RankingColumn.tsx","webpack:///./utils/transform/DebutTransform.ts","webpack:///./components/ToolTip/style.module.css","webpack:///./components/ToolTip/index.tsx","webpack:///./tableTypes/PopularVideoColumn.tsx","webpack:///./utils/transform/BasicTransform.ts","webpack:///./components/LandingTables/TopVTubers/index.tsx","webpack:///./utils/transform/LivestreamTransform.ts","webpack:///./components/VideoLink/style.module.css","webpack:///./components/VideoLink/index.tsx","webpack:///./components/QuestionMarkToolTip/style.module.css","webpack:///./components/QuestionMarkToolTip/index.tsx"],"names":["growthDataToDisplayData","e","subCount","percentage","undefined","diff","VTuberGrowthToDisplay","VTuberBasicToDisplay","YouTubeSubscriber","YouTube","subscriber","_7DaysGrowth","count","_30DaysGrowth","CompactTableStyle","headCells","style","paddingLeft","paddingRight","cells","NameColumn","name","id","cell","row","VTuberId","imgUrl","GrowingVTubersTable","props","columns","YouTubeSubscriberColumn","_7DaysGrowthColumn","dictionary","table","PopularVideoColumn","useState","data","setData","pending","setPending","getVTubers","Api","then","res","VTubers","map","sort","a","b","useEffect","width","fontSize","text","DefaultDataTableProps","conditionalRowStyles","ActivityRowStyles","customStyles","progressComponent","progressPending","tableTranslation","GrowthDisplayDataToString","YouTubeTwitchCount","YouTubeSpan","YouTubeCount","class","CountFragment","countType","TwitchSpan","TwitchCount","LivestreamsTable","getLivestreams","arrayData","livestreams","index","LivestreamToDisplayData","startTime","getTime","setTimeout","closestToNow","findClosestSortedDateIndex","Date","document","getElementById","Math","min","length","scrollIntoView","behavior","block","inline","textAlign","ProfileImagePopup","ProfileImage","PrependSign","value","valueToPercentString","toFixed","recordType","noRecord","atLeast","HomePage","window","title","header","GetCurrentNationalitySpan","Livestreams","TrendingVTubers","DebutVTubers","GrowingVTubers","TopVTubers","numberToCountType","popularity","tag","PopularityColumn","YouTubePopularity","TwitchPopularity","YouTubeTwitchCountColumn","TwitchFollower","when","activity","backgroundColor","cursor","color","LivestreamComponent","VideoLink","thumbnailUrl","videoUrl","getFormattedDateTime","HorizontalLivestreamsBox","key","nationalityModifier","getNationalityModifierState","TrendingVTubersTable","RankingColumn","VTuberPopularityToDisplay","PopularityCountDescendingSort","ranking","PopularityCountAscendingSort","rowA","rowB","aCount","bCount","IsTodayRowStyle","isToday","selector","DebutDateColumn","debutDate","Twitch","DebutVTubersTable","todayDate","getISODateString","localeCompare","VTuberDebutToDisplay","concat","wrap","ToolTip","children","popularVideo","YouTubeId","TwitchId","follower","group","nationality","TopVTubersTable","href","target","rel","src","loading","QuestionMarkToolTip"],"mappings":"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","file":"route-home.chunk.b24d5.js","sourcesContent":["import { VTuberGrowthData } from '../../types/ApiData/VTuberGrowthData';\nimport { GrowthData } from '../../types/Common/GrowthData';\nimport {\n  GrowthDisplayData,\n  VTuberGrowthDisplayData,\n} from '../../types/TableDisplayData/VTuberGrowthDisplayData';\nimport { VTuberBasicToDisplay } from './BasicTransform';\n\nconst growthDataToDisplayData = (\n  e: GrowthData,\n  subCount?: number\n): GrowthDisplayData => ({\n  ...e,\n  percentage: subCount !== undefined && subCount !== 0 ? e.diff / subCount : 0,\n});\n\nexport const VTuberGrowthToDisplay = (\n  e: VTuberGrowthData\n): VTuberGrowthDisplayData => ({\n  ...VTuberBasicToDisplay(e),\n  YouTubeSubscriber: e.YouTube.subscriber,\n  _7DaysGrowth: growthDataToDisplayData(\n    e.YouTube._7DaysGrowth,\n    e.YouTube.subscriber.count\n  ),\n  _30DaysGrowth: growthDataToDisplayData(\n    e.YouTube._30DaysGrowth,\n    e.YouTube.subscriber.count\n  ),\n});\n","import { TableStyles } from 'react-data-table-component';\n\nexport const CompactTableStyle: TableStyles = {\n  headCells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for head cells\n      paddingRight: '5px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '5px', // override the cell padding for data cells\n      paddingRight: '5px',\n    },\n  },\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ProfileImagePopup from '../components/ProfileImagePopup';\n\nexport interface NameColumnRowData {\n  id: string;\n  imgUrl?: string;\n  name: string;\n}\n\nexport const NameColumn = <\n  RowData extends NameColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.displayName\">Name</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <ProfileImagePopup\n        VTuberId={row.id}\n        imgUrl={row.imgUrl}\n        name={row.name}\n      />\n    ),\n  };\n};\n","import * as Api from '../../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useEffect } from 'preact/hooks';\nimport DataTable, { TableColumn } from 'react-data-table-component';\nimport { Dictionary } from '../../../i18n/Dictionary';\nimport ActivityRowStyles from '../../../style/ActivityRowStyles';\nimport { CompactTableStyle } from '../../../style/CompactTableStyle';\nimport { NameColumn } from '../../../tableTypes/NameColumn';\nimport { PopularVideoColumn } from '../../../tableTypes/PopularVideoColumn';\nimport { YouTubeSubscriberColumn } from '../../../tableTypes/YouTubeSubscriberColumn';\nimport { _7DaysGrowthColumn } from '../../../tableTypes/_7DaysGrowthColumn';\nimport { VTuberGrowthDisplayData } from '../../../types/TableDisplayData/VTuberGrowthDisplayData';\nimport DefaultDataTableProps from '../../../utils/DefaultDataTableProps';\nimport { VTuberGrowthToDisplay } from '../../../utils/transform/GrowthTransform';\nimport QuestionMarkToolTip from '../../QuestionMarkToolTip';\n\nexport interface GrowingVTubersTableProps {\n  dictionary: Dictionary;\n}\n\nconst GrowingVTubersTable: FunctionalComponent<GrowingVTubersTableProps> = (\n  props: GrowingVTubersTableProps\n) => {\n  const columns: Array<TableColumn<VTuberGrowthDisplayData>> = [\n    NameColumn(),\n    YouTubeSubscriberColumn(),\n    _7DaysGrowthColumn(props.dictionary.table),\n    PopularVideoColumn(),\n  ];\n\n  const [data, setData] = useState<Array<VTuberGrowthDisplayData>>([]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getGrowingVTubers('10').then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .map((e) => VTuberGrowthToDisplay(e))\n          .sort((a, b) => b._7DaysGrowth.percentage - a._7DaysGrowth.percentage)\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h3>\n        <Text id=\"header.growingVTubers\">Growing VTubers</Text>\n        <> </>\n        <Text id=\"header.top10\">Top 10</Text>\n        <QuestionMarkToolTip\n          width=\"300px\"\n          fontSize=\"13px\"\n          text={<Text id=\"toolTip.growingVTubers\">tooltip text</Text>}\n        />\n      </h3>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={data}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n      />\n    </>\n  );\n};\n\nexport default GrowingVTubersTable;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { GrowthDisplayData } from '../types/TableDisplayData/VTuberGrowthDisplayData';\nimport { GrowthDisplayDataToString } from '../utils/NumberUtils';\n\nexport interface Days7GrowthColumnRowData {\n  _7DaysGrowth: GrowthDisplayData;\n}\n\nexport const _7DaysGrowthColumn = <\n  RowData extends Days7GrowthColumnRowData\n>(tableTranslation: {\n  noRecord: string;\n  atLeast: string;\n}): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table._7DaysGrowth\">7 Days Growth (Percent)</Text>,\n    cell: (row: RowData): string =>\n      GrowthDisplayDataToString(row._7DaysGrowth, tableTranslation),\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"noWrap\":\"noWrap__BzT1O\",\"YouTubeRed\":\"YouTubeRed__1JOkf\",\"TwitchPurple\":\"TwitchPurple__qQQlw\"};","import { Fragment, FunctionalComponent, h } from 'preact';\nimport { CountType } from '../../types/Common/CountType';\nimport CountFragment from '../CountFragment';\nimport style from './style.module.css';\n\nexport interface YouTubeTwitchCountProps {\n  YouTubeCount?: CountType;\n  TwitchCount?: CountType;\n}\n\nconst YouTubeTwitchCount: FunctionalComponent<YouTubeTwitchCountProps> = (\n  props: YouTubeTwitchCountProps\n): h.JSX.Element => {\n  const YouTubeSpan = (YouTubeCount: CountType): h.JSX.Element => {\n    return (\n      <span class={`${style.noWrap} ${style.YouTubeRed}`}>\n        <CountFragment countType={YouTubeCount} />\n      </span>\n    );\n  };\n\n  const TwitchSpan = (TwitchCount: CountType): h.JSX.Element => {\n    return (\n      <span class={`${style.noWrap} ${style.TwitchPurple}`}>\n        <CountFragment countType={TwitchCount} />\n      </span>\n    );\n  };\n\n  const CountSpan = (props: YouTubeTwitchCountProps): h.JSX.Element | null => {\n    if (props.YouTubeCount && props.TwitchCount) {\n      return (\n        <>\n          {YouTubeSpan(props.YouTubeCount)}\n          {/* extra white space. will be rendered as \" + \" */}\n          <span class={style.noWrap}>&nbsp;+&nbsp;</span>\n          {TwitchSpan(props.TwitchCount)}\n        </>\n      );\n    }\n\n    if (props.YouTubeCount) {\n      return <>{YouTubeSpan(props.YouTubeCount)}</>;\n    }\n\n    if (props.TwitchCount) {\n      return <>{TwitchSpan(props.TwitchCount)}</>;\n    }\n\n    return null;\n  };\n\n  return (\n    <Fragment>\n      <CountSpan {...props} />\n    </Fragment>\n  );\n};\n\nexport default YouTubeTwitchCount;\n","import * as Api from '../../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useEffect } from 'preact/hooks';\nimport { LivestreamDisplayData } from '../../../types/TableDisplayData/LivestreamDisplayData';\nimport { findClosestSortedDateIndex } from '../../../utils/DateTimeUtils';\nimport { LivestreamToDisplayData } from '../../../utils/transform/LivestreamTransform';\nimport HorizontalLivestreamsBox from '../../HorizontalLivestreamsBox';\n\nconst LivestreamsTable: FunctionalComponent = () => {\n  // search filter\n  const [data, setData] = useState<Array<LivestreamDisplayData>>([]);\n  useState<boolean>(false);\n\n  const [pending, setPending] = useState(true);\n\n  const getLivestreams = async (): Promise<void> => {\n    await Api.getLivestreams('all-no-title').then((res) => {\n      const arrayData: Array<LivestreamDisplayData> = res.data.livestreams\n        .map((e) => e)\n        .map((e, index) => LivestreamToDisplayData(e, index))\n        // what a great Date API, thanks javascript\n        .sort((a, b) => a.startTime.getTime() - b.startTime.getTime());\n      // thanks to JavaScript sorting being mutable, I have to convert ReadonlyArray to Array first\n      setData(arrayData);\n      setPending(false);\n\n      // TODO: this is a hack to find the closest livestream\n      setTimeout(() => {\n        // Note: document.getElementById('comp-{index}') only work because array data id is set to their index\n        const closestToNow = findClosestSortedDateIndex(arrayData, new Date());\n\n        document\n          .getElementById(\n            `comp-${Math.min(arrayData.length - 1, closestToNow)}`\n          )\n          ?.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n            inline: 'start',\n          });\n      }, 500);\n    });\n  };\n\n  useEffect(() => {\n    getLivestreams();\n  }, []);\n\n  return (\n    <>\n      <h3>\n        <Text id=\"header.livestreaming\">Streaming Now</Text>\n      </h3>\n      {pending ? (\n        <div style={{ textAlign: 'center' }}>\n          <span>\n            <Text id=\"text.loading\">Loading...</Text>\n          </span>\n        </div>\n      ) : (\n        <HorizontalLivestreamsBox data={data} />\n      )}\n    </>\n  );\n};\n\nexport default LivestreamsTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__vr1DG\",\"profileImageFlex\":\"profileImageFlex__4VERG\",\"nameFlex\":\"nameFlex__WFOO9\"};","import { FunctionalComponent, h } from 'preact';\nimport ProfileImage from '../ProfileImage';\nimport style from './style.module.css';\n\nexport interface ProfileImagePopupProps {\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n}\n\nconst ProfileImagePopup: FunctionalComponent<ProfileImagePopupProps> = (\n  props: ProfileImagePopupProps\n): h.JSX.Element => {\n  return (\n    <div class={style.container}>\n      <div class={style.profileImageFlex}>\n        <ProfileImage VTuberId={props.VTuberId} imgUrl={props.imgUrl} />\n      </div>\n      <span class={style.nameFlex}>{props.name}</span>\n    </div>\n  );\n};\n\nexport default ProfileImagePopup;\n","import { GrowthRecordType } from '../types/Common/GrowthData';\n\nexport const PrependSign = (value: number): string => {\n  if (value > 0) return `+${value}`;\n  if (value < 0) return `${value}`;\n\n  return '0';\n};\n\nconst valueToPercentString = (value: number): string =>\n  (value * 100).toFixed(2);\n\nexport const GrowthDisplayDataToString = (\n  e: { diff: number; recordType: GrowthRecordType; percentage?: number },\n  tableTranslation: { noRecord: string; atLeast: string }\n): string => {\n  if (e.percentage) {\n    switch (e.recordType) {\n      case 'none':\n        return tableTranslation.noRecord;\n      case 'partial':\n        return `${tableTranslation.atLeast} ${PrependSign(\n          e.diff\n        )} (${valueToPercentString(e.percentage as number)}%)`;\n      case 'full':\n        return `${PrependSign(e.diff)} (${valueToPercentString(\n          e.percentage\n        )}%)`;\n    }\n  }\n\n  switch (e.recordType) {\n    case 'none':\n      return tableTranslation.noRecord;\n    case 'partial':\n      return `${tableTranslation.atLeast} ${PrependSign(e.diff)}`;\n    case 'full':\n      return `${PrependSign(e.diff)}`;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tableGrid\":\"tableGrid__Ju0u9\",\"tableItem\":\"tableItem__iikA+\",\"streamingNow\":\"streamingNow__nNpu6\"};","import { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport DebutVTubersTable from '../../components/LandingTables/DebutVTubers';\nimport GrowingVTubersTable from '../../components/LandingTables/GrowingVTubers';\nimport LivestreamsTable from '../../components/LandingTables/Livestreams';\nimport TopVTubersTable from '../../components/LandingTables/TopVTubers';\nimport TrendingVTubersTable from '../../components/LandingTables/TrendingVTubers';\nimport { Dictionary } from '../../i18n/Dictionary';\nimport '../../style/index.css';\nimport { GetCurrentNationalitySpan } from '../../utils/NationalityUtils';\nimport style from './style.module.css';\n\nexport interface HomePageProps {\n  dictionary: Dictionary;\n}\n\nconst HomePage: FunctionalComponent<HomePageProps> = (props: HomePageProps) => {\n  if (typeof window !== 'undefined') {\n    document.title = `${props.dictionary.header.title}`;\n  }\n\n  return (\n    <Fragment>\n      <h1>\n        <Text id=\"header.title\">Taiwan VTuber Data</Text>\n        {GetCurrentNationalitySpan()}\n      </h1>\n      <div class={style.streamingNow}>\n        <LivestreamsTable />\n      </div>\n      <div class={style.tableGrid}>\n        <div class={style.tableItem}>\n          <TrendingVTubersTable />\n        </div>\n        <div class={style.tableItem}>\n          <DebutVTubersTable />\n        </div>\n        <div class={style.tableItem}>\n          <GrowingVTubersTable dictionary={props.dictionary} />\n        </div>\n        <div class={style.tableItem}>\n          <TopVTubersTable />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default HomePage;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport YouTubeTwitchCount from '../components/YouTubeTwitchCount';\nimport { CountType } from '../types/Common/CountType';\n\nconst numberToCountType = (popularity?: number): CountType | undefined => {\n  if (popularity) return { tag: 'has', count: popularity };\n  return undefined;\n};\n\nexport interface PopularityColumnRowData {\n  YouTubePopularity?: number;\n  TwitchPopularity?: number;\n}\n\nexport const PopularityColumn = <\n  RowData extends PopularityColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularity\">Popularity</Text>,\n    cell: (row: RowData): JSX.Element => (\n      <YouTubeTwitchCount\n        YouTubeCount={numberToCountType(row.YouTubePopularity)}\n        TwitchCount={numberToCountType(row.TwitchPopularity)}\n      />\n    ),\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport YouTubeTwitchCount from '../components/YouTubeTwitchCount';\nimport { CountType } from '../types/Common/CountType';\n\nexport interface YouTubeTwitchCountColumnRowData {\n  YouTubeSubscriber?: CountType;\n  TwitchFollower?: CountType;\n}\n\nexport const YouTubeTwitchCountColumn = <\n  RowData extends YouTubeTwitchCountColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: (\n      <Text id=\"table.YouTubeTwitchCount\">\n        YouTube Subscribers + Twitch Followers\n      </Text>\n    ),\n    cell: (row: RowData): JSX.Element => (\n      <YouTubeTwitchCount\n        YouTubeCount={row.YouTubeSubscriber}\n        TwitchCount={row.TwitchFollower}\n      />\n    ),\n  };\n};\n","import { Activity } from '../types/Common/Activity';\n\nconst ActivityRowStyles = [\n  {\n    when: (row: { activity: Activity }): boolean =>\n      row.activity === 'preparing',\n    style: {\n      backgroundColor: 'rgba(141, 209, 157, 0.9)',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  },\n  {\n    when: (row: { activity: Activity }): boolean => row.activity === 'graduate',\n    style: {\n      backgroundColor: 'rgba(123, 123, 123, 0.9)',\n      color: 'white',\n      '&:hover': {\n        cursor: 'not-allowed',\n      },\n    },\n  },\n];\n\nexport default ActivityRowStyles;\n","// extracted by mini-css-extract-plugin\nexport default {\"verticalFlex\":\"verticalFlex__i3ZgG\"};","import { FunctionalComponent, h } from 'preact';\nimport { getFormattedDateTime } from '../../utils/DateTimeUtils';\nimport ProfileImagePopUp from '../ProfileImagePopup';\nimport VideoLink from '../VideoLink';\nimport style from './style.module.css';\n\nexport interface LivestreamComponentProps {\n  id?: number;\n  VTuberId: string;\n  imgUrl?: string;\n  name: string;\n  thumbnailUrl: string;\n  videoUrl: string;\n  startTime: Date;\n}\n\nconst LivestreamComponent: FunctionalComponent<LivestreamComponentProps> = (\n  props: LivestreamComponentProps\n): h.JSX.Element => {\n  return (\n    <div id={`comp-${props.id}`} class={style.verticalFlex}>\n      <ProfileImagePopUp\n        VTuberId={props.VTuberId}\n        imgUrl={props.imgUrl}\n        name={props.name}\n      />\n      <VideoLink thumbnailUrl={props.thumbnailUrl} videoUrl={props.videoUrl} />\n      <div>\n        <span>{getFormattedDateTime(props.startTime)}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default LivestreamComponent;\n","// extracted by mini-css-extract-plugin\nexport default {\"horizontalFlex\":\"horizontalFlex__u+MYR\"};","import { FunctionalComponent, h } from 'preact';\nimport { LivestreamDisplayData } from '../../types/TableDisplayData/LivestreamDisplayData';\nimport LivestreamComponent from '../LivestreamComponent';\nimport style from './style.module.css';\n\nexport interface HorizontalLivestreamsBoxProps {\n  data: Array<LivestreamDisplayData>;\n}\n\nconst HorizontalLivestreamsBox: FunctionalComponent<\n  HorizontalLivestreamsBoxProps\n> = (props: HorizontalLivestreamsBoxProps): h.JSX.Element => {\n  return (\n    <div class={style.horizontalFlex}>\n      {props.data.map((e, index) => (\n        <LivestreamComponent\n          id={index}\n          key={index}\n          VTuberId={e.VTuberId}\n          imgUrl={e.imgUrl}\n          name={e.name}\n          thumbnailUrl={e.thumbnailUrl}\n          videoUrl={e.videoUrl}\n          startTime={e.startTime}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default HorizontalLivestreamsBox;\n","import { TableProps } from 'react-data-table-component';\nimport ActivityRowStyles from '../style/ActivityRowStyles';\nimport { Activity } from '../types/Common/Activity';\n\n// columns and data are empty, user should fill them when using DefaultDataTableProps\nconst DefaultDataTableProps = <\n  T extends { activity: Activity }\n>(): TableProps<T> => ({\n  columns: [],\n  data: [],\n  conditionalRowStyles: ActivityRowStyles,\n});\n\nexport default DefaultDataTableProps;\n","import { Fragment, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { getNationalityModifierState } from '../global/DisplayNationality';\nimport { NationalityModifier } from '../types/Common/NationalityModifier';\n\nexport const GetCurrentNationalitySpan = (): JSX.Element | null => {\n  const nationalityModifier: NationalityModifier =\n    getNationalityModifierState();\n\n  switch (nationalityModifier) {\n    case 'TW':\n    case 'HK':\n    case 'MY':\n      return (\n        <>\n          {' '}\n          (<Text id=\"text.onlyShowing\">only showing </Text>\n          <Text id={`nationalityTitle.${nationalityModifier}`}>\n            placeholder\n          </Text>{' '}\n          VTuber)\n        </>\n      );\n    case 'all':\n    default:\n      return null;\n  }\n};\n","import * as Api from '../../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useEffect, useState } from 'preact/hooks';\nimport DataTable, { TableColumn } from 'react-data-table-component';\nimport { CompactTableStyle } from '../../../style/CompactTableStyle';\nimport { NameColumn } from '../../../tableTypes/NameColumn';\nimport { PopularityColumn } from '../../../tableTypes/PopularityColumn';\nimport { YouTubeTwitchCountColumn } from '../../../tableTypes/YouTubeTwitchCountColumn';\nimport { VTuberPopularityDisplayData } from '../../../types/TableDisplayData/VTuberPopularityDisplayData';\nimport DefaultDataTableProps from '../../../utils/DefaultDataTableProps';\nimport { PopularityCountDescendingSort } from '../../../utils/sort/PopularityCountSort';\nimport { VTuberPopularityToDisplay } from '../../../utils/transform/PopularityTransform';\nimport QuestionMarkToolTip from '../../QuestionMarkToolTip';\nimport { PopularVideoColumn } from '../../../tableTypes/PopularVideoColumn';\nimport { RankingColumn } from '../../../tableTypes/RankingColumn';\nimport ActivityRowStyles from '../../../style/ActivityRowStyles';\n\nconst TrendingVTubersTable: FunctionalComponent = () => {\n  const columns: Array<TableColumn<VTuberPopularityDisplayData>> = [\n    {\n      ...RankingColumn(),\n      width: '30px',\n    },\n    NameColumn(),\n    PopularityColumn(),\n    YouTubeTwitchCountColumn(),\n    PopularVideoColumn(),\n  ];\n\n  const [data, setData] = useState<Array<VTuberPopularityDisplayData>>([]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getTrendingVTubers('10').then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .map((e, index) => VTuberPopularityToDisplay(e, index + 1))\n          .sort(PopularityCountDescendingSort)\n          .map((e, index) => ({ ...e, ranking: index + 1 }))\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h3>\n        <Text id=\"header.trendingVTubers\">Trending VTubers</Text>\n        {/* Yes. Adding a space between two texts require a Fragment */}\n        <> </>\n        <Text id=\"header.top10\">Top 10</Text>\n        <QuestionMarkToolTip\n          width=\"300px\"\n          fontSize=\"13px\"\n          text={<Text id=\"toolTip.trendingVTubers\">tooltip text</Text>}\n        />\n      </h3>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={data}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n      />\n    </>\n  );\n};\n\nexport default TrendingVTubersTable;\n","export const PopularityCountAscendingSort = <\n  T extends { YouTubePopularity?: number; TwitchPopularity?: number }\n>(\n  rowA: T,\n  rowB: T\n): number => {\n  const aCount = (rowA.YouTubePopularity ?? 0) + (rowA.TwitchPopularity ?? 0);\n  const bCount = (rowB.YouTubePopularity ?? 0) + (rowB.TwitchPopularity ?? 0);\n\n  if (aCount > bCount) return 1;\n\n  if (bCount > aCount) return -1;\n\n  return 0;\n};\n\nexport const PopularityCountDescendingSort = <\n  T extends { YouTubePopularity?: number; TwitchPopularity?: number }\n>(\n  rowA: T,\n  rowB: T\n): number => PopularityCountAscendingSort(rowA, rowB) * -1;\n","const IsTodayRowStyle = [\n  {\n    when: (row: { isToday: boolean }): boolean => row.isToday,\n    style: {\n      color: 'mediumblue',\n    },\n  },\n];\n\nexport default IsTodayRowStyle;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport { HasCountType } from '../types/Common/CountType';\n\nexport interface YouTubeSubscriberColumnRowData {\n  YouTubeSubscriber: HasCountType;\n}\n\nexport const YouTubeSubscriberColumn = <\n  RowData extends YouTubeSubscriberColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.YouTubeSubscriberCount\">YouTube Subscribers</Text>,\n    selector: (row: RowData): number => row.YouTubeSubscriber.count,\n  };\n};\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\n\nexport interface DebutDateColumnRowData {\n  debutDate: string;\n}\n\nexport const DebutDateColumn = <\n  RowData extends DebutDateColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.debutDate\">Debut Date</Text>,\n    selector: (row: { debutDate: string }): string => row.debutDate,\n  };\n};\n","import { VTuberPopularityData } from '../../types/ApiData/VTuberPopularityData';\nimport { VTuberPopularityDisplayData } from '../../types/TableDisplayData/VTuberPopularityDisplayData';\nimport { VTuberBasicToDisplay } from './BasicTransform';\n\nexport const VTuberPopularityToDisplay = (\n  e: VTuberPopularityData,\n  ranking: number\n): VTuberPopularityDisplayData => ({\n  ...VTuberBasicToDisplay(e),\n  YouTubePopularity: e.YouTube?.popularity,\n  TwitchPopularity: e.Twitch?.popularity,\n  ranking: ranking,\n});\n","import * as Api from '../../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useEffect } from 'preact/hooks';\nimport DataTable, { TableColumn } from 'react-data-table-component';\nimport ActivityRowStyles from '../../../style/ActivityRowStyles';\nimport { CompactTableStyle } from '../../../style/CompactTableStyle';\nimport IsTodayRowStyle from '../../../style/IsTodayRowStyles';\nimport { NameColumn } from '../../../tableTypes/NameColumn';\nimport { PopularVideoColumn } from '../../../tableTypes/PopularVideoColumn';\nimport { YouTubeTwitchCountColumn } from '../../../tableTypes/YouTubeTwitchCountColumn';\nimport { VTuberDebutDisplayData } from '../../../types/TableDisplayData/VTuberDebutDisplayData';\nimport { getISODateString } from '../../../utils/DateTimeUtils';\nimport DefaultDataTableProps from '../../../utils/DefaultDataTableProps';\nimport { VTuberDebutToDisplay } from '../../../utils/transform/DebutTransform';\nimport { DebutDateColumn } from '../../../tableTypes/DebutDateColumn';\n\nconst DebutVTubersTable: FunctionalComponent = () => {\n  const columns: Array<TableColumn<VTuberDebutDisplayData>> = [\n    {\n      ...DebutDateColumn(),\n      width: '100px',\n    },\n    NameColumn(),\n    YouTubeTwitchCountColumn(),\n    PopularVideoColumn(),\n  ];\n\n  // search filter\n  const [data, setData] = useState<Array<VTuberDebutDisplayData>>([]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    const todayDate: string = getISODateString(new Date(), 8);\n    await Api.getDebutVTubers('next-7-days').then((res) => {\n      setData(\n        res.data.VTubers.map((e) => e)\n          .sort((a, b) => a.debutDate.localeCompare(b.debutDate))\n          .map((e) => VTuberDebutToDisplay(e, todayDate))\n      );\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h3>\n        <Text id=\"header.debutVTubersIn7Days\">VTubers Debut in 7 days</Text>\n      </h3>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={data}\n        // Typescript does not accept concat two array of different types\n        conditionalRowStyles={ActivityRowStyles.concat(\n          IsTodayRowStyle as Array<any>\n        )}\n        customStyles={CompactTableStyle}\n        progressPending={pending}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n      />\n    </>\n  );\n};\n\nexport default DebutVTubersTable;\n","import { TableColumn } from 'react-data-table-component';\n\nexport interface RankingColumnRowData {\n  ranking: number;\n}\n\nexport const RankingColumn = <\n  RowData extends RankingColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: '#',\n    selector: (row: RowData): number => row.ranking,\n    wrap: false,\n  };\n};\n","import { VTuberDebutData } from '../../types/ApiData/VTuberDebutData';\nimport { VTuberDebutDisplayData } from '../../types/TableDisplayData/VTuberDebutDisplayData';\nimport { VTuberBasicToDisplay } from './BasicTransform';\n\nexport const VTuberDebutToDisplay = (\n  e: VTuberDebutData,\n  todayDate: string\n): VTuberDebutDisplayData => ({\n  ...VTuberBasicToDisplay(e),\n  debutDate: e.debutDate,\n  isToday: e.debutDate === todayDate,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"tooltip__vtGmz\",\"tooltipText\":\"tooltipText__pA-zc\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface ToolTipProps {\n  text: string | React.ReactNode;\n  children: React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst ToolTip: FunctionalComponent<ToolTipProps> = (\n  props: ToolTipProps\n): h.JSX.Element => {\n  return (\n    <div class={style.tooltip}>\n      {props.children}\n      <span\n        class={style.tooltipText}\n        style={{ width: props.width, fontSize: props.fontSize }}\n      >\n        {props.text}\n      </span>\n    </div>\n  );\n};\n\nexport default ToolTip;\n","import { h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { TableColumn } from 'react-data-table-component';\nimport ShowVideoButton from '../components/ShowVideoButton';\nimport { VideoInfo } from '../types/Common/VideoInfo';\n\nexport interface PopularVideoColumnRowData {\n  popularVideo?: VideoInfo;\n}\n\nexport const PopularVideoColumn = <\n  RowData extends PopularVideoColumnRowData\n>(): TableColumn<RowData> => {\n  return {\n    name: <Text id=\"table.popularVideo\">Popular Video</Text>,\n    cell: (row: RowData): JSX.Element | null =>\n      row.popularVideo !== undefined ? (\n        <ShowVideoButton popularVideo={row.popularVideo} />\n      ) : null,\n  };\n};\n","import { VTuberData } from '../../types/ApiData/VTuberData';\nimport { VTuberDisplayData } from '../../types/TableDisplayData/VTuberDisplayData';\n\nexport const VTuberBasicToDisplay = (e: VTuberData): VTuberDisplayData => ({\n  id: e.id,\n  activity: e.activity,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  YouTubeId: e.YouTube?.id,\n  YouTubeSubscriber: e.YouTube?.subscriber,\n  TwitchId: e.Twitch?.id,\n  TwitchFollower: e.Twitch?.follower,\n  popularVideo: e.popularVideo,\n  group: e.group,\n  nationality: e.nationality,\n});\n","import * as Api from '../../../services/ApiService';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Text } from 'preact-i18n';\nimport { useState, useEffect } from 'preact/hooks';\nimport DataTable, { TableColumn } from 'react-data-table-component';\nimport ActivityRowStyles from '../../../style/ActivityRowStyles';\nimport { CompactTableStyle } from '../../../style/CompactTableStyle';\nimport { NameColumn } from '../../../tableTypes/NameColumn';\nimport { PopularVideoColumn } from '../../../tableTypes/PopularVideoColumn';\nimport { YouTubeTwitchCountColumn } from '../../../tableTypes/YouTubeTwitchCountColumn';\nimport { VTuberDisplayData } from '../../../types/TableDisplayData/VTuberDisplayData';\nimport DefaultDataTableProps from '../../../utils/DefaultDataTableProps';\nimport { VTuberBasicToDisplay } from '../../../utils/transform/BasicTransform';\n\nconst TopVTubersTable: FunctionalComponent = () => {\n  const columns: Array<TableColumn<VTuberDisplayData>> = [\n    NameColumn(),\n    YouTubeTwitchCountColumn(),\n    PopularVideoColumn(),\n  ];\n\n  const [data, setData] = useState<Array<VTuberDisplayData>>([]);\n\n  const [pending, setPending] = useState(true);\n\n  const getVTubers = async (): Promise<void> => {\n    await Api.getVTubers('10').then((res) => {\n      setData(res.data.VTubers.map((e) => VTuberBasicToDisplay(e)));\n      setPending(false);\n    });\n  };\n\n  useEffect(() => {\n    getVTubers();\n  }, []);\n\n  return (\n    <>\n      <h3>\n        <Text id=\"header.YouTubeSubPlusTwitchFollowers\">\n          YouTube Subscribers + Twitch Followers\n        </Text>\n        <> </>\n        <Text id=\"header.top10\">Top 10</Text>\n      </h3>\n      <DataTable\n        {...DefaultDataTableProps}\n        columns={columns}\n        data={data}\n        conditionalRowStyles={ActivityRowStyles}\n        customStyles={CompactTableStyle}\n        progressComponent={<Text id=\"text.loading\">Loading...</Text>}\n        progressPending={pending}\n      />\n    </>\n  );\n};\n\nexport default TopVTubersTable;\n","import { LivestreamData } from '../../types/ApiData/LivestreamData';\nimport { LivestreamDisplayData } from '../../types/TableDisplayData/LivestreamDisplayData';\n\nexport const LivestreamToDisplayData = (\n  e: LivestreamData,\n  index: number\n): LivestreamDisplayData => ({\n  id: index,\n  VTuberId: e.id,\n  name: e.name,\n  imgUrl: e.imgUrl,\n  title: e.title,\n  thumbnailUrl: e.thumbnailUrl,\n  videoUrl: e.videoUrl,\n  startTime: new Date(e.startTime),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"thumbnail\":\"thumbnail__BdvoG\"};","import { FunctionalComponent, h } from 'preact';\nimport style from './style.module.css';\n\nexport interface VideoLinkProps {\n  thumbnailUrl: string;\n  videoUrl: string;\n}\n\nconst VideoLink: FunctionalComponent<VideoLinkProps> = (\n  props: VideoLinkProps\n): h.JSX.Element => {\n  return (\n    <a href={props.videoUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n      <img class={style.thumbnail} src={props.thumbnailUrl} loading=\"lazy\" />\n    </a>\n  );\n};\n\nexport default VideoLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"questionMark\":\"questionMark__RT3wD\"};","import { FunctionalComponent, h } from 'preact';\nimport ToolTip from '../ToolTip';\nimport style from './style.module.css';\n\nexport interface QuestionMarkToolTip {\n  text: string | React.ReactNode;\n  width?: string;\n  fontSize?: string;\n}\n\nconst QuestionMarkToolTip: FunctionalComponent<QuestionMarkToolTip> = (\n  props: QuestionMarkToolTip\n): h.JSX.Element => {\n  return (\n    <ToolTip text={props.text} width={props.width} fontSize={props.fontSize}>\n      <img class={style.questionMark} />\n    </ToolTip>\n  );\n};\n\nexport default QuestionMarkToolTip;\n"],"sourceRoot":""}